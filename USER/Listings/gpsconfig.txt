; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\gpsconfig.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\gpsconfig.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\gpsconfig.crf ..\GPS\GPSConfig.c]
                          THUMB

                          AREA ||i.GPSConfigInit||, CODE, READONLY, ALIGN=2

                  GPSConfigInit PROC
;;;3      
;;;4      void GPSConfigInit(uint16_t baud)
000000  b510              PUSH     {r4,lr}
;;;5      {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;6      	GPIO_InitTypeDef GPIO_InitStructure;
;;;7      	USART_InitTypeDef USART_InitStructure;
;;;8      	
;;;9      	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000006  2003              MOVS     r0,#3
000008  f88d0016          STRB     r0,[sp,#0x16]
;;;10     	
;;;11     	//USART4 RX
;;;12     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;
00000c  f44f6000          MOV      r0,#0x800
000010  f8ad0014          STRH     r0,[sp,#0x14]
;;;13       	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000014  2004              MOVS     r0,#4
000016  f88d0017          STRB     r0,[sp,#0x17]
;;;14       	GPIO_Init(GPIOC, &GPIO_InitStructure);
00001a  a905              ADD      r1,sp,#0x14
00001c  4821              LDR      r0,|L1.164|
00001e  f7fffffe          BL       GPIO_Init
;;;15     
;;;16     	//USART4 TX
;;;17     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
000022  f44f6080          MOV      r0,#0x400
000026  f8ad0014          STRH     r0,[sp,#0x14]
;;;18       	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
00002a  2018              MOVS     r0,#0x18
00002c  f88d0017          STRB     r0,[sp,#0x17]
;;;19       	GPIO_Init(GPIOC, &GPIO_InitStructure);
000030  a905              ADD      r1,sp,#0x14
000032  481c              LDR      r0,|L1.164|
000034  f7fffffe          BL       GPIO_Init
;;;20     	
;;;21     	//GPS 电源
;;;22     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
000038  f44f7080          MOV      r0,#0x100
00003c  f8ad0014          STRH     r0,[sp,#0x14]
;;;23       	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000040  2003              MOVS     r0,#3
000042  f88d0016          STRB     r0,[sp,#0x16]
;;;24       	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000046  2010              MOVS     r0,#0x10
000048  f88d0017          STRB     r0,[sp,#0x17]
;;;25       	GPIO_Init(GPIOC, &GPIO_InitStructure);
00004c  a905              ADD      r1,sp,#0x14
00004e  4815              LDR      r0,|L1.164|
000050  f7fffffe          BL       GPIO_Init
;;;26     
;;;27     	GPIO_ResetBits(GPIOC,GPIO_Pin_8);	//默认上电的时候开启GPS电源
000054  f44f7180          MOV      r1,#0x100
000058  4812              LDR      r0,|L1.164|
00005a  f7fffffe          BL       GPIO_ResetBits
;;;28     	
;;;29     	USART_InitStructure.USART_BaudRate            = baud  ;	//GPS  通信波特率
00005e  9401              STR      r4,[sp,#4]
;;;30     	USART_InitStructure.USART_WordLength          = USART_WordLength_8b;
000060  2000              MOVS     r0,#0
000062  f8ad0008          STRH     r0,[sp,#8]
;;;31     	USART_InitStructure.USART_StopBits            = USART_StopBits_1;
000066  f8ad000a          STRH     r0,[sp,#0xa]
;;;32     	USART_InitStructure.USART_Parity              = USART_Parity_No ;
00006a  f8ad000c          STRH     r0,[sp,#0xc]
;;;33     	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
00006e  f8ad0010          STRH     r0,[sp,#0x10]
;;;34     	USART_InitStructure.USART_Mode                = USART_Mode_Rx | USART_Mode_Tx;
000072  200c              MOVS     r0,#0xc
000074  f8ad000e          STRH     r0,[sp,#0xe]
;;;35     	
;;;36     	USART_Init(UART4, &USART_InitStructure);
000078  a901              ADD      r1,sp,#4
00007a  480b              LDR      r0,|L1.168|
00007c  f7fffffe          BL       USART_Init
;;;37     	USART_ITConfig(UART4, USART_IT_RXNE, ENABLE);
000080  2201              MOVS     r2,#1
000082  f2405125          MOV      r1,#0x525
000086  4808              LDR      r0,|L1.168|
000088  f7fffffe          BL       USART_ITConfig
;;;38     	USART_ITConfig(UART4, USART_IT_TC, ENABLE);    //UBX协议对GPS模块进行配置
00008c  2201              MOVS     r2,#1
00008e  f2406126          MOV      r1,#0x626
000092  4805              LDR      r0,|L1.168|
000094  f7fffffe          BL       USART_ITConfig
;;;39     	USART_Cmd(UART4, ENABLE);
000098  2101              MOVS     r1,#1
00009a  4803              LDR      r0,|L1.168|
00009c  f7fffffe          BL       USART_Cmd
;;;40     	
;;;41     	
;;;42     }
0000a0  b006              ADD      sp,sp,#0x18
0000a2  bd10              POP      {r4,pc}
;;;43     void TIM2ConfigInit(void )
                          ENDP

                  |L1.164|
                          DCD      0x40011000
                  |L1.168|
                          DCD      0x40004c00

                          AREA ||i.TIM2ConfigInit||, CODE, READONLY, ALIGN=1

                  TIM2ConfigInit PROC
;;;42     }
;;;43     void TIM2ConfigInit(void )
000000  b50e              PUSH     {r1-r3,lr}
;;;44     {
;;;45     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;46     
;;;47     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE); //时钟使能
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;48     	
;;;49     	//定时器TIM2初始化
;;;50     	TIM_TimeBaseStructure.TIM_Period = 10;          //设置在下一个更新事件装入活动的自动重装载寄存器周期的值	
00000a  200a              MOVS     r0,#0xa
00000c  f8ad0004          STRH     r0,[sp,#4]
;;;51     	TIM_TimeBaseStructure.TIM_Prescaler =7199;      //设置用来作为TIMx时钟频率除数的预分频值
000010  f641401f          MOV      r0,#0x1c1f
000014  f8ad0000          STRH     r0,[sp,#0]
;;;52     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;      //设置时钟分割:TDTS = Tck_tim
000018  2000              MOVS     r0,#0
00001a  f8ad0006          STRH     r0,[sp,#6]
;;;53     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //TIM向上计数模式
00001e  f8ad0002          STRH     r0,[sp,#2]
;;;54     	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure); //根据指定的参数初始化TIMx的时间基数单位
000022  4669              MOV      r1,sp
000024  f04f4080          MOV      r0,#0x40000000
000028  f7fffffe          BL       TIM_TimeBaseInit
;;;55      
;;;56     	TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE );       //使能指定的TIM2中断,允许更新中断
00002c  2201              MOVS     r2,#1
00002e  4611              MOV      r1,r2
000030  0790              LSLS     r0,r2,#30
000032  f7fffffe          BL       TIM_ITConfig
;;;57     
;;;58     	
;;;59     	
;;;60     //	TIM_Cmd(TIM2, ENABLE);  //使能TIMx		
;;;61     }
000036  bd0e              POP      {r1-r3,pc}
;;;62     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\GPS\\GPSConfig.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_GPSConfig_c_8a166841____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_GPSConfig_c_8a166841____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_GPSConfig_c_8a166841____REVSH|
#line 144
|__asm___11_GPSConfig_c_8a166841____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
