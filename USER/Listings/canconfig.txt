; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\canconfig.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\canconfig.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\canconfig.crf ..\HAEDWARE\CANConfig.c]
                          THUMB

                          AREA ||i.CAN1Config||, CODE, READONLY, ALIGN=2

                  CAN1Config PROC
;;;6      
;;;7      void CAN1Config(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;8      {
;;;9      	GPIO_InitTypeDef  GPIO_InitStructure;
;;;10     	CAN_InitTypeDef   CAN_InitStructure;
;;;11     	
;;;12     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能CAN1时钟	
000002  2101              MOVS     r1,#1
000004  0648              LSLS     r0,r1,#25
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;13     	CAN_DeInit(CAN1);
00000a  4821              LDR      r0,|L1.144|
00000c  f7fffffe          BL       CAN_DeInit
;;;14     	CAN_StructInit(&CAN_InitStructure);
000010  4668              MOV      r0,sp
000012  f7fffffe          BL       CAN_StructInit
;;;15     	
;;;16     	
;;;17     	//PB14  CANC
;;;18     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_14;
000016  f44f4080          MOV      r0,#0x4000
00001a  f8ad000c          STRH     r0,[sp,#0xc]
;;;19     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00001e  2003              MOVS     r0,#3
000020  f88d000e          STRB     r0,[sp,#0xe]
;;;20       	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000024  2010              MOVS     r0,#0x10
000026  f88d000f          STRB     r0,[sp,#0xf]
;;;21       	GPIO_Init(GPIOB, &GPIO_InitStructure);
00002a  a903              ADD      r1,sp,#0xc
00002c  4819              LDR      r0,|L1.148|
00002e  f7fffffe          BL       GPIO_Init
;;;22     	GPIO_ResetBits(GPIOB, GPIO_Pin_14);//使能CAN芯片 VP230
000032  f44f4180          MOV      r1,#0x4000
000036  4817              LDR      r0,|L1.148|
000038  f7fffffe          BL       GPIO_ResetBits
;;;23     	
;;;24     	//CAN1_RX   -  PB8;
;;;25     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
00003c  f44f7080          MOV      r0,#0x100
000040  f8ad000c          STRH     r0,[sp,#0xc]
;;;26     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
000044  2048              MOVS     r0,#0x48
000046  f88d000f          STRB     r0,[sp,#0xf]
;;;27     	GPIO_Init(GPIOB, &GPIO_InitStructure);
00004a  a903              ADD      r1,sp,#0xc
00004c  4811              LDR      r0,|L1.148|
00004e  f7fffffe          BL       GPIO_Init
;;;28     	//CAN1_TX   -  PB9;
;;;29     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
000052  f44f7000          MOV      r0,#0x200
000056  f8ad000c          STRH     r0,[sp,#0xc]
;;;30     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
00005a  2018              MOVS     r0,#0x18
00005c  f88d000f          STRB     r0,[sp,#0xf]
;;;31     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000060  2003              MOVS     r0,#3
000062  f88d000e          STRB     r0,[sp,#0xe]
;;;32     	GPIO_Init(GPIOB, &GPIO_InitStructure);
000066  a903              ADD      r1,sp,#0xc
000068  480a              LDR      r0,|L1.148|
00006a  f7fffffe          BL       GPIO_Init
;;;33     
;;;34     	GPIO_PinRemapConfig(GPIO_Remap1_CAN1 , ENABLE);
00006e  2101              MOVS     r1,#1
000070  f44f10ea          MOV      r0,#0x1d4000
000074  f7fffffe          BL       GPIO_PinRemapConfig
;;;35     	
;;;36     	
;;;37     	CAN1_BaudSet(CANBAUD_250K);        //先设置1M的 CAN 波特率
000078  2001              MOVS     r0,#1
00007a  f7fffffe          BL       CAN1_BaudSet
;;;38     	CAN1_ClearFilter();              //清除滤波器
00007e  f7fffffe          BL       CAN1_ClearFilter
;;;39     	
;;;40     //	if((varOperation.canBaud == 8) ||(varOperation.canBaud == 9))
;;;41     //		CAN1_BaudSet(CANBAUD_250K);           //设置CAN波特率为250K
;;;42     //	else if((varOperation.canBaud == 6) ||(varOperation.canBaud == 7))
;;;43     //		CAN1_BaudSet(CANBAUD_500K);           //设置CAN波特率为500K
;;;44     //	CAN1_SetFilter(varOperation.canRxId,varOperation.canIdType);     //设置滤波器  //潍柴：0x18DAFB10   渣土车：0x18DAFA00
;;;45     
;;;46     //	CAN1_BaudSet(CANBAUD_500K);           //设置CAN波特率为500K
;;;47     //	CAN1_SetFilter(0x7E8,CAN_ID_STD);     //设置滤波器
;;;48     	
;;;49     //	CAN1_ClearFilter();                   //清除滤波器
;;;50     	
;;;51     	CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);				//FIFO1消息挂号中断允许.	
000082  2201              MOVS     r2,#1
000084  2110              MOVS     r1,#0x10
000086  4802              LDR      r0,|L1.144|
000088  f7fffffe          BL       CAN_ITConfig
;;;52     	
;;;53     	
;;;54     }
00008c  bd1f              POP      {r0-r4,pc}
;;;55     //CAN1 波特率设置
                          ENDP

00008e  0000              DCW      0x0000
                  |L1.144|
                          DCD      0x40006400
                  |L1.148|
                          DCD      0x40010c00

                          AREA ||i.CAN1_BaudSet||, CODE, READONLY, ALIGN=2

                  CAN1_BaudSet PROC
;;;55     //CAN1 波特率设置
;;;56     void CAN1_BaudSet(CANBAUD_Enum baud)
000000  b53e              PUSH     {r1-r5,lr}
;;;57     {
000002  4604              MOV      r4,r0
;;;58     	CAN_InitTypeDef         CAN_InitStructure;
;;;59     	
;;;60     	CAN_InitStructure.CAN_TTCM = DISABLE;
000004  2000              MOVS     r0,#0
000006  f88d0006          STRB     r0,[sp,#6]
;;;61     	CAN_InitStructure.CAN_ABOM = DISABLE;
00000a  f88d0007          STRB     r0,[sp,#7]
;;;62     	CAN_InitStructure.CAN_AWUM = DISABLE;
00000e  f88d0008          STRB     r0,[sp,#8]
;;;63     	CAN_InitStructure.CAN_NART = DISABLE;
000012  f88d0009          STRB     r0,[sp,#9]
;;;64     	CAN_InitStructure.CAN_RFLM = DISABLE;
000016  f88d000a          STRB     r0,[sp,#0xa]
;;;65     	CAN_InitStructure.CAN_TXFP = DISABLE;
00001a  f88d000b          STRB     r0,[sp,#0xb]
;;;66     	CAN_InitStructure.CAN_Mode = CAN_Mode_Normal;//正常模式
00001e  f88d0002          STRB     r0,[sp,#2]
;;;67     
;;;68     	CAN_InitStructure.CAN_SJW = CAN_SJW_1tq;
000022  f88d0003          STRB     r0,[sp,#3]
;;;69     	CAN_InitStructure.CAN_BS1 = CAN_BS1_9tq;
000026  2008              MOVS     r0,#8
000028  f88d0004          STRB     r0,[sp,#4]
;;;70     	CAN_InitStructure.CAN_BS2 = CAN_BS2_8tq;
00002c  2007              MOVS     r0,#7
00002e  f88d0005          STRB     r0,[sp,#5]
;;;71     	switch(baud)
000032  b134              CBZ      r4,|L2.66|
000034  2c01              CMP      r4,#1
000036  d005              BEQ      |L2.68|
000038  2c02              CMP      r4,#2
00003a  d007              BEQ      |L2.76|
00003c  2c03              CMP      r4,#3
00003e  d10d              BNE      |L2.92|
000040  e008              B        |L2.84|
                  |L2.66|
;;;72     	{
;;;73     		case CANBAUD_100K:break;
000042  e00c              B        |L2.94|
                  |L2.68|
;;;74     		case CANBAUD_250K:CAN_InitStructure.CAN_Prescaler = 8;break;
000044  2008              MOVS     r0,#8
000046  f8ad0000          STRH     r0,[sp,#0]
00004a  e008              B        |L2.94|
                  |L2.76|
;;;75     		case CANBAUD_500K:CAN_InitStructure.CAN_Prescaler = 4;break;
00004c  2004              MOVS     r0,#4
00004e  f8ad0000          STRH     r0,[sp,#0]
000052  e004              B        |L2.94|
                  |L2.84|
;;;76     		case CANBAUD_1M  :CAN_InitStructure.CAN_Prescaler = 2;break;
000054  2002              MOVS     r0,#2
000056  f8ad0000          STRH     r0,[sp,#0]
00005a  e000              B        |L2.94|
                  |L2.92|
;;;77     		default:break;
00005c  bf00              NOP      
                  |L2.94|
00005e  bf00              NOP                            ;73
;;;78     	}
;;;79     	CAN_Init(CAN1, &CAN_InitStructure);
000060  4669              MOV      r1,sp
000062  4802              LDR      r0,|L2.108|
000064  f7fffffe          BL       CAN_Init
;;;80     }
000068  bd3e              POP      {r1-r5,pc}
;;;81     //清除滤波器
                          ENDP

00006a  0000              DCW      0x0000
                  |L2.108|
                          DCD      0x40006400

                          AREA ||i.CAN1_ClearFilter||, CODE, READONLY, ALIGN=2

                  CAN1_ClearFilter PROC
;;;81     //清除滤波器
;;;82     void CAN1_ClearFilter(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;83     {
;;;84     	CAN_FilterInitTypeDef   CAN_FilterInitStructure;
;;;85     	
;;;86     	CAN_FilterInitStructure.CAN_FilterNumber=1;	//过滤器1
000002  2001              MOVS     r0,#1
000004  f88d000a          STRB     r0,[sp,#0xa]
;;;87     	CAN_FilterInitStructure.CAN_FilterMode=CAN_FilterMode_IdMask; 	//屏蔽位模式
000008  2000              MOVS     r0,#0
00000a  f88d000b          STRB     r0,[sp,#0xb]
;;;88     	CAN_FilterInitStructure.CAN_FilterScale=CAN_FilterScale_32bit; 	//32位宽 
00000e  2001              MOVS     r0,#1
000010  f88d000c          STRB     r0,[sp,#0xc]
;;;89     	
;;;90     	CAN_FilterInitStructure.CAN_FilterIdHigh=0x0000;	//32位ID
000014  2000              MOVS     r0,#0
000016  f8ad0000          STRH     r0,[sp,#0]
;;;91     	CAN_FilterInitStructure.CAN_FilterIdLow=0x0000;
00001a  f8ad0002          STRH     r0,[sp,#2]
;;;92     	CAN_FilterInitStructure.CAN_FilterMaskIdHigh=0x0000;//32位MASK
00001e  f8ad0004          STRH     r0,[sp,#4]
;;;93     	CAN_FilterInitStructure.CAN_FilterMaskIdLow=0x0000;
000022  f8ad0006          STRH     r0,[sp,#6]
;;;94     	CAN_FilterInitStructure.CAN_FilterFIFOAssignment=CAN_Filter_FIFO1;//过滤器1关联到FIFO1
000026  2001              MOVS     r0,#1
000028  f8ad0008          STRH     r0,[sp,#8]
;;;95     	
;;;96     	CAN_FilterInitStructure.CAN_FilterActivation=ENABLE;//激活过滤器1
00002c  f88d000d          STRB     r0,[sp,#0xd]
;;;97     	CAN_FIFORelease(CAN1,CAN_FIFO1);
000030  2101              MOVS     r1,#1
000032  4803              LDR      r0,|L3.64|
000034  f7fffffe          BL       CAN_FIFORelease
;;;98     	CAN_FilterInit(&CAN_FilterInitStructure);			//滤波器初始化
000038  4668              MOV      r0,sp
00003a  f7fffffe          BL       CAN_FilterInit
;;;99     }
00003e  bd1f              POP      {r0-r4,pc}
;;;100    //设置滤波器
                          ENDP

                  |L3.64|
                          DCD      0x40006400

                          AREA ||i.CAN1_SetFilter||, CODE, READONLY, ALIGN=1

                  CAN1_SetFilter PROC
;;;100    //设置滤波器
;;;101    void CAN1_SetFilter(uint32_t canId,uint32_t canIde)
000000  b57f              PUSH     {r0-r6,lr}
;;;102    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;103    	CAN_FilterInitTypeDef  CAN_FilterInitStructure;
;;;104    
;;;105    	CAN_FilterInitStructure.CAN_FilterNumber = 0;
000006  2000              MOVS     r0,#0
000008  f88d000a          STRB     r0,[sp,#0xa]
;;;106    	CAN_FilterInitStructure.CAN_FilterMode = CAN_FilterMode_IdMask;
00000c  f88d000b          STRB     r0,[sp,#0xb]
;;;107    	CAN_FilterInitStructure.CAN_FilterScale = CAN_FilterScale_32bit;
000010  2001              MOVS     r0,#1
000012  f88d000c          STRB     r0,[sp,#0xc]
;;;108    	if(canIde == CAN_ID_STD)
000016  b995              CBNZ     r5,|L4.62|
;;;109    	{
;;;110    		CAN_FilterInitStructure.CAN_FilterIdHigh   = (((u32)canId<<21)&0xffff0000)>>16;
000018  0560              LSLS     r0,r4,#21
00001a  0c00              LSRS     r0,r0,#16
00001c  f8ad0000          STRH     r0,[sp,#0]
;;;111    		CAN_FilterInitStructure.CAN_FilterIdLow   = (((u32)canId<<21)|CAN_ID_STD)&0xffff;
000020  2000              MOVS     r0,#0
000022  ea405044          ORR      r0,r0,r4,LSL #21
000026  b280              UXTH     r0,r0
000028  f8ad0002          STRH     r0,[sp,#2]
;;;112    		CAN_FilterInitStructure.CAN_FilterMaskIdHigh  = 0xFE00;
00002c  f44f407e          MOV      r0,#0xfe00
000030  f8ad0004          STRH     r0,[sp,#4]
;;;113    		CAN_FilterInitStructure.CAN_FilterMaskIdLow = 0xFFFC;
000034  f64f70fc          MOV      r0,#0xfffc
000038  f8ad0006          STRH     r0,[sp,#6]
00003c  e011              B        |L4.98|
                  |L4.62|
;;;114    	}else
;;;115    	{
;;;116    		CAN_FilterInitStructure.CAN_FilterIdHigh   = (((u32)canId<<3)&0xffff0000)>>16;
00003e  f3c4304f          UBFX     r0,r4,#13,#16
000042  f8ad0000          STRH     r0,[sp,#0]
;;;117    		CAN_FilterInitStructure.CAN_FilterIdLow   = (((u32)canId<<3)|CAN_ID_EXT)&0xffff;
000046  2004              MOVS     r0,#4
000048  eb0000c4          ADD      r0,r0,r4,LSL #3
00004c  b280              UXTH     r0,r0
00004e  f8ad0002          STRH     r0,[sp,#2]
;;;118    		CAN_FilterInitStructure.CAN_FilterMaskIdHigh  = 0xFFFF;
000052  f64f70ff          MOV      r0,#0xffff
000056  f8ad0004          STRH     r0,[sp,#4]
;;;119    		CAN_FilterInitStructure.CAN_FilterMaskIdLow = 0xFFC0;
00005a  f64f70c0          MOV      r0,#0xffc0
00005e  f8ad0006          STRH     r0,[sp,#6]
                  |L4.98|
;;;120    	}
;;;121    	CAN_FilterInitStructure.CAN_FilterFIFOAssignment = CAN_FIFO1;//0
000062  2001              MOVS     r0,#1
000064  f8ad0008          STRH     r0,[sp,#8]
;;;122    	CAN_FilterInitStructure.CAN_FilterActivation = ENABLE;
000068  f88d000d          STRB     r0,[sp,#0xd]
;;;123    	CAN_FilterInit(&CAN_FilterInitStructure);
00006c  4668              MOV      r0,sp
00006e  f7fffffe          BL       CAN_FilterInit
;;;124    }
000072  bd7f              POP      {r0-r6,pc}
;;;125    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\HAEDWARE\\CANConfig.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_CANConfig_c_0f093641____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_CANConfig_c_0f093641____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_CANConfig_c_0f093641____REVSH|
#line 144
|__asm___11_CANConfig_c_0f093641____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
