; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\strengthenpower.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\strengthenpower.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I..\CORE -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\strengthenpower.crf ..\OBD\strengthenPower.c]
                          THUMB

                          AREA ||i.Get_Q_FromECU||, CODE, READONLY, ALIGN=2

                  Get_Q_FromECU PROC
;;;244    			};
;;;245    void Get_Q_FromECU(uint8_t ver)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;246    {
000004  b087              SUB      sp,sp,#0x1c
000006  4682              MOV      r10,r0
;;;247    	uint8_t* ptrSetCmd;
;;;248    	uint8_t* ptrVer;
;;;249    	CanRxMsg* CAN1_RxMsg;
;;;250    	uint8_t  i,err;
;;;251    	uint16_t dat1,dat2,datSma,datFlash;
;;;252    	uint8_t qNum = 0;
000008  2700              MOVS     r7,#0
;;;253    	uint8_t offset = 0,bag = 0x21;
00000a  2500              MOVS     r5,#0
00000c  2021              MOVS     r0,#0x21
00000e  9002              STR      r0,[sp,#8]
;;;254    	static uint8_t  temp = 0;
;;;255        
;;;256    	uint8_t textEcu[8] = {0x05,0x23,0x00,0x00,0x00,0x02,0x00,0x00};
000010  a1ad              ADR      r1,|L1.712|
000012  c903              LDM      r1,{r0,r1}
000014  e9cd0100          STRD     r0,r1,[sp,#0]
;;;257    	
;;;258    	ptrSetCmd  = Mem_malloc(8);
000018  2008              MOVS     r0,#8
00001a  f7fffffe          BL       Mem_malloc
00001e  9006              STR      r0,[sp,#0x18]
;;;259    	ptrVer = Mem_malloc(100);
000020  2064              MOVS     r0,#0x64
000022  f7fffffe          BL       Mem_malloc
000026  4606              MOV      r6,r0
;;;260    	ptrVer[0] = 0x10;ptrVer[2] = 0x3D;
000028  2010              MOVS     r0,#0x10
00002a  7030              STRB     r0,[r6,#0]
00002c  203d              MOVS     r0,#0x3d
00002e  70b0              STRB     r0,[r6,#2]
;;;261    	for(i=0;i<pAddr[ver][0];i++)//写入ECU喷油量的地址
000030  2400              MOVS     r4,#0
000032  e00a              B        |L1.74|
                  |L1.52|
;;;262    	{
;;;263    		textEcu[i+2] = pAddr[ver][i+1];
000034  eb0a008a          ADD      r0,r10,r10,LSL #2
000038  49a5              LDR      r1,|L1.720|
00003a  4401              ADD      r1,r1,r0
00003c  1c60              ADDS     r0,r4,#1
00003e  5c09              LDRB     r1,[r1,r0]
000040  1ca0              ADDS     r0,r4,#2
000042  f80d1000          STRB     r1,[sp,r0]
000046  1c60              ADDS     r0,r4,#1              ;261
000048  b2c4              UXTB     r4,r0                 ;261
                  |L1.74|
00004a  eb0a008a          ADD      r0,r10,r10,LSL #2     ;261
00004e  49a0              LDR      r1,|L1.720|
000050  5c08              LDRB     r0,[r1,r0]            ;261
000052  42a0              CMP      r0,r4                 ;261
000054  dcee              BGT      |L1.52|
;;;264    	}
;;;265    
;;;266    	dataToSend.pdat   = textEcu;
000056  499f              LDR      r1,|L1.724|
000058  f8c1d008          STR      sp,[r1,#8]  ; dataToSend
;;;267    	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat); 
00005c  460b              MOV      r3,r1
00005e  689a              LDR      r2,[r3,#8]  ; dataToSend
000060  6859              LDR      r1,[r3,#4]  ; dataToSend
000062  6818              LDR      r0,[r3,#0]  ; dataToSend
000064  f7fffffe          BL       OBD_CAN_SendData
;;;268    	CAN1_RxMsg = OSQPend(canRecieveQ,50,&err);
000068  aa05              ADD      r2,sp,#0x14
00006a  2132              MOVS     r1,#0x32
00006c  489a              LDR      r0,|L1.728|
00006e  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000070  f7fffffe          BL       OSQPend
000074  4683              MOV      r11,r0
;;;269    	if(err == OS_ERR_NONE)
000076  f89d0014          LDRB     r0,[sp,#0x14]
00007a  2800              CMP      r0,#0
00007c  d17e              BNE      |L1.380|
;;;270    	{
;;;271    		qNum = CAN1_RxMsg->Data[2];
00007e  f89b700d          LDRB     r7,[r11,#0xd]
;;;272    		ptrVer[3 + pAddr[ver][0]] = qNum * 2;
000082  0678              LSLS     r0,r7,#25
000084  0e01              LSRS     r1,r0,#24
000086  eb0a008a          ADD      r0,r10,r10,LSL #2
00008a  4a91              LDR      r2,|L1.720|
00008c  5c10              LDRB     r0,[r2,r0]
00008e  1cc0              ADDS     r0,r0,#3
000090  5431              STRB     r1,[r6,r0]
;;;273    		ptrVer[1] = qNum * 2 + pAddr[ver][0] + 2;
000092  eb0a008a          ADD      r0,r10,r10,LSL #2
000096  4611              MOV      r1,r2
000098  5c08              LDRB     r0,[r1,r0]
00009a  eb000047          ADD      r0,r0,r7,LSL #1
00009e  1c80              ADDS     r0,r0,#2
0000a0  7070              STRB     r0,[r6,#1]
;;;274    		offset = pAddr[ver][0] + 4;
0000a2  eb0a008a          ADD      r0,r10,r10,LSL #2
0000a6  5c08              LDRB     r0,[r1,r0]
0000a8  1d00              ADDS     r0,r0,#4
0000aa  b2c5              UXTB     r5,r0
;;;275    		
;;;276    		dat1 = textEcu[3];
0000ac  f89d8003          LDRB     r8,[sp,#3]
;;;277    		dat2 = textEcu[4]+qNum*2;
0000b0  f89d0004          LDRB     r0,[sp,#4]
0000b4  eb000947          ADD      r9,r0,r7,LSL #1
;;;278    		if(dat2 >= 256)
0000b8  f1b90fff          CMP      r9,#0xff
0000bc  dd03              BLE      |L1.198|
;;;279    			dat1++;
0000be  f1080001          ADD      r0,r8,#1
0000c2  fa1ff880          UXTH     r8,r0
                  |L1.198|
;;;280    		textEcu[3] = dat1;
0000c6  f00800ff          AND      r0,r8,#0xff
0000ca  f88d0003          STRB     r0,[sp,#3]
;;;281    		textEcu[4] += (qNum*2 + 2);
0000ce  f89d0004          LDRB     r0,[sp,#4]
0000d2  2102              MOVS     r1,#2
0000d4  eb010147          ADD      r1,r1,r7,LSL #1
0000d8  4408              ADD      r0,r0,r1
0000da  b2c0              UXTB     r0,r0
0000dc  f88d0004          STRB     r0,[sp,#4]
;;;282    		Mem_free(CAN1_RxMsg);
0000e0  4658              MOV      r0,r11
0000e2  f7fffffe          BL       Mem_free
;;;283    		
;;;284    		for(i=0;i<pAddr[ver][0];i++)//写入ECU喷油量的地址
0000e6  2400              MOVS     r4,#0
0000e8  e006              B        |L1.248|
                  |L1.234|
;;;285    		{
;;;286    			ptrVer[i+3] = textEcu[i+2];
0000ea  1ca0              ADDS     r0,r4,#2
0000ec  f81d1000          LDRB     r1,[sp,r0]
0000f0  1ce0              ADDS     r0,r4,#3
0000f2  5431              STRB     r1,[r6,r0]
0000f4  1c60              ADDS     r0,r4,#1              ;284
0000f6  b2c4              UXTB     r4,r0                 ;284
                  |L1.248|
0000f8  eb0a008a          ADD      r0,r10,r10,LSL #2     ;284
0000fc  4974              LDR      r1,|L1.720|
0000fe  5c08              LDRB     r0,[r1,r0]            ;284
000100  42a0              CMP      r0,r4                 ;284
000102  dcf2              BGT      |L1.234|
;;;287    		}
;;;288    		
;;;289    		for(i=0;i<qNum;i++)
000104  2400              MOVS     r4,#0
000106  e0ca              B        |L1.670|
                  |L1.264|
;;;290    		{
;;;291    			memcpy(ptrSetCmd,textEcu,8);
000108  9900              LDR      r1,[sp,#0]
00010a  9806              LDR      r0,[sp,#0x18]
00010c  6001              STR      r1,[r0,#0]
00010e  9901              LDR      r1,[sp,#4]
000110  6041              STR      r1,[r0,#4]
;;;292    			dataToSend.pdat   = textEcu;
000112  4970              LDR      r1,|L1.724|
000114  f8c1d008          STR      sp,[r1,#8]  ; dataToSend
;;;293    			OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat); 
000118  460b              MOV      r3,r1
00011a  689a              LDR      r2,[r3,#8]  ; dataToSend
00011c  6859              LDR      r1,[r3,#4]  ; dataToSend
00011e  6818              LDR      r0,[r3,#0]  ; dataToSend
000120  f7fffffe          BL       OBD_CAN_SendData
;;;294    			CAN1_RxMsg = OSQPend(canRecieveQ,50,&err);
000124  aa05              ADD      r2,sp,#0x14
000126  2132              MOVS     r1,#0x32
000128  486b              LDR      r0,|L1.728|
00012a  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00012c  f7fffffe          BL       OSQPend
000130  4683              MOV      r11,r0
;;;295    			if(err == OS_ERR_NONE)
000132  f89d0014          LDRB     r0,[sp,#0x14]
000136  2800              CMP      r0,#0
000138  d16f              BNE      |L1.538|
;;;296    			{	
;;;297    				dat1 = CAN1_RxMsg->Data[3];
00013a  f89b800e          LDRB     r8,[r11,#0xe]
;;;298    				dat1 = (dat1 << 8) + CAN1_RxMsg->Data[2];
00013e  f89b000d          LDRB     r0,[r11,#0xd]
000142  eb002008          ADD      r0,r0,r8,LSL #8
000146  fa1ff880          UXTH     r8,r0
;;;299    				datSma = dat1/20;
00014a  2014              MOVS     r0,#0x14
00014c  fb98f0f0          SDIV     r0,r8,r0
000150  b280              UXTH     r0,r0
000152  9004              STR      r0,[sp,#0x10]
;;;300    				
;;;301    				dat2 = dat1 + datSma;
000154  9804              LDR      r0,[sp,#0x10]
000156  4440              ADD      r0,r0,r8
000158  fa1ff980          UXTH     r9,r0
;;;302    			
;;;303    				LogReport("CURR_OIL:%d,COM_OIL:%d",dat1,dat2);
00015c  464a              MOV      r2,r9
00015e  4641              MOV      r1,r8
000160  a05e              ADR      r0,|L1.732|
000162  f7fffffe          BL       LogReport
;;;304    				if(offset % 8 == 0)
000166  17e9              ASRS     r1,r5,#31
000168  eb057151          ADD      r1,r5,r1,LSR #29
00016c  10c9              ASRS     r1,r1,#3
00016e  eba501c1          SUB      r1,r5,r1,LSL #3
000172  b951              CBNZ     r1,|L1.394|
;;;305    					ptrVer[offset++] = bag++;
000174  4629              MOV      r1,r5
000176  1c6a              ADDS     r2,r5,#1
000178  b2d5              UXTB     r5,r2
00017a  e000              B        |L1.382|
                  |L1.380|
00017c  e093              B        |L1.678|
                  |L1.382|
00017e  9802              LDR      r0,[sp,#8]
000180  5470              STRB     r0,[r6,r1]
000182  9802              LDR      r0,[sp,#8]
000184  1c40              ADDS     r0,r0,#1
000186  b2c0              UXTB     r0,r0
000188  9002              STR      r0,[sp,#8]
                  |L1.394|
;;;306    				ptrVer[offset++] = dat2 & 0x00FF;
00018a  4628              MOV      r0,r5
00018c  1c69              ADDS     r1,r5,#1
00018e  b2cd              UXTB     r5,r1
000190  f8069000          STRB     r9,[r6,r0]
;;;307    				if(offset % 8 == 0)
000194  17e9              ASRS     r1,r5,#31
000196  eb057151          ADD      r1,r5,r1,LSR #29
00019a  10c9              ASRS     r1,r1,#3
00019c  eba501c1          SUB      r1,r5,r1,LSL #3
0001a0  b941              CBNZ     r1,|L1.436|
;;;308    					ptrVer[offset++] = bag++;
0001a2  4629              MOV      r1,r5
0001a4  1c6a              ADDS     r2,r5,#1
0001a6  b2d5              UXTB     r5,r2
0001a8  9802              LDR      r0,[sp,#8]
0001aa  5470              STRB     r0,[r6,r1]
0001ac  9802              LDR      r0,[sp,#8]
0001ae  1c40              ADDS     r0,r0,#1
0001b0  b2c0              UXTB     r0,r0
0001b2  9002              STR      r0,[sp,#8]
                  |L1.436|
;;;309    				ptrVer[offset++] = (dat2>>8) & 0x00FF;
0001b4  ea4f2219          LSR      r2,r9,#8
0001b8  4628              MOV      r0,r5
0001ba  1c69              ADDS     r1,r5,#1
0001bc  b2cd              UXTB     r5,r1
0001be  5432              STRB     r2,[r6,r0]
;;;310    				Mem_free(CAN1_RxMsg);
0001c0  4658              MOV      r0,r11
0001c2  f7fffffe          BL       Mem_free
;;;311    				if(strengPower[0] != 0x1A)				
0001c6  484b              LDR      r0,|L1.756|
0001c8  7800              LDRB     r0,[r0,#0]  ; strengPower
0001ca  281a              CMP      r0,#0x1a
0001cc  d00c              BEQ      |L1.488|
;;;312    				{
;;;313    					strengPower[i*2 + 1] = dat2 & 0x00FF;
0001ce  2101              MOVS     r1,#1
0001d0  eb010144          ADD      r1,r1,r4,LSL #1
0001d4  4a47              LDR      r2,|L1.756|
0001d6  f8029001          STRB     r9,[r2,r1]
;;;314    					strengPower[i*2 + 2] = (dat2>>8) & 0x00FF;
0001da  ea4f2019          LSR      r0,r9,#8
0001de  2102              MOVS     r1,#2
0001e0  eb010144          ADD      r1,r1,r4,LSL #1
0001e4  5450              STRB     r0,[r2,r1]
0001e6  e033              B        |L1.592|
                  |L1.488|
;;;315    				}else
;;;316    				{
;;;317    					datFlash = strengPower[i*2 + 2];
0001e8  2002              MOVS     r0,#2
0001ea  eb000044          ADD      r0,r0,r4,LSL #1
0001ee  4941              LDR      r1,|L1.756|
0001f0  5c08              LDRB     r0,[r1,r0]
0001f2  9003              STR      r0,[sp,#0xc]
;;;318    					datFlash <<= 8;
0001f4  f64f71ff          MOV      r1,#0xffff
0001f8  9803              LDR      r0,[sp,#0xc]
0001fa  ea012000          AND      r0,r1,r0,LSL #8
0001fe  9003              STR      r0,[sp,#0xc]
;;;319    					datFlash += strengPower[i*2 + 1];
000200  2001              MOVS     r0,#1
000202  eb000044          ADD      r0,r0,r4,LSL #1
000206  493b              LDR      r1,|L1.756|
000208  5c09              LDRB     r1,[r1,r0]
00020a  9803              LDR      r0,[sp,#0xc]
00020c  4408              ADD      r0,r0,r1
00020e  b280              UXTH     r0,r0
000210  9003              STR      r0,[sp,#0xc]
;;;320    					if(datFlash != dat2)
000212  9803              LDR      r0,[sp,#0xc]
000214  4548              CMP      r0,r9
000216  d01b              BEQ      |L1.592|
;;;321    					{
;;;322    						LogReport("PenYou Read With Flash Don't Equal!!!");
000218  e000              B        |L1.540|
                  |L1.538|
00021a  e012              B        |L1.578|
                  |L1.540|
00021c  a036              ADR      r0,|L1.760|
00021e  f7fffffe          BL       LogReport
;;;323    						if(datFlash == dat1)
000222  9803              LDR      r0,[sp,#0xc]
000224  4540              CMP      r0,r8
000226  d104              BNE      |L1.562|
;;;324    							varOperation.oilMode = 1;//动力已经增强过了
000228  2001              MOVS     r0,#1
00022a  493d              LDR      r1,|L1.800|
00022c  f8810093          STRB     r0,[r1,#0x93]
000230  e003              B        |L1.570|
                  |L1.562|
;;;325    						else
;;;326    							varOperation.oilMode = 0;//ECU不匹配
000232  2000              MOVS     r0,#0
000234  493a              LDR      r1,|L1.800|
000236  f8810093          STRB     r0,[r1,#0x93]
                  |L1.570|
;;;327    						temp = 1;//动力不能增强
00023a  2001              MOVS     r0,#1
00023c  4939              LDR      r1,|L1.804|
00023e  7008              STRB     r0,[r1,#0]
;;;328    						break;
000240  e030              B        |L1.676|
                  |L1.578|
;;;329    					}
;;;330    				}
;;;331    			}else{
;;;332    				LogReport("PenYou Read Wrong!!!");
000242  a039              ADR      r0,|L1.808|
000244  f7fffffe          BL       LogReport
;;;333    				temp = 1;//读取喷油量出错
000248  2001              MOVS     r0,#1
00024a  4936              LDR      r1,|L1.804|
00024c  7008              STRB     r0,[r1,#0]
;;;334    				break;
00024e  e029              B        |L1.676|
                  |L1.592|
;;;335    			}	
;;;336    			if(strengPower[0] != 0x1A && i == (qNum - 1))
000250  4828              LDR      r0,|L1.756|
000252  7800              LDRB     r0,[r0,#0]  ; strengPower
000254  281a              CMP      r0,#0x1a
000256  d010              BEQ      |L1.634|
000258  1e78              SUBS     r0,r7,#1
00025a  42a0              CMP      r0,r4
00025c  d10d              BNE      |L1.634|
;;;337    			{
;;;338    				strengPower[0] = 0x1A;
00025e  201a              MOVS     r0,#0x1a
000260  4924              LDR      r1,|L1.756|
000262  7008              STRB     r0,[r1,#0]
;;;339    				SoftErasePage(STRENGE_Q);
000264  4836              LDR      r0,|L1.832|
000266  f7fffffe          BL       SoftErasePage
;;;340    				Save2KDataToFlash(strengPower,STRENGE_Q,200);
00026a  22c8              MOVS     r2,#0xc8
00026c  4934              LDR      r1,|L1.832|
00026e  4821              LDR      r0,|L1.756|
000270  f7fffffe          BL       Save2KDataToFlash
;;;341    				LogReport("PenYou Write to Flash OK!!!");
000274  a033              ADR      r0,|L1.836|
000276  f7fffffe          BL       LogReport
                  |L1.634|
;;;342    			}	
;;;343    			textEcu[4] += 2;
00027a  f89d0004          LDRB     r0,[sp,#4]
00027e  1c80              ADDS     r0,r0,#2
000280  b2c0              UXTB     r0,r0
000282  f88d0004          STRB     r0,[sp,#4]
;;;344    			if(textEcu[4] == 0x02)
000286  f89d0004          LDRB     r0,[sp,#4]
00028a  2802              CMP      r0,#2
00028c  d105              BNE      |L1.666|
;;;345    				textEcu[3] ++;
00028e  f89d0003          LDRB     r0,[sp,#3]
000292  1c40              ADDS     r0,r0,#1
000294  b2c0              UXTB     r0,r0
000296  f88d0003          STRB     r0,[sp,#3]
                  |L1.666|
00029a  1c60              ADDS     r0,r4,#1              ;289
00029c  b2c4              UXTB     r4,r0                 ;289
                  |L1.670|
00029e  42bc              CMP      r4,r7                 ;289
0002a0  f6ffaf32          BLT      |L1.264|
                  |L1.676|
0002a4  bf00              NOP                            ;328
                  |L1.678|
;;;346    		}
;;;347    	}
;;;348    	//安全算法，加写入数据
;;;349    	if(temp == 0)//保证不会重复写入、不会增大到不可限制
0002a6  481f              LDR      r0,|L1.804|
0002a8  7800              LDRB     r0,[r0,#0]  ; temp
0002aa  b930              CBNZ     r0,|L1.698|
;;;350    	{
;;;351    		temp = 1;
0002ac  2001              MOVS     r0,#1
0002ae  491d              LDR      r1,|L1.804|
0002b0  7008              STRB     r0,[r1,#0]
;;;352    		SafeALG(ptrVer);//安全算法
0002b2  4630              MOV      r0,r6
0002b4  f7fffffe          BL       SafeALG
0002b8  e002              B        |L1.704|
                  |L1.698|
;;;353    	}
;;;354    	else
;;;355    	{
;;;356    		Mem_free(ptrVer);
0002ba  4630              MOV      r0,r6
0002bc  f7fffffe          BL       Mem_free
                  |L1.704|
;;;357    	}
;;;358    }
0002c0  b007              ADD      sp,sp,#0x1c
0002c2  e8bd8ff0          POP      {r4-r11,pc}
;;;359    
                          ENDP

0002c6  0000              DCW      0x0000
                  |L1.712|
0002c8  052300            DCB      5,"#",0
0002cb  00                DCB      0
0002cc  00                DCB      0
0002cd  0200              DCB      2,0
0002cf  00                DCB      0
                  |L1.720|
                          DCD      pAddr
                  |L1.724|
                          DCD      dataToSend
                  |L1.728|
                          DCD      canRecieveQ
                  |L1.732|
0002dc  43555252          DCB      "CURR_OIL:%d,COM_OIL:%d",0
0002e0  5f4f494c
0002e4  3a25642c
0002e8  434f4d5f
0002ec  4f494c3a
0002f0  256400  
0002f3  00                DCB      0
                  |L1.756|
                          DCD      strengPower
                  |L1.760|
0002f8  50656e59          DCB      "PenYou Read With Flash Don't Equal!!!",0
0002fc  6f752052
000300  65616420
000304  57697468
000308  20466c61
00030c  73682044
000310  6f6e2774
000314  20457175
000318  616c2121
00031c  2100    
00031e  00                DCB      0
00031f  00                DCB      0
                  |L1.800|
                          DCD      varOperation
                  |L1.804|
                          DCD      temp
                  |L1.808|
000328  50656e59          DCB      "PenYou Read Wrong!!!",0
00032c  6f752052
000330  65616420
000334  57726f6e
000338  67212121
00033c  00      
00033d  00                DCB      0
00033e  00                DCB      0
00033f  00                DCB      0
                  |L1.832|
                          DCD      0x08060000
                  |L1.836|
000344  50656e59          DCB      "PenYou Write to Flash OK!!!",0
000348  6f752057
00034c  72697465
000350  20746f20
000354  466c6173
000358  68204f4b
00035c  21212100

                          AREA ||i.ReadECUVersion||, CODE, READONLY, ALIGN=2

                  ReadECUVersion PROC
;;;123    
;;;124    uint8_t  ReadECUVersion(uint8_t cmd[])//读取ECU版本号
000000  b5f8              PUSH     {r3-r7,lr}
;;;125    {
000002  4607              MOV      r7,r0
;;;126    	uint8_t err,i=0;
000004  2400              MOVS     r4,#0
;;;127    	uint8_t* ptrVer;
;;;128    	CanRxMsg* CAN1_RxMsg;
;;;129    	
;;;130    	ptrVer = Mem_malloc(60);
000006  203c              MOVS     r0,#0x3c
000008  f7fffffe          BL       Mem_malloc
00000c  4605              MOV      r5,r0
;;;131    
;;;132    	dataToSend.pdat   = cmd;
00000e  4845              LDR      r0,|L2.292|
000010  6087              STR      r7,[r0,#8]  ; dataToSend
;;;133    	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat); 
000012  4603              MOV      r3,r0
000014  689a              LDR      r2,[r3,#8]  ; dataToSend
000016  6859              LDR      r1,[r3,#4]  ; dataToSend
000018  6818              LDR      r0,[r3,#0]  ; dataToSend
00001a  f7fffffe          BL       OBD_CAN_SendData
;;;134    	CAN1_RxMsg = OSQPend(canRecieveQ,50,&err);
00001e  466a              MOV      r2,sp
000020  2132              MOVS     r1,#0x32
000022  4841              LDR      r0,|L2.296|
000024  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000026  f7fffffe          BL       OSQPend
00002a  4606              MOV      r6,r0
;;;135    	if((err == OS_ERR_NONE)&&(CAN1_RxMsg->Data[0] == 0x10))
00002c  f89d0000          LDRB     r0,[sp,#0]
000030  b948              CBNZ     r0,|L2.70|
000032  7af0              LDRB     r0,[r6,#0xb]
000034  2810              CMP      r0,#0x10
000036  d106              BNE      |L2.70|
;;;136    	{
;;;137    		memcpy(ptrVer,&CAN1_RxMsg->Data[4],4);
000038  f8d6000f          LDR      r0,[r6,#0xf]
00003c  6028              STR      r0,[r5,#0]
;;;138    		Mem_free(CAN1_RxMsg);
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       Mem_free
000044  e001              B        |L2.74|
                  |L2.70|
;;;139    	}
;;;140    	else 
;;;141    		return 200;
000046  20c8              MOVS     r0,#0xc8
                  |L2.72|
;;;142    	dataToSend.pdat   = verMany;
;;;143    	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
;;;144    	do{
;;;145    		CAN1_RxMsg = OSQPend(canRecieveQ,50,&err);
;;;146    		if(err == OS_ERR_NONE)
;;;147    		{
;;;148    			memcpy(&ptrVer[7*i + 4],&CAN1_RxMsg->Data[1],7);
;;;149    			Mem_free(CAN1_RxMsg);
;;;150    		}
;;;151    		i++;
;;;152    	}while(err == OS_ERR_NONE);
;;;153    	if(i<2)
;;;154    	{
;;;155    		LogReport("Config ECU version read error!!!");
;;;156    		return 200;//识别错误
;;;157    	}
;;;158    		
;;;159    	memcpy(varOperation.ecuVersion,ptrVer,19);
;;;160    	Mem_free(ptrVer);
;;;161    	for(i=0;i<20;i++)
;;;162    	{
;;;163    		if(i<5)
;;;164    		{
;;;165    			if((varOperation.ecuVersion[i] < 0x20)||(varOperation.ecuVersion[i] > 0x7E))//读取到非显示字符
;;;166    			{
;;;167    				return 200;//版本号识别出错
;;;168    			}	
;;;169    		}
;;;170    		if(varOperation.ecuVersion[i]  == 0x20)
;;;171    			varOperation.ecuVersion[i] =  '\0';
;;;172    		
;;;173    	}	
;;;174    	LogReport("ECU version is %s.",varOperation.ecuVersion);//上报版本号
;;;175    	
;;;176    //根据ECU版本号 确定ECU安全算法的掩码
;;;177    	if(strcmp(varOperation.ecuVersion,"P949V732") == 0)
;;;178    	{
;;;179    		ecuMask = ECUMASKV732;
;;;180    		return 0;
;;;181    	}else if(strcmp(varOperation.ecuVersion,"P949V791") == 0)
;;;182    	{
;;;183    		ecuMask = ECUMASKV791;
;;;184    		return 1;
;;;185    	}
;;;186    //	else if(strcmp(varOperation.ecuVersion,"P949V792") == 0)//公司没有这个ECU，得不到验证，暂时屏蔽
;;;187    //	{
;;;188    //		ecuMask = ECUMASKV792;
;;;189    //		return 2;
;;;190    //	}else if(strcmp(varOperation.ecuVersion,"P532V46") == 0)//todo:以下ECU等节油做好了再弄
;;;191    //	{
;;;192    //		ecuMask = ECUMASKV46;
;;;193    //		return 3;
;;;194    //	}else if(strcmp(varOperation.ecuVersion,"P579V47") == 0)
;;;195    //	{
;;;196    //		ecuMask = ECUMASKV47;
;;;197    //		return 4;
;;;198    //	}else if(strcmp(varOperation.ecuVersion,"P813V72") == 0)
;;;199    //	{
;;;200    //		ecuMask = ECUMASKV72;
;;;201    //		return 5;
;;;202    //	}else if(strcmp(varOperation.ecuVersion,"P1499V301") == 0)
;;;203    //	{
;;;204    //		ecuMask = ECUMASK201;
;;;205    //		return 6;
;;;206    //	}else if(strcmp(varOperation.ecuVersion,"P1072V742") == 0)
;;;207    //	{
;;;208    //		ecuMask = ECUMASK211;
;;;209    //		return 7;
;;;210    //	}else if(strcmp(varOperation.ecuVersion,"P1158V760") == 0)
;;;211    //	{
;;;212    //		ecuMask = ECUMASKV760;
;;;213    //		return 8;
;;;214    //	}else if(strcmp(varOperation.ecuVersion,"P903V762") == 0)
;;;215    //	{
;;;216    //		ecuMask = ECUMASKV762;
;;;217    //		return 9;
;;;218    //	}
;;;219    	else
;;;220    	{
;;;221    		LogReport("ECU Version %s can't be distinguished!!",varOperation.ecuVersion);
;;;222    		return 100;//版本号读取出来了，但是这个版本号的ECU还不能做强动力
;;;223    	}
;;;224    		
;;;225    }
000048  bdf8              POP      {r3-r7,pc}
                  |L2.74|
00004a  4838              LDR      r0,|L2.300|
00004c  4935              LDR      r1,|L2.292|
00004e  6088              STR      r0,[r1,#8]            ;142  ; dataToSend
000050  460b              MOV      r3,r1                 ;143
000052  689a              LDR      r2,[r3,#8]            ;143  ; dataToSend
000054  6859              LDR      r1,[r3,#4]            ;143  ; dataToSend
000056  6818              LDR      r0,[r3,#0]            ;143  ; dataToSend
000058  f7fffffe          BL       OBD_CAN_SendData
00005c  bf00              NOP                            ;144
                  |L2.94|
00005e  466a              MOV      r2,sp                 ;145
000060  2132              MOVS     r1,#0x32              ;145
000062  4831              LDR      r0,|L2.296|
000064  6800              LDR      r0,[r0,#0]            ;145  ; canRecieveQ
000066  f7fffffe          BL       OSQPend
00006a  4606              MOV      r6,r0                 ;145
00006c  f89d0000          LDRB     r0,[sp,#0]            ;146
000070  b960              CBNZ     r0,|L2.140|
000072  ebc400c4          RSB      r0,r4,r4,LSL #3       ;148
000076  1d00              ADDS     r0,r0,#4              ;148
000078  1941              ADDS     r1,r0,r5              ;148
00007a  68f2              LDR      r2,[r6,#0xc]          ;148
00007c  600a              STR      r2,[r1,#0]            ;148
00007e  8a32              LDRH     r2,[r6,#0x10]         ;148
000080  808a              STRH     r2,[r1,#4]            ;148
000082  7cb0              LDRB     r0,[r6,#0x12]         ;148
000084  7188              STRB     r0,[r1,#6]            ;148
000086  4630              MOV      r0,r6                 ;149
000088  f7fffffe          BL       Mem_free
                  |L2.140|
00008c  1c60              ADDS     r0,r4,#1              ;151
00008e  b2c4              UXTB     r4,r0                 ;151
000090  f89d0000          LDRB     r0,[sp,#0]            ;152
000094  2800              CMP      r0,#0                 ;152
000096  d0e2              BEQ      |L2.94|
000098  2c02              CMP      r4,#2                 ;153
00009a  da04              BGE      |L2.166|
00009c  a024              ADR      r0,|L2.304|
00009e  f7fffffe          BL       LogReport
0000a2  20c8              MOVS     r0,#0xc8              ;156
0000a4  e7d0              B        |L2.72|
                  |L2.166|
0000a6  2213              MOVS     r2,#0x13              ;159
0000a8  4629              MOV      r1,r5                 ;159
0000aa  482a              LDR      r0,|L2.340|
0000ac  f7fffffe          BL       __aeabi_memcpy
0000b0  4628              MOV      r0,r5                 ;160
0000b2  f7fffffe          BL       Mem_free
0000b6  2400              MOVS     r4,#0                 ;161
0000b8  e014              B        |L2.228|
                  |L2.186|
0000ba  2c05              CMP      r4,#5                 ;163
0000bc  da09              BGE      |L2.210|
0000be  4825              LDR      r0,|L2.340|
0000c0  5d00              LDRB     r0,[r0,r4]            ;165
0000c2  2820              CMP      r0,#0x20              ;165
0000c4  db03              BLT      |L2.206|
0000c6  4823              LDR      r0,|L2.340|
0000c8  5d00              LDRB     r0,[r0,r4]            ;165
0000ca  287e              CMP      r0,#0x7e              ;165
0000cc  dd01              BLE      |L2.210|
                  |L2.206|
0000ce  20c8              MOVS     r0,#0xc8              ;167
0000d0  e7ba              B        |L2.72|
                  |L2.210|
0000d2  4820              LDR      r0,|L2.340|
0000d4  5d00              LDRB     r0,[r0,r4]            ;170
0000d6  2820              CMP      r0,#0x20              ;170
0000d8  d102              BNE      |L2.224|
0000da  2100              MOVS     r1,#0                 ;171
0000dc  481d              LDR      r0,|L2.340|
0000de  5501              STRB     r1,[r0,r4]            ;171
                  |L2.224|
0000e0  1c60              ADDS     r0,r4,#1              ;161
0000e2  b2c4              UXTB     r4,r0                 ;161
                  |L2.228|
0000e4  2c14              CMP      r4,#0x14              ;161
0000e6  dbe8              BLT      |L2.186|
0000e8  491a              LDR      r1,|L2.340|
0000ea  a01b              ADR      r0,|L2.344|
0000ec  f7fffffe          BL       LogReport
0000f0  a11e              ADR      r1,|L2.364|
0000f2  4818              LDR      r0,|L2.340|
0000f4  f7fffffe          BL       strcmp
0000f8  b920              CBNZ     r0,|L2.260|
0000fa  481f              LDR      r0,|L2.376|
0000fc  491f              LDR      r1,|L2.380|
0000fe  6008              STR      r0,[r1,#0]            ;179  ; ecuMask
000100  2000              MOVS     r0,#0                 ;180
000102  e7a1              B        |L2.72|
                  |L2.260|
000104  a11e              ADR      r1,|L2.384|
000106  4813              LDR      r0,|L2.340|
000108  f7fffffe          BL       strcmp
00010c  b920              CBNZ     r0,|L2.280|
00010e  481a              LDR      r0,|L2.376|
000110  491a              LDR      r1,|L2.380|
000112  6008              STR      r0,[r1,#0]            ;183  ; ecuMask
000114  2001              MOVS     r0,#1                 ;184
000116  e797              B        |L2.72|
                  |L2.280|
000118  490e              LDR      r1,|L2.340|
00011a  a01c              ADR      r0,|L2.396|
00011c  f7fffffe          BL       LogReport
000120  2064              MOVS     r0,#0x64              ;222
000122  e791              B        |L2.72|
;;;226    
                          ENDP

                  |L2.292|
                          DCD      dataToSend
                  |L2.296|
                          DCD      canRecieveQ
                  |L2.300|
                          DCD      verMany
                  |L2.304|
000130  436f6e66          DCB      "Config ECU version read error!!!",0
000134  69672045
000138  43552076
00013c  65727369
000140  6f6e2072
000144  65616420
000148  6572726f
00014c  72212121
000150  00      
000151  00                DCB      0
000152  00                DCB      0
000153  00                DCB      0
                  |L2.340|
                          DCD      varOperation+0x64
                  |L2.344|
000158  45435520          DCB      "ECU version is %s.",0
00015c  76657273
000160  696f6e20
000164  69732025
000168  732e00  
00016b  00                DCB      0
                  |L2.364|
00016c  50393439          DCB      "P949V732",0
000170  56373332
000174  00      
000175  00                DCB      0
000176  00                DCB      0
000177  00                DCB      0
                  |L2.376|
                          DCD      0x383b50d9
                  |L2.380|
                          DCD      ecuMask
                  |L2.384|
000180  50393439          DCB      "P949V791",0
000184  56373931
000188  00      
000189  00                DCB      0
00018a  00                DCB      0
00018b  00                DCB      0
                  |L2.396|
00018c  45435520          DCB      "ECU Version %s can't be distinguished!!",0
000190  56657273
000194  696f6e20
000198  25732063
00019c  616e2774
0001a0  20626520
0001a4  64697374
0001a8  696e6775
0001ac  69736865
0001b0  64212100

                          AREA ||i.SafeALG||, CODE, READONLY, ALIGN=2

                  SafeALG PROC
;;;51     extern CAN1DataToSend  dataToSend; 
;;;52     void SafeALG(uint8_t* ptrVer)
000000  b5fe              PUSH     {r1-r7,lr}
;;;53     {
000002  4605              MOV      r5,r0
;;;54     	uint8_t err,i;
;;;55     	CanRxMsg* CAN1_RxMsg;
;;;56     	uint8_t pNum;
;;;57     
;;;58     	uint8_t seed[4] = {0x00,0x00,0x00,0x00};
000004  2000              MOVS     r0,#0
000006  9001              STR      r0,[sp,#4]
;;;59     	uint8_t key[4]  = {0x00,0x00,0x00,0x00};
000008  9000              STR      r0,[sp,#0]
;;;60     	
;;;61     	dataToSend.pdat   = safe1;
00000a  486d              LDR      r0,|L3.448|
00000c  496d              LDR      r1,|L3.452|
00000e  6088              STR      r0,[r1,#8]  ; dataToSend
;;;62     	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
000010  460b              MOV      r3,r1
000012  689a              LDR      r2,[r3,#8]  ; dataToSend
000014  6859              LDR      r1,[r3,#4]  ; dataToSend
000016  6818              LDR      r0,[r3,#0]  ; dataToSend
000018  f7fffffe          BL       OBD_CAN_SendData
;;;63     	CAN1_RxMsg = OSQPend(canRecieveQ,0,&err);
00001c  aa02              ADD      r2,sp,#8
00001e  2100              MOVS     r1,#0
000020  4869              LDR      r0,|L3.456|
000022  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000024  f7fffffe          BL       OSQPend
000028  4604              MOV      r4,r0
;;;64     	if(err == OS_ERR_NONE)
00002a  f89d0008          LDRB     r0,[sp,#8]
00002e  b9f8              CBNZ     r0,|L3.112|
;;;65     	{
;;;66     		seed[0]=CAN1_RxMsg->Data[3];seed[1]=CAN1_RxMsg->Data[4];
000030  7ba0              LDRB     r0,[r4,#0xe]
000032  f88d0004          STRB     r0,[sp,#4]
000036  7be0              LDRB     r0,[r4,#0xf]
000038  f88d0005          STRB     r0,[sp,#5]
;;;67     		seed[2]=CAN1_RxMsg->Data[5];seed[3]=CAN1_RxMsg->Data[6];
00003c  7c20              LDRB     r0,[r4,#0x10]
00003e  f88d0006          STRB     r0,[sp,#6]
000042  7c60              LDRB     r0,[r4,#0x11]
000044  f88d0007          STRB     r0,[sp,#7]
;;;68     		SeedToKey(seed,key);
000048  4669              MOV      r1,sp
00004a  a801              ADD      r0,sp,#4
00004c  f7fffffe          BL       SeedToKey
;;;69     		safe2[3] = key[0];safe2[4] = key[1];safe2[5] = key[2];safe2[6] = key[3];
000050  f89d0000          LDRB     r0,[sp,#0]
000054  495d              LDR      r1,|L3.460|
000056  70c8              STRB     r0,[r1,#3]
000058  f89d0001          LDRB     r0,[sp,#1]
00005c  7108              STRB     r0,[r1,#4]
00005e  f89d0002          LDRB     r0,[sp,#2]
000062  7148              STRB     r0,[r1,#5]
000064  f89d0003          LDRB     r0,[sp,#3]
000068  7188              STRB     r0,[r1,#6]
;;;70     		Mem_free(CAN1_RxMsg);
00006a  4620              MOV      r0,r4
00006c  f7fffffe          BL       Mem_free
                  |L3.112|
;;;71     	}
;;;72     	dataToSend.pdat   = safe2;
000070  4856              LDR      r0,|L3.460|
000072  4954              LDR      r1,|L3.452|
000074  6088              STR      r0,[r1,#8]  ; dataToSend
;;;73     	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
000076  460b              MOV      r3,r1
000078  689a              LDR      r2,[r3,#8]  ; dataToSend
00007a  6859              LDR      r1,[r3,#4]  ; dataToSend
00007c  6818              LDR      r0,[r3,#0]  ; dataToSend
00007e  f7fffffe          BL       OBD_CAN_SendData
;;;74     	CAN1_RxMsg = OSQPend(canRecieveQ,0,&err);
000082  aa02              ADD      r2,sp,#8
000084  2100              MOVS     r1,#0
000086  4850              LDR      r0,|L3.456|
000088  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00008a  f7fffffe          BL       OSQPend
00008e  4604              MOV      r4,r0
;;;75     	if(err == OS_ERR_NONE)
000090  f89d0008          LDRB     r0,[sp,#8]
000094  b988              CBNZ     r0,|L3.186|
;;;76     	{
;;;77     		if(CAN1_RxMsg->Data[1] != 0x7F)
000096  7b20              LDRB     r0,[r4,#0xc]
000098  287f              CMP      r0,#0x7f
00009a  d003              BEQ      |L3.164|
;;;78     			LogReport("NTRU Success.");	
00009c  a04c              ADR      r0,|L3.464|
00009e  f7fffffe          BL       LogReport
0000a2  e007              B        |L3.180|
                  |L3.164|
;;;79     		else
;;;80     		{
;;;81     			LogReport("NTRU Fail.");
0000a4  a04e              ADR      r0,|L3.480|
0000a6  f7fffffe          BL       LogReport
;;;82     			varOperation.oilMode = 0;
0000aa  2000              MOVS     r0,#0
0000ac  494f              LDR      r1,|L3.492|
0000ae  f8810093          STRB     r0,[r1,#0x93]
;;;83     			goto end;
0000b2  e081              B        |L3.440|
                  |L3.180|
;;;84     		}
;;;85     		Mem_free(CAN1_RxMsg);
0000b4  4620              MOV      r0,r4
0000b6  f7fffffe          BL       Mem_free
                  |L3.186|
;;;86     	}
;;;87     	dataToSend.pdat   = safe3;
0000ba  484d              LDR      r0,|L3.496|
0000bc  4941              LDR      r1,|L3.452|
0000be  6088              STR      r0,[r1,#8]  ; dataToSend
;;;88     	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
0000c0  460b              MOV      r3,r1
0000c2  689a              LDR      r2,[r3,#8]  ; dataToSend
0000c4  6859              LDR      r1,[r3,#4]  ; dataToSend
0000c6  6818              LDR      r0,[r3,#0]  ; dataToSend
0000c8  f7fffffe          BL       OBD_CAN_SendData
;;;89     	CAN1_RxMsg = OSQPend(canRecieveQ,0,&err);
0000cc  aa02              ADD      r2,sp,#8
0000ce  2100              MOVS     r1,#0
0000d0  483d              LDR      r0,|L3.456|
0000d2  6800              LDR      r0,[r0,#0]  ; canRecieveQ
0000d4  f7fffffe          BL       OSQPend
0000d8  4604              MOV      r4,r0
;;;90     	Mem_free(CAN1_RxMsg);
0000da  4620              MOV      r0,r4
0000dc  f7fffffe          BL       Mem_free
;;;91     	dataToSend.pdat   = safe4;
0000e0  4844              LDR      r0,|L3.500|
0000e2  4938              LDR      r1,|L3.452|
0000e4  6088              STR      r0,[r1,#8]  ; dataToSend
;;;92     	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
0000e6  460b              MOV      r3,r1
0000e8  689a              LDR      r2,[r3,#8]  ; dataToSend
0000ea  6859              LDR      r1,[r3,#4]  ; dataToSend
0000ec  6818              LDR      r0,[r3,#0]  ; dataToSend
0000ee  f7fffffe          BL       OBD_CAN_SendData
;;;93     	CAN1_RxMsg = OSQPend(canRecieveQ,0,&err);
0000f2  aa02              ADD      r2,sp,#8
0000f4  2100              MOVS     r1,#0
0000f6  4834              LDR      r0,|L3.456|
0000f8  6800              LDR      r0,[r0,#0]  ; canRecieveQ
0000fa  f7fffffe          BL       OSQPend
0000fe  4604              MOV      r4,r0
;;;94     	Mem_free(CAN1_RxMsg);
000100  4620              MOV      r0,r4
000102  f7fffffe          BL       Mem_free
;;;95     	
;;;96     	dataToSend.pdat   = ptrVer;
000106  482f              LDR      r0,|L3.452|
000108  6085              STR      r5,[r0,#8]  ; dataToSend
;;;97     	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
00010a  4603              MOV      r3,r0
00010c  689a              LDR      r2,[r3,#8]  ; dataToSend
00010e  6859              LDR      r1,[r3,#4]  ; dataToSend
000110  6818              LDR      r0,[r3,#0]  ; dataToSend
000112  f7fffffe          BL       OBD_CAN_SendData
;;;98     	CAN1_RxMsg = OSQPend(canRecieveQ,0,&err);
000116  aa02              ADD      r2,sp,#8
000118  2100              MOVS     r1,#0
00011a  482b              LDR      r0,|L3.456|
00011c  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00011e  f7fffffe          BL       OSQPend
000122  4604              MOV      r4,r0
;;;99     	Mem_free(CAN1_RxMsg);
000124  4620              MOV      r0,r4
000126  f7fffffe          BL       Mem_free
;;;100    	pNum = (ptrVer[1]+1)%7==0?((ptrVer[1]+1)/7):((ptrVer[1]+1)/7 + 1);
00012a  7868              LDRB     r0,[r5,#1]
00012c  1c40              ADDS     r0,r0,#1
00012e  2107              MOVS     r1,#7
000130  fb90f2f1          SDIV     r2,r0,r1
000134  fb010012          MLS      r0,r1,r2,r0
000138  b920              CBNZ     r0,|L3.324|
00013a  7868              LDRB     r0,[r5,#1]
00013c  1c40              ADDS     r0,r0,#1
00013e  fb90f0f1          SDIV     r0,r0,r1
000142  e005              B        |L3.336|
                  |L3.324|
000144  7868              LDRB     r0,[r5,#1]
000146  1c40              ADDS     r0,r0,#1
000148  2107              MOVS     r1,#7
00014a  fb90f0f1          SDIV     r0,r0,r1
00014e  1c40              ADDS     r0,r0,#1
                  |L3.336|
000150  b2c7              UXTB     r7,r0
;;;101    	for(i=1;i<pNum;i++)
000152  2601              MOVS     r6,#1
000154  e011              B        |L3.378|
                  |L3.342|
;;;102    	{
;;;103    		OSTimeDlyHMSM(0,0,0,2);
000156  2302              MOVS     r3,#2
000158  2200              MOVS     r2,#0
00015a  4611              MOV      r1,r2
00015c  4610              MOV      r0,r2
00015e  f7fffffe          BL       OSTimeDlyHMSM
;;;104    		dataToSend.pdat = &ptrVer[i*8];
000162  eb0500c6          ADD      r0,r5,r6,LSL #3
000166  4917              LDR      r1,|L3.452|
000168  6088              STR      r0,[r1,#8]  ; dataToSend
;;;105    		OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
00016a  460b              MOV      r3,r1
00016c  689a              LDR      r2,[r3,#8]  ; dataToSend
00016e  6859              LDR      r1,[r3,#4]  ; dataToSend
000170  6818              LDR      r0,[r3,#0]  ; dataToSend
000172  f7fffffe          BL       OBD_CAN_SendData
000176  1c70              ADDS     r0,r6,#1              ;101
000178  b2c6              UXTB     r6,r0                 ;101
                  |L3.378|
00017a  42be              CMP      r6,r7                 ;101
00017c  dbeb              BLT      |L3.342|
;;;106    	}
;;;107    	Mem_free(ptrVer);
00017e  4628              MOV      r0,r5
000180  f7fffffe          BL       Mem_free
;;;108    	CAN1_RxMsg = OSQPend(canRecieveQ,0,&err);
000184  aa02              ADD      r2,sp,#8
000186  2100              MOVS     r1,#0
000188  480f              LDR      r0,|L3.456|
00018a  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00018c  f7fffffe          BL       OSQPend
000190  4604              MOV      r4,r0
;;;109    	if(CAN1_RxMsg->Data[1] == 0x7F)
000192  7b20              LDRB     r0,[r4,#0xc]
000194  287f              CMP      r0,#0x7f
000196  d107              BNE      |L3.424|
;;;110    	{
;;;111    		LogReport("Strength Oil Fail!");
000198  a017              ADR      r0,|L3.504|
00019a  f7fffffe          BL       LogReport
;;;112    		varOperation.oilMode = 0;
00019e  2000              MOVS     r0,#0
0001a0  4912              LDR      r1,|L3.492|
0001a2  f8810093          STRB     r0,[r1,#0x93]
0001a6  e006              B        |L3.438|
                  |L3.424|
;;;113    	}else{
;;;114    		LogReport("Strength Oil Success.");
0001a8  a018              ADR      r0,|L3.524|
0001aa  f7fffffe          BL       LogReport
;;;115    		varOperation.oilMode = 1;
0001ae  2001              MOVS     r0,#1
0001b0  490e              LDR      r1,|L3.492|
0001b2  f8810093          STRB     r0,[r1,#0x93]
                  |L3.438|
;;;116    	}
;;;117    end:	
0001b6  bf00              NOP      
                  |L3.440|
;;;118    	Mem_free(CAN1_RxMsg);
0001b8  4620              MOV      r0,r4
0001ba  f7fffffe          BL       Mem_free
;;;119    }
0001be  bdfe              POP      {r1-r7,pc}
;;;120    
                          ENDP

                  |L3.448|
                          DCD      safe1
                  |L3.452|
                          DCD      dataToSend
                  |L3.456|
                          DCD      canRecieveQ
                  |L3.460|
                          DCD      safe2
                  |L3.464|
0001d0  4e545255          DCB      "NTRU Success.",0
0001d4  20537563
0001d8  63657373
0001dc  2e00    
0001de  00                DCB      0
0001df  00                DCB      0
                  |L3.480|
0001e0  4e545255          DCB      "NTRU Fail.",0
0001e4  20466169
0001e8  6c2e00  
0001eb  00                DCB      0
                  |L3.492|
                          DCD      varOperation
                  |L3.496|
                          DCD      safe3
                  |L3.500|
                          DCD      safe4
                  |L3.504|
0001f8  53747265          DCB      "Strength Oil Fail!",0
0001fc  6e677468
000200  204f696c
000204  20466169
000208  6c2100  
00020b  00                DCB      0
                  |L3.524|
00020c  53747265          DCB      "Strength Oil Success.",0
000210  6e677468
000214  204f696c
000218  20537563
00021c  63657373
000220  2e00    
000222  00                DCB      0
000223  00                DCB      0

                          AREA ||i.SeedToKey||, CODE, READONLY, ALIGN=2

                  SeedToKey PROC
;;;14     long ecuMask = 0;//需要知道 ECU 掩码
;;;15     void SeedToKey(uint8_t* seed, uint8_t* key)
000000  b538              PUSH     {r3-r5,lr}
;;;16     {
000002  460a              MOV      r2,r1
;;;17     	uint8_t i;
;;;18     	longToUchar seedlokal;
;;;19     	const long mask = ecuMask;
000004  4c19              LDR      r4,|L4.108|
000006  6823              LDR      r3,[r4,#0]  ; ecuMask
;;;20     	
;;;21     	if(seed[0] == 0 && seed[1] == 0)
000008  7804              LDRB     r4,[r0,#0]
00000a  b914              CBNZ     r4,|L4.18|
00000c  7844              LDRB     r4,[r0,#1]
00000e  b904              CBNZ     r4,|L4.18|
                  |L4.16|
;;;22     		return;
;;;23     	else
;;;24     	{
;;;25     		seedlokal.dword = ((long)seed[0]<<24)+((long)seed[1]<<16)+((long)seed[2]<<8)+(long)seed[3];
;;;26     		for(i=0; i<35; i++)
;;;27     		{
;;;28     			if(seedlokal.dword & 0x80000000)
;;;29     			{
;;;30     				seedlokal.dword = seedlokal.dword<<1;
;;;31     				seedlokal.dword = seedlokal.dword ^ mask;
;;;32     			}else
;;;33     			{
;;;34     				seedlokal.dword=seedlokal.dword<<1;
;;;35     			}
;;;36     		}
;;;37     		for(i=0; i<4; i++)
;;;38     		{
;;;39     			key[3 - i] = seedlokal.byte[i];
;;;40     		}
;;;41     	}
;;;42     	return;   
;;;43     }
000010  bd38              POP      {r3-r5,pc}
                  |L4.18|
000012  7804              LDRB     r4,[r0,#0]            ;25
000014  0624              LSLS     r4,r4,#24             ;25
000016  7845              LDRB     r5,[r0,#1]            ;25
000018  eb044405          ADD      r4,r4,r5,LSL #16      ;25
00001c  7885              LDRB     r5,[r0,#2]            ;25
00001e  eb042405          ADD      r4,r4,r5,LSL #8       ;25
000022  78c5              LDRB     r5,[r0,#3]            ;25
000024  442c              ADD      r4,r4,r5              ;25
000026  9400              STR      r4,[sp,#0]            ;25
000028  2100              MOVS     r1,#0                 ;26
00002a  e00f              B        |L4.76|
                  |L4.44|
00002c  9c00              LDR      r4,[sp,#0]            ;28
00002e  f0044400          AND      r4,r4,#0x80000000     ;28
000032  b134              CBZ      r4,|L4.66|
000034  9c00              LDR      r4,[sp,#0]            ;30
000036  0064              LSLS     r4,r4,#1              ;30
000038  9400              STR      r4,[sp,#0]            ;30
00003a  9c00              LDR      r4,[sp,#0]            ;31
00003c  405c              EORS     r4,r4,r3              ;31
00003e  9400              STR      r4,[sp,#0]            ;31
000040  e002              B        |L4.72|
                  |L4.66|
000042  9c00              LDR      r4,[sp,#0]            ;34
000044  0064              LSLS     r4,r4,#1              ;34
000046  9400              STR      r4,[sp,#0]            ;34
                  |L4.72|
000048  1c4c              ADDS     r4,r1,#1              ;26
00004a  b2e1              UXTB     r1,r4                 ;26
                  |L4.76|
00004c  2923              CMP      r1,#0x23              ;26
00004e  dbed              BLT      |L4.44|
000050  2100              MOVS     r1,#0                 ;37
000052  e006              B        |L4.98|
                  |L4.84|
000054  f81d4001          LDRB     r4,[sp,r1]            ;39
000058  f1c10503          RSB      r5,r1,#3              ;39
00005c  5554              STRB     r4,[r2,r5]            ;39
00005e  1c4c              ADDS     r4,r1,#1              ;37
000060  b2e1              UXTB     r1,r4                 ;37
                  |L4.98|
000062  2904              CMP      r1,#4                 ;37
000064  dbf6              BLT      |L4.84|
000066  bf00              NOP                            ;42
000068  e7d2              B        |L4.16|
;;;44     uint8_t safe1[8] = {0x02,0x27,0x09,0x00,0x00,0x00,0x00,0x00};
                          ENDP

00006a  0000              DCW      0x0000
                  |L4.108|
                          DCD      ecuMask

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  qMax
000000  045c              DCW      0x045c

                          AREA ||.data||, DATA, ALIGN=2

                  ecuMask
                          DCD      0x00000000
                  safe1
000004  02270900          DCB      0x02,0x27,0x09,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  safe2
00000c  06270a00          DCB      0x06,0x27,0x0a,0x00
000010  000000aa          DCB      0x00,0x00,0x00,0xaa
                  safe3
000014  031086a7          DCB      0x03,0x10,0x86,0xa7
000018  00000000          DCB      0x00,0x00,0x00,0x00
                  safe4
00001c  03809001          DCB      0x03,0x80,0x90,0x01
000020  00000000          DCB      0x00,0x00,0x00,0x00
                  safe5
000024  102f3d05          DCB      0x10,0x2f,0x3d,0x05
000028  61242a00          DCB      0x61,0x24,0x2a,0x00
                  verMany
00002c  30000000          DCB      0x30,0x00,0x00,0x00
000030  00000000          DCB      0x00,0x00,0x00,0x00
                  pAddr
000034  030560f8          DCB      0x03,0x05,0x60,0xf8
000038  ff03056c          DCB      0xff,0x03,0x05,0x6c
00003c  60ff0305          DCB      0x60,0xff,0x03,0x05
000040  6c60ff03          DCB      0x6c,0x60,0xff,0x03
000044  1c6038ff          DCB      0x1c,0x60,0x38,0xff
000048  031c6038          DCB      0x03,0x1c,0x60,0x38
00004c  ff031c9e          DCB      0xff,0x03,0x1c,0x9e
000050  dcff0305          DCB      0xdc,0xff,0x03,0x05
000054  50e0ff03          DCB      0x50,0xe0,0xff,0x03
000058  04d44cff          DCB      0x04,0xd4,0x4c,0xff
00005c  0304d094          DCB      0x03,0x04,0xd0,0x94
000060  ff0304d0          DCB      0xff,0x03,0x04,0xd0
000064  94ff              DCB      0x94,0xff
                  temp
000066  00                DCB      0x00
