; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\strengthenpower.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\strengthenpower.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\strengthenpower.crf ..\OBD\strengthenPower.c]
                          THUMB

                          AREA ||i.Get_Q_FromECU||, CODE, READONLY, ALIGN=2

                  Get_Q_FromECU PROC
;;;308    }
;;;309    void Get_Q_FromECU(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;310    {
000004  b08f              SUB      sp,sp,#0x3c
;;;311    	CanRxMsg* CAN1_RxMsg;
;;;312    	uint8_t * textEcu;
;;;313    	uint8_t * qBuff;
;;;314    	uint8_t  i,err;
;;;315    	uint16_t dat1,dat2,datFlash;
;;;316    	uint8_t  qNum = 0;
000006  2700              MOVS     r7,#0
;;;317    	double  d_Value = 0.0;
000008  bf00              NOP      
;;;318    	uint16_t d_Value1 = 0;
00000a  2000              MOVS     r0,#0
00000c  9009              STR      r0,[sp,#0x24]
;;;319    	uint8_t bili1 = 0;
00000e  9008              STR      r0,[sp,#0x20]
;;;320    	uint8_t bili2 = 0;
000010  9007              STR      r0,[sp,#0x1c]
;;;321    	uint8_t fuhao1 = 0;
000012  9006              STR      r0,[sp,#0x18]
;;;322    	uint8_t fuhao2 = 0;
000014  9005              STR      r0,[sp,#0x14]
;;;323    	uint8_t * carChange = NULL;
000016  4682              MOV      r10,r0
;;;324    	qBuff = Mem_malloc(100);
000018  2064              MOVS     r0,#0x64
00001a  f7fffffe          BL       Mem_malloc
00001e  4681              MOV      r9,r0
;;;325    	textEcu = Mem_malloc(8);
000020  2008              MOVS     r0,#8
000022  f7fffffe          BL       Mem_malloc
000026  4604              MOV      r4,r0
;;;326    	
;;;327    	memset(textEcu,0,8);
000028  2000              MOVS     r0,#0
00002a  6020              STR      r0,[r4,#0]
00002c  6060              STR      r0,[r4,#4]
;;;328    	if(strengthFuelFlash.modeOrder == 1)
00002e  48fe              LDR      r0,|L1.1064|
000030  f890003a          LDRB     r0,[r0,#0x3a]  ; strengthFuelFlash
000034  2801              CMP      r0,#1
000036  d10d              BNE      |L1.84|
;;;329    	{
;;;330    		textEcu[0] = 0x05;textEcu[1] = 0x23;
000038  2005              MOVS     r0,#5
00003a  7020              STRB     r0,[r4,#0]
00003c  2023              MOVS     r0,#0x23
00003e  7060              STRB     r0,[r4,#1]
;;;331    		memcpy(&textEcu[2],&strengthFuelFlash.fuelAddr[1],strengthFuelFlash.fuelAddr[0]);
000040  48f9              LDR      r0,|L1.1064|
000042  7c02              LDRB     r2,[r0,#0x10]  ; strengthFuelFlash
000044  f1000111          ADD      r1,r0,#0x11
000048  1ca0              ADDS     r0,r4,#2
00004a  f7fffffe          BL       __aeabi_memcpy
;;;332    		textEcu[5] = 0x02;                       //02 代表的是数据长度是2个字节
00004e  2002              MOVS     r0,#2
000050  7160              STRB     r0,[r4,#5]
000052  e01a              B        |L1.138|
                  |L1.84|
;;;333    	}else if(strengthFuelFlash.modeOrder == 2)
000054  48f4              LDR      r0,|L1.1064|
000056  f890003a          LDRB     r0,[r0,#0x3a]  ; strengthFuelFlash
00005a  2802              CMP      r0,#2
00005c  d10f              BNE      |L1.126|
;;;334    	{
;;;335    		textEcu[0] = 0x07;textEcu[1] = 0x23;
00005e  2007              MOVS     r0,#7
000060  7020              STRB     r0,[r4,#0]
000062  2023              MOVS     r0,#0x23
000064  7060              STRB     r0,[r4,#1]
;;;336    		memcpy(&textEcu[2],&strengthFuelFlash.fuelAddr[1],strengthFuelFlash.fuelAddr[0]);
000066  48f0              LDR      r0,|L1.1064|
000068  7c02              LDRB     r2,[r0,#0x10]  ; strengthFuelFlash
00006a  f1000111          ADD      r1,r0,#0x11
00006e  1ca0              ADDS     r0,r4,#2
000070  f7fffffe          BL       __aeabi_memcpy
;;;337    		textEcu[6] = 0x00;textEcu[7] = 0x02;     //02 代表的是数据长度是2个字节
000074  2000              MOVS     r0,#0
000076  71a0              STRB     r0,[r4,#6]
000078  2002              MOVS     r0,#2
00007a  71e0              STRB     r0,[r4,#7]
00007c  e005              B        |L1.138|
                  |L1.126|
;;;338    	}else
;;;339    	{
;;;340    		LogReport("Service mode Error!");
00007e  a0eb              ADR      r0,|L1.1068|
000080  f7fffffe          BL       LogReport
                  |L1.132|
;;;341    		return;
;;;342    	}
;;;343    	dataToSend.pdat  = textEcu;
;;;344    	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat); 
;;;345    	CAN1_RxMsg = OSQPend(canRecieveQ,50,&err);
;;;346    	if(err == OS_ERR_NONE)
;;;347    	{
;;;348    		qNum = CAN1_RxMsg -> Data[2];       //得到喷油量的个数        
;;;349    		if(strengPower[1] != qNum)          //如果保存的ECU 喷油量的个数 不相等
;;;350    		{
;;;351    			strengPower[0] = 0;
;;;352    			strengPower[1] = qNum;
;;;353    			carChange = Mem_malloc(5);      //
;;;354    			carChange[0] = 3;               //长度
;;;355    			carChange[1] = 0x50;
;;;356    			carChange[2] = 0x19;
;;;357    			SendPidCmdData(carChange);
;;;358    			Mem_free(carChange);
;;;359    		}
;;;360    		if(strengthFuelFlash.modeOrder == 1)
;;;361    		{
;;;362    			dat1 = textEcu[3];              //用于辨别地址是否累加 > 0xFF,若是，则高地址自增
;;;363    			dat2 = textEcu[4] + qNum * 2;
;;;364    			if(dat2 >= 256)
;;;365    				dat1 ++;
;;;366    			textEcu[3] = dat1;
;;;367    			textEcu[4] += (qNum * 2 + 2);
;;;368    		}else if(strengthFuelFlash.modeOrder == 2)
;;;369    		{
;;;370    			dat1 = textEcu[4];              //用于辨别地址是否累加 > 0xFF,若是，则高地址自增
;;;371    			dat2 = textEcu[5] + qNum * 2;
;;;372    			if(dat2 >= 256)
;;;373    				dat1 ++;
;;;374    			textEcu[4] = dat1;
;;;375    			textEcu[5] += (qNum * 2 + 2);
;;;376    		}
;;;377    		Mem_free(CAN1_RxMsg);
;;;378    		
;;;379    		for(i = 0;i < qNum;i ++)
;;;380    		{
;;;381    			dataToSend.pdat  = textEcu;
;;;382    			OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat); 
;;;383    			CAN1_RxMsg = OSQPend(canRecieveQ,50,&err);
;;;384    			if(err == OS_ERR_NONE)
;;;385    			{	
;;;386    				dat1 = CAN1_RxMsg -> Data[3];
;;;387    				dat1 = (dat1 << 8) + CAN1_RxMsg->Data[2];
;;;388    				Mem_free(CAN1_RxMsg);
;;;389    				qBuff[i*2] = dat1 & 0xFF;
;;;390    				qBuff[i*2 + 1] = (dat1 >> 8) & 0xFF;
;;;391    			}else{
;;;392    				LogReport("PenYou Read Wrong!!!");
;;;393    				break;
;;;394    			}	
;;;395    			if(strengthFuelFlash.modeOrder == 1)
;;;396    			{
;;;397    				textEcu[4]     += 2;      //读取地址管理
;;;398    				if(textEcu[4]  == 0x00)
;;;399    					textEcu[3] ++;
;;;400    			}else if(strengthFuelFlash.modeOrder == 2)
;;;401    			{
;;;402    				textEcu[5]     += 2;      //读取地址管理
;;;403    				if(textEcu[5]  == 0x00)
;;;404    					textEcu[4] ++;
;;;405    			}
;;;406    		}
;;;407    		if(strengPower[0] != 0xAF && i == qNum)
;;;408    		{
;;;409    			strengPower[0] = 0xAF;
;;;410    			strengPower[1] = qNum;
;;;411    			memcpy(&strengPower[2],qBuff,qNum*2);
;;;412    			Save2KDataToFlash(strengPower,STRENGE_Q,200);      //将原始值保存到Flash
;;;413    			LogReport("PenYou Write to Flash OK!!!");
;;;414    			varOperation.isStrenOilOK = 1;                     //可以进行动力提升
;;;415    			strengthFuelFlash.coe = 0;
;;;416    		}else if(i != qNum)
;;;417    		{
;;;418    			LogReport("PenYou not read all!!!");
;;;419    		}
;;;420    		else
;;;421    		{
;;;422    			dat1 = qBuff[1];
;;;423    			dat1 = (dat1 << 8) + qBuff[0];
;;;424    			datFlash = strengPower[3];
;;;425    			datFlash = (datFlash << 8) + strengPower[2];
;;;426    			d_Value = datFlash > dat1 ? datFlash - dat1:dat1 - datFlash;
;;;427    			d_Value = d_Value * 100.0 / datFlash;
;;;428    			d_Value1 = (uint16_t)d_Value;
;;;429    			if(d_Value>((double)d_Value1+0.5))
;;;430    				d_Value1 += 1;
;;;431    			bili1 = d_Value1;
;;;432    			fuhao1 = datFlash > dat1 ? 1:2;
;;;433    			for(i = 1;i < qNum;i ++)
;;;434    			{
;;;435    				dat1 = qBuff[i * 2 + 1];
;;;436    				dat1 = (dat1 << 8) + qBuff[i * 2];
;;;437    				datFlash = strengPower[i * 2 + 3];
;;;438    				datFlash = (datFlash << 8) + strengPower[i*2 + 2];
;;;439    				
;;;440    				if(dat1 == datFlash && dat1 < 100)    //读到的喷油量的值为0，比例就不相等啦
;;;441    					continue;
;;;442    				
;;;443    				d_Value = datFlash > dat1 ? datFlash - dat1 : dat1 - datFlash;
;;;444    				d_Value = d_Value * 100.0 / datFlash;
;;;445    				d_Value1 = (uint16_t)d_Value;
;;;446    				if(d_Value>((double)d_Value1+0.5))
;;;447    					d_Value1 += 1;
;;;448    				
;;;449    				bili2 = d_Value1;
;;;450    				fuhao2 = datFlash > dat1 ? 1:2;
;;;451    				if((bili1 != bili2 || fuhao1 != fuhao2)&&(dat1 != 0))		
;;;452    				{
;;;453    					strengPower[0] = 0xAF;
;;;454    					strengPower[1] = qNum;
;;;455    					memcpy(&strengPower[2],qBuff,qNum * 2);
;;;456    					Save2KDataToFlash(strengPower,STRENGE_Q,200);      //将原始值保存到   Flash
;;;457    					
;;;458    					carChange = Mem_malloc(5);  //
;;;459    					carChange[0] = 3;           //长度
;;;460    					carChange[1] = 0x50;
;;;461    					carChange[2] = 0x19;
;;;462    					SendPidCmdData(carChange);
;;;463    					Mem_free(carChange);
;;;464    					
;;;465    					LogReport("Car changed!!!");                       //可能换车了
;;;466    					varOperation.isStrenOilOK = 1;                     //可以进行动力提升
;;;467    					strengthFuelFlash.coe = 0;
;;;468    					break;
;;;469    				}
;;;470    			}
;;;471    			if(i == qNum)
;;;472    			{
;;;473    				varOperation.isStrenOilOK = 1; 
;;;474    				strengthFuelFlash.coe = bili1;
;;;475    				if(fuhao1 == 1)
;;;476    					strengthFuelFlash.coe = 0 - strengthFuelFlash.coe;
;;;477    			}
;;;478    		}
;;;479    	}else
;;;480    	{
;;;481    		varOperation.isStrenOilOK = 0;
;;;482    		LogReport("PenYou can't read!");
;;;483    	}
;;;484    	Mem_free(textEcu);
;;;485    }
000084  b00f              ADD      sp,sp,#0x3c
000086  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.138|
00008a  48ed              LDR      r0,|L1.1088|
00008c  6084              STR      r4,[r0,#8]            ;343  ; dataToSend
00008e  4603              MOV      r3,r0                 ;344
000090  689a              LDR      r2,[r3,#8]            ;344  ; dataToSend
000092  6859              LDR      r1,[r3,#4]            ;344  ; dataToSend
000094  6818              LDR      r0,[r3,#0]            ;344  ; dataToSend
000096  f7fffffe          BL       OBD_CAN_SendData
00009a  aa0d              ADD      r2,sp,#0x34           ;345
00009c  2132              MOVS     r1,#0x32              ;345
00009e  48e9              LDR      r0,|L1.1092|
0000a0  6800              LDR      r0,[r0,#0]            ;345  ; canRecieveQ
0000a2  f7fffffe          BL       OSQPend
0000a6  4683              MOV      r11,r0                ;345
0000a8  f89d0034          LDRB     r0,[sp,#0x34]         ;346
0000ac  2800              CMP      r0,#0                 ;346
0000ae  d174              BNE      |L1.410|
0000b0  f89b700d          LDRB     r7,[r11,#0xd]         ;348
0000b4  48e4              LDR      r0,|L1.1096|
0000b6  7840              LDRB     r0,[r0,#1]            ;349  ; strengPower
0000b8  42b8              CMP      r0,r7                 ;349
0000ba  d017              BEQ      |L1.236|
0000bc  2000              MOVS     r0,#0                 ;351
0000be  49e2              LDR      r1,|L1.1096|
0000c0  7008              STRB     r0,[r1,#0]            ;351
0000c2  4608              MOV      r0,r1                 ;352
0000c4  7047              STRB     r7,[r0,#1]            ;352
0000c6  2005              MOVS     r0,#5                 ;353
0000c8  f7fffffe          BL       Mem_malloc
0000cc  4682              MOV      r10,r0                ;353
0000ce  2003              MOVS     r0,#3                 ;354
0000d0  f88a0000          STRB     r0,[r10,#0]           ;354
0000d4  2050              MOVS     r0,#0x50              ;355
0000d6  f88a0001          STRB     r0,[r10,#1]           ;355
0000da  2019              MOVS     r0,#0x19              ;356
0000dc  f88a0002          STRB     r0,[r10,#2]           ;356
0000e0  4650              MOV      r0,r10                ;357
0000e2  f7fffffe          BL       SendPidCmdData
0000e6  4650              MOV      r0,r10                ;358
0000e8  f7fffffe          BL       Mem_free
                  |L1.236|
0000ec  48ce              LDR      r0,|L1.1064|
0000ee  f890003a          LDRB     r0,[r0,#0x3a]         ;360  ; strengthFuelFlash
0000f2  2801              CMP      r0,#1                 ;360
0000f4  d111              BNE      |L1.282|
0000f6  78e5              LDRB     r5,[r4,#3]            ;362
0000f8  7920              LDRB     r0,[r4,#4]            ;363
0000fa  eb000047          ADD      r0,r0,r7,LSL #1       ;363
0000fe  900c              STR      r0,[sp,#0x30]         ;363
000100  980c              LDR      r0,[sp,#0x30]         ;364
000102  28ff              CMP      r0,#0xff              ;364
000104  dd01              BLE      |L1.266|
000106  1c68              ADDS     r0,r5,#1              ;365
000108  b285              UXTH     r5,r0                 ;365
                  |L1.266|
00010a  70e5              STRB     r5,[r4,#3]            ;366
00010c  7920              LDRB     r0,[r4,#4]            ;367
00010e  2102              MOVS     r1,#2                 ;367
000110  eb010147          ADD      r1,r1,r7,LSL #1       ;367
000114  4408              ADD      r0,r0,r1              ;367
000116  7120              STRB     r0,[r4,#4]            ;367
000118  e015              B        |L1.326|
                  |L1.282|
00011a  48c3              LDR      r0,|L1.1064|
00011c  f890003a          LDRB     r0,[r0,#0x3a]         ;368  ; strengthFuelFlash
000120  2802              CMP      r0,#2                 ;368
000122  d110              BNE      |L1.326|
000124  7925              LDRB     r5,[r4,#4]            ;370
000126  7960              LDRB     r0,[r4,#5]            ;371
000128  eb000047          ADD      r0,r0,r7,LSL #1       ;371
00012c  900c              STR      r0,[sp,#0x30]         ;371
00012e  980c              LDR      r0,[sp,#0x30]         ;372
000130  28ff              CMP      r0,#0xff              ;372
000132  dd01              BLE      |L1.312|
000134  1c68              ADDS     r0,r5,#1              ;373
000136  b285              UXTH     r5,r0                 ;373
                  |L1.312|
000138  7125              STRB     r5,[r4,#4]            ;374
00013a  7960              LDRB     r0,[r4,#5]            ;375
00013c  2102              MOVS     r1,#2                 ;375
00013e  eb010147          ADD      r1,r1,r7,LSL #1       ;375
000142  4408              ADD      r0,r0,r1              ;375
000144  7160              STRB     r0,[r4,#5]            ;375
                  |L1.326|
000146  4658              MOV      r0,r11                ;377
000148  f7fffffe          BL       Mem_free
00014c  2600              MOVS     r6,#0                 ;379
00014e  e046              B        |L1.478|
                  |L1.336|
000150  48bb              LDR      r0,|L1.1088|
000152  6084              STR      r4,[r0,#8]            ;381  ; dataToSend
000154  4603              MOV      r3,r0                 ;382
000156  689a              LDR      r2,[r3,#8]            ;382  ; dataToSend
000158  6859              LDR      r1,[r3,#4]            ;382  ; dataToSend
00015a  6818              LDR      r0,[r3,#0]            ;382  ; dataToSend
00015c  f7fffffe          BL       OBD_CAN_SendData
000160  aa0d              ADD      r2,sp,#0x34           ;383
000162  2132              MOVS     r1,#0x32              ;383
000164  48b7              LDR      r0,|L1.1092|
000166  6800              LDR      r0,[r0,#0]            ;383  ; canRecieveQ
000168  f7fffffe          BL       OSQPend
00016c  4683              MOV      r11,r0                ;383
00016e  f89d0034          LDRB     r0,[sp,#0x34]         ;384
000172  b998              CBNZ     r0,|L1.412|
000174  f89b500e          LDRB     r5,[r11,#0xe]         ;386
000178  f89b000d          LDRB     r0,[r11,#0xd]         ;387
00017c  eb002005          ADD      r0,r0,r5,LSL #8       ;387
000180  b285              UXTH     r5,r0                 ;387
000182  4658              MOV      r0,r11                ;388
000184  f7fffffe          BL       Mem_free
000188  f8095016          STRB     r5,[r9,r6,LSL #1]     ;389
00018c  0a28              LSRS     r0,r5,#8              ;390
00018e  2101              MOVS     r1,#1                 ;390
000190  eb010146          ADD      r1,r1,r6,LSL #1       ;390
000194  f8090001          STRB     r0,[r9,r1]            ;390
000198  e004              B        |L1.420|
                  |L1.410|
00019a  e194              B        |L1.1222|
                  |L1.412|
00019c  a0ab              ADR      r0,|L1.1100|
00019e  f7fffffe          BL       LogReport
0001a2  e01e              B        |L1.482|
                  |L1.420|
0001a4  48a0              LDR      r0,|L1.1064|
0001a6  f890003a          LDRB     r0,[r0,#0x3a]         ;395  ; strengthFuelFlash
0001aa  2801              CMP      r0,#1                 ;395
0001ac  d108              BNE      |L1.448|
0001ae  7920              LDRB     r0,[r4,#4]            ;397
0001b0  1c80              ADDS     r0,r0,#2              ;397
0001b2  7120              STRB     r0,[r4,#4]            ;397
0001b4  7920              LDRB     r0,[r4,#4]            ;398
0001b6  b980              CBNZ     r0,|L1.474|
0001b8  78e0              LDRB     r0,[r4,#3]            ;399
0001ba  1c40              ADDS     r0,r0,#1              ;399
0001bc  70e0              STRB     r0,[r4,#3]            ;399
0001be  e00c              B        |L1.474|
                  |L1.448|
0001c0  4899              LDR      r0,|L1.1064|
0001c2  f890003a          LDRB     r0,[r0,#0x3a]         ;400  ; strengthFuelFlash
0001c6  2802              CMP      r0,#2                 ;400
0001c8  d107              BNE      |L1.474|
0001ca  7960              LDRB     r0,[r4,#5]            ;402
0001cc  1c80              ADDS     r0,r0,#2              ;402
0001ce  7160              STRB     r0,[r4,#5]            ;402
0001d0  7960              LDRB     r0,[r4,#5]            ;403
0001d2  b910              CBNZ     r0,|L1.474|
0001d4  7920              LDRB     r0,[r4,#4]            ;404
0001d6  1c40              ADDS     r0,r0,#1              ;404
0001d8  7120              STRB     r0,[r4,#4]            ;404
                  |L1.474|
0001da  1c70              ADDS     r0,r6,#1              ;379
0001dc  b2c6              UXTB     r6,r0                 ;379
                  |L1.478|
0001de  42be              CMP      r6,r7                 ;379
0001e0  dbb6              BLT      |L1.336|
                  |L1.482|
0001e2  bf00              NOP                            ;393
0001e4  4898              LDR      r0,|L1.1096|
0001e6  7800              LDRB     r0,[r0,#0]            ;407  ; strengPower
0001e8  28af              CMP      r0,#0xaf              ;407
0001ea  d01b              BEQ      |L1.548|
0001ec  42be              CMP      r6,r7                 ;407
0001ee  d119              BNE      |L1.548|
0001f0  20af              MOVS     r0,#0xaf              ;409
0001f2  4995              LDR      r1,|L1.1096|
0001f4  7008              STRB     r0,[r1,#0]            ;409
0001f6  4608              MOV      r0,r1                 ;410
0001f8  7047              STRB     r7,[r0,#1]            ;410
0001fa  007a              LSLS     r2,r7,#1              ;411
0001fc  4649              MOV      r1,r9                 ;411
0001fe  1c80              ADDS     r0,r0,#2              ;411
000200  f7fffffe          BL       __aeabi_memcpy
000204  22c8              MOVS     r2,#0xc8              ;412
000206  4997              LDR      r1,|L1.1124|
000208  488f              LDR      r0,|L1.1096|
00020a  f7fffffe          BL       Save2KDataToFlash
00020e  a096              ADR      r0,|L1.1128|
000210  f7fffffe          BL       LogReport
000214  2001              MOVS     r0,#1                 ;414
000216  499b              LDR      r1,|L1.1156|
000218  f8810099          STRB     r0,[r1,#0x99]         ;414
00021c  2000              MOVS     r0,#0                 ;415
00021e  4982              LDR      r1,|L1.1064|
000220  7648              STRB     r0,[r1,#0x19]         ;415
000222  e157              B        |L1.1236|
                  |L1.548|
000224  42be              CMP      r6,r7                 ;416
000226  d003              BEQ      |L1.560|
000228  a097              ADR      r0,|L1.1160|
00022a  f7fffffe          BL       LogReport
00022e  e151              B        |L1.1236|
                  |L1.560|
000230  f8995001          LDRB     r5,[r9,#1]            ;422
000234  f8990000          LDRB     r0,[r9,#0]            ;423
000238  eb002005          ADD      r0,r0,r5,LSL #8       ;423
00023c  b285              UXTH     r5,r0                 ;423
00023e  4882              LDR      r0,|L1.1096|
000240  f8908003          LDRB     r8,[r0,#3]            ;424  ; strengPower
000244  7880              LDRB     r0,[r0,#2]            ;425  ; strengPower
000246  eb002008          ADD      r0,r0,r8,LSL #8       ;425
00024a  fa1ff880          UXTH     r8,r0                 ;425
00024e  45a8              CMP      r8,r5                 ;426
000250  dd02              BLE      |L1.600|
000252  eba80105          SUB      r1,r8,r5              ;426
000256  e001              B        |L1.604|
                  |L1.600|
000258  eba50108          SUB      r1,r5,r8              ;426
                  |L1.604|
00025c  4608              MOV      r0,r1                 ;426
00025e  f7fffffe          BL       __aeabi_i2d
000262  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;426
000266  4640              MOV      r0,r8                 ;427
000268  f7fffffe          BL       __aeabi_ui2d
00026c  2200              MOVS     r2,#0                 ;427
00026e  4b8c              LDR      r3,|L1.1184|
000270  e9cd0102          STRD     r0,r1,[sp,#8]         ;427
000274  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;427
000278  f7fffffe          BL       __aeabi_dmul
00027c  e9cd0100          STRD     r0,r1,[sp,#0]         ;427
000280  e9dd2302          LDRD     r2,r3,[sp,#8]         ;427
000284  f7fffffe          BL       __aeabi_ddiv
000288  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;427
00028c  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;428
000290  f7fffffe          BL       __aeabi_d2uiz
000294  b280              UXTH     r0,r0                 ;428
000296  9009              STR      r0,[sp,#0x24]         ;428
000298  9809              LDR      r0,[sp,#0x24]         ;429
00029a  f7fffffe          BL       __aeabi_ui2d
00029e  2200              MOVS     r2,#0                 ;429
0002a0  4b80              LDR      r3,|L1.1188|
0002a2  e9cd0100          STRD     r0,r1,[sp,#0]         ;429
0002a6  f7fffffe          BL       __aeabi_dadd
0002aa  e9cd0102          STRD     r0,r1,[sp,#8]         ;429
0002ae  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;429
0002b2  f7fffffe          BL       __aeabi_cdcmple
0002b6  d203              BCS      |L1.704|
0002b8  9809              LDR      r0,[sp,#0x24]         ;430
0002ba  1c40              ADDS     r0,r0,#1              ;430
0002bc  b280              UXTH     r0,r0                 ;430
0002be  9009              STR      r0,[sp,#0x24]         ;430
                  |L1.704|
0002c0  9809              LDR      r0,[sp,#0x24]         ;431
0002c2  b2c0              UXTB     r0,r0                 ;431
0002c4  9008              STR      r0,[sp,#0x20]         ;431
0002c6  45a8              CMP      r8,r5                 ;432
0002c8  dd01              BLE      |L1.718|
0002ca  2001              MOVS     r0,#1                 ;432
0002cc  e000              B        |L1.720|
                  |L1.718|
0002ce  2002              MOVS     r0,#2                 ;432
                  |L1.720|
0002d0  9006              STR      r0,[sp,#0x18]         ;432
0002d2  2601              MOVS     r6,#1                 ;433
0002d4  e097              B        |L1.1030|
                  |L1.726|
0002d6  2001              MOVS     r0,#1                 ;435
0002d8  eb000046          ADD      r0,r0,r6,LSL #1       ;435
0002dc  f8195000          LDRB     r5,[r9,r0]            ;435
0002e0  f8190016          LDRB     r0,[r9,r6,LSL #1]     ;436
0002e4  eb002005          ADD      r0,r0,r5,LSL #8       ;436
0002e8  b285              UXTH     r5,r0                 ;436
0002ea  2003              MOVS     r0,#3                 ;437
0002ec  eb000046          ADD      r0,r0,r6,LSL #1       ;437
0002f0  4955              LDR      r1,|L1.1096|
0002f2  f8118000          LDRB     r8,[r1,r0]            ;437
0002f6  2002              MOVS     r0,#2                 ;438
0002f8  eb000046          ADD      r0,r0,r6,LSL #1       ;438
0002fc  5c08              LDRB     r0,[r1,r0]            ;438
0002fe  eb002008          ADD      r0,r0,r8,LSL #8       ;438
000302  fa1ff880          UXTH     r8,r0                 ;438
000306  4545              CMP      r5,r8                 ;440
000308  d102              BNE      |L1.784|
00030a  2d64              CMP      r5,#0x64              ;440
00030c  da00              BGE      |L1.784|
00030e  e078              B        |L1.1026|
                  |L1.784|
000310  45a8              CMP      r8,r5                 ;443
000312  dd02              BLE      |L1.794|
000314  eba80105          SUB      r1,r8,r5              ;443
000318  e001              B        |L1.798|
                  |L1.794|
00031a  eba50108          SUB      r1,r5,r8              ;443
                  |L1.798|
00031e  4608              MOV      r0,r1                 ;443
000320  f7fffffe          BL       __aeabi_i2d
000324  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;443
000328  4640              MOV      r0,r8                 ;444
00032a  f7fffffe          BL       __aeabi_ui2d
00032e  2200              MOVS     r2,#0                 ;444
000330  4b5b              LDR      r3,|L1.1184|
000332  e9cd0102          STRD     r0,r1,[sp,#8]         ;444
000336  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;444
00033a  f7fffffe          BL       __aeabi_dmul
00033e  e9cd0100          STRD     r0,r1,[sp,#0]         ;444
000342  e9dd2302          LDRD     r2,r3,[sp,#8]         ;444
000346  f7fffffe          BL       __aeabi_ddiv
00034a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;444
00034e  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;445
000352  f7fffffe          BL       __aeabi_d2uiz
000356  b280              UXTH     r0,r0                 ;445
000358  9009              STR      r0,[sp,#0x24]         ;445
00035a  9809              LDR      r0,[sp,#0x24]         ;446
00035c  f7fffffe          BL       __aeabi_ui2d
000360  2200              MOVS     r2,#0                 ;446
000362  4b50              LDR      r3,|L1.1188|
000364  e9cd0100          STRD     r0,r1,[sp,#0]         ;446
000368  f7fffffe          BL       __aeabi_dadd
00036c  e9cd0102          STRD     r0,r1,[sp,#8]         ;446
000370  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;446
000374  f7fffffe          BL       __aeabi_cdcmple
000378  d203              BCS      |L1.898|
00037a  9809              LDR      r0,[sp,#0x24]         ;447
00037c  1c40              ADDS     r0,r0,#1              ;447
00037e  b280              UXTH     r0,r0                 ;447
000380  9009              STR      r0,[sp,#0x24]         ;447
                  |L1.898|
000382  9809              LDR      r0,[sp,#0x24]         ;449
000384  b2c0              UXTB     r0,r0                 ;449
000386  9007              STR      r0,[sp,#0x1c]         ;449
000388  45a8              CMP      r8,r5                 ;450
00038a  dd01              BLE      |L1.912|
00038c  2001              MOVS     r0,#1                 ;450
00038e  e000              B        |L1.914|
                  |L1.912|
000390  2002              MOVS     r0,#2                 ;450
                  |L1.914|
000392  9005              STR      r0,[sp,#0x14]         ;450
000394  e9dd1007          LDRD     r1,r0,[sp,#0x1c]      ;451
000398  4288              CMP      r0,r1                 ;451
00039a  d103              BNE      |L1.932|
00039c  e9dd1005          LDRD     r1,r0,[sp,#0x14]      ;451
0003a0  4288              CMP      r0,r1                 ;451
0003a2  d02d              BEQ      |L1.1024|
                  |L1.932|
0003a4  b365              CBZ      r5,|L1.1024|
0003a6  20af              MOVS     r0,#0xaf              ;453
0003a8  4927              LDR      r1,|L1.1096|
0003aa  7008              STRB     r0,[r1,#0]            ;453
0003ac  4608              MOV      r0,r1                 ;454
0003ae  7047              STRB     r7,[r0,#1]            ;454
0003b0  007a              LSLS     r2,r7,#1              ;455
0003b2  4649              MOV      r1,r9                 ;455
0003b4  1c80              ADDS     r0,r0,#2              ;455
0003b6  f7fffffe          BL       __aeabi_memcpy
0003ba  22c8              MOVS     r2,#0xc8              ;456
0003bc  4929              LDR      r1,|L1.1124|
0003be  4822              LDR      r0,|L1.1096|
0003c0  f7fffffe          BL       Save2KDataToFlash
0003c4  2005              MOVS     r0,#5                 ;458
0003c6  f7fffffe          BL       Mem_malloc
0003ca  4682              MOV      r10,r0                ;458
0003cc  2003              MOVS     r0,#3                 ;459
0003ce  f88a0000          STRB     r0,[r10,#0]           ;459
0003d2  2050              MOVS     r0,#0x50              ;460
0003d4  f88a0001          STRB     r0,[r10,#1]           ;460
0003d8  2019              MOVS     r0,#0x19              ;461
0003da  f88a0002          STRB     r0,[r10,#2]           ;461
0003de  4650              MOV      r0,r10                ;462
0003e0  f7fffffe          BL       SendPidCmdData
0003e4  4650              MOV      r0,r10                ;463
0003e6  f7fffffe          BL       Mem_free
0003ea  a02f              ADR      r0,|L1.1192|
0003ec  f7fffffe          BL       LogReport
0003f0  2001              MOVS     r0,#1                 ;466
0003f2  4924              LDR      r1,|L1.1156|
0003f4  f8810099          STRB     r0,[r1,#0x99]         ;466
0003f8  2000              MOVS     r0,#0                 ;467
0003fa  490b              LDR      r1,|L1.1064|
0003fc  7648              STRB     r0,[r1,#0x19]         ;467
0003fe  e005              B        |L1.1036|
                  |L1.1024|
000400  bf00              NOP                            ;441
                  |L1.1026|
000402  1c70              ADDS     r0,r6,#1              ;433
000404  b2c6              UXTB     r6,r0                 ;433
                  |L1.1030|
000406  42be              CMP      r6,r7                 ;433
000408  f6ffaf65          BLT      |L1.726|
                  |L1.1036|
00040c  bf00              NOP                            ;468
00040e  42be              CMP      r6,r7                 ;471
000410  d160              BNE      |L1.1236|
000412  2001              MOVS     r0,#1                 ;473
000414  491b              LDR      r1,|L1.1156|
000416  f8810099          STRB     r0,[r1,#0x99]         ;473
00041a  9808              LDR      r0,[sp,#0x20]         ;474
00041c  b240              SXTB     r0,r0                 ;474
00041e  4902              LDR      r1,|L1.1064|
000420  7648              STRB     r0,[r1,#0x19]         ;474
000422  9806              LDR      r0,[sp,#0x18]         ;475
000424  2801              CMP      r0,#1                 ;475
000426  e047              B        |L1.1208|
                  |L1.1064|
                          DCD      strengthFuelFlash
                  |L1.1068|
00042c  53657276          DCB      "Service mode Error!",0
000430  69636520
000434  6d6f6465
000438  20457272
00043c  6f722100
                  |L1.1088|
                          DCD      dataToSend
                  |L1.1092|
                          DCD      canRecieveQ
                  |L1.1096|
                          DCD      strengPower
                  |L1.1100|
00044c  50656e59          DCB      "PenYou Read Wrong!!!",0
000450  6f752052
000454  65616420
000458  57726f6e
00045c  67212121
000460  00      
000461  00                DCB      0
000462  00                DCB      0
000463  00                DCB      0
                  |L1.1124|
                          DCD      0x08060000
                  |L1.1128|
000468  50656e59          DCB      "PenYou Write to Flash OK!!!",0
00046c  6f752057
000470  72697465
000474  20746f20
000478  466c6173
00047c  68204f4b
000480  21212100
                  |L1.1156|
                          DCD      varOperation
                  |L1.1160|
000488  50656e59          DCB      "PenYou not read all!!!",0
00048c  6f75206e
000490  6f742072
000494  65616420
000498  616c6c21
00049c  212100  
00049f  00                DCB      0
                  |L1.1184|
                          DCD      0x40590000
                  |L1.1188|
                          DCD      0x3fe00000
                  |L1.1192|
0004a8  43617220          DCB      "Car changed!!!",0
0004ac  6368616e
0004b0  67656421
0004b4  212100  
0004b7  00                DCB      0
                  |L1.1208|
0004b8  d10c              BNE      |L1.1236|
0004ba  4608              MOV      r0,r1                 ;476
0004bc  7e40              LDRB     r0,[r0,#0x19]         ;476  ; strengthFuelFlash
0004be  4240              RSBS     r0,r0,#0              ;476
0004c0  b240              SXTB     r0,r0                 ;476
0004c2  7648              STRB     r0,[r1,#0x19]         ;476
0004c4  e006              B        |L1.1236|
                  |L1.1222|
0004c6  2000              MOVS     r0,#0                 ;481
0004c8  4905              LDR      r1,|L1.1248|
0004ca  f8810099          STRB     r0,[r1,#0x99]         ;481
0004ce  a005              ADR      r0,|L1.1252|
0004d0  f7fffffe          BL       LogReport
                  |L1.1236|
0004d4  4620              MOV      r0,r4                 ;484
0004d6  f7fffffe          BL       Mem_free
0004da  bf00              NOP      
0004dc  e5d2              B        |L1.132|
;;;486    
                          ENDP

0004de  0000              DCW      0x0000
                  |L1.1248|
                          DCD      varOperation
                  |L1.1252|
0004e4  50656e59          DCB      "PenYou can't read!",0
0004e8  6f752063
0004ec  616e2774
0004f0  20726561
0004f4  642100  
0004f7  00                DCB      0

                          AREA ||i.ReadECUVersion||, CODE, READONLY, ALIGN=2

                  ReadECUVersion PROC
;;;222    
;;;223    uint8_t  ReadECUVersion(uint8_t cmd[])	//读取ECU版本号
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;224    {
000004  4607              MOV      r7,r0
;;;225    	uint8_t err,i=0;
000006  2400              MOVS     r4,#0
;;;226    	uint8_t* ptrVer;
;;;227    	uint8_t cmdLen = 0;
000008  46a1              MOV      r9,r4
;;;228    	CanRxMsg* CAN1_RxMsg;
;;;229    	uint8_t * carChange = NULL;
00000a  2600              MOVS     r6,#0
;;;230    	ptrVer = Mem_malloc(60);
00000c  203c              MOVS     r0,#0x3c
00000e  f7fffffe          BL       Mem_malloc
000012  4680              MOV      r8,r0
;;;231    
;;;232    	dataToSend.pdat   = cmd;
000014  4871              LDR      r0,|L2.476|
000016  6087              STR      r7,[r0,#8]  ; dataToSend
;;;233    	cmdLen = cmd[0];
000018  f8979000          LDRB     r9,[r7,#0]
;;;234    	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat); 
00001c  4603              MOV      r3,r0
00001e  689a              LDR      r2,[r3,#8]  ; dataToSend
000020  6859              LDR      r1,[r3,#4]  ; dataToSend
000022  6818              LDR      r0,[r3,#0]  ; dataToSend
000024  f7fffffe          BL       OBD_CAN_SendData
;;;235    	CAN1_RxMsg = OSQPend(canRecieveQ,50,&err);
000028  466a              MOV      r2,sp
00002a  2132              MOVS     r1,#0x32
00002c  486c              LDR      r0,|L2.480|
00002e  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000030  f7fffffe          BL       OSQPend
000034  4605              MOV      r5,r0
;;;236    	if((err == OS_ERR_NONE) && (CAN1_RxMsg->Data[0] == 0x10))
000036  f89d0000          LDRB     r0,[sp,#0]
00003a  b980              CBNZ     r0,|L2.94|
00003c  7ae8              LDRB     r0,[r5,#0xb]
00003e  2810              CMP      r0,#0x10
000040  d10d              BNE      |L2.94|
;;;237    	{
;;;238    		memcpy(ptrVer,&CAN1_RxMsg->Data[cmdLen+2],6-cmdLen);
000042  f1c90206          RSB      r2,r9,#6
000046  f105000b          ADD      r0,r5,#0xb
00004a  f1090302          ADD      r3,r9,#2
00004e  18c1              ADDS     r1,r0,r3
000050  4640              MOV      r0,r8
000052  f7fffffe          BL       __aeabi_memcpy
;;;239    		Mem_free(CAN1_RxMsg);
000056  4628              MOV      r0,r5
000058  f7fffffe          BL       Mem_free
00005c  e009              B        |L2.114|
                  |L2.94|
;;;240    	}
;;;241    	else 
;;;242    	{
;;;243    		LogReport("\r\n17-ECUVer read fail!");varOperation.isStrenOilOK = 0;
00005e  a061              ADR      r0,|L2.484|
000060  f7fffffe          BL       LogReport
000064  2000              MOVS     r0,#0
000066  4965              LDR      r1,|L2.508|
000068  f8810099          STRB     r0,[r1,#0x99]
;;;244    		return 200;
00006c  20c8              MOVS     r0,#0xc8
                  |L2.110|
;;;245    	}
;;;246    		
;;;247    	dataToSend.pdat   = verMany;
;;;248    	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
;;;249    	do{
;;;250    		CAN1_RxMsg = OSQPend(canRecieveQ,200,&err);
;;;251    		if(err == OS_ERR_NONE)
;;;252    		{
;;;253    			memcpy(&ptrVer[7*i + 6-cmdLen],&CAN1_RxMsg->Data[1],7);
;;;254    			Mem_free(CAN1_RxMsg);
;;;255    		}
;;;256    		i++;
;;;257    	}while(err == OS_ERR_NONE);
;;;258    	if(i<2)
;;;259    	{
;;;260    		LogReport("\r\n18-ECUVer read fail!");varOperation.isStrenOilOK = 0;
;;;261    		return 200;//识别错误
;;;262    	}
;;;263    		
;;;264    	memcpy(varOperation.ecuVersion,ptrVer,19);
;;;265    	Mem_free(ptrVer);
;;;266    	for(i=0;i<20;i++)
;;;267    	{
;;;268    		if(i<5)
;;;269    		{
;;;270    			if((varOperation.ecuVersion[i] < 0x20)||(varOperation.ecuVersion[i] > 0x7E))//读取到非显示字符
;;;271    			{
;;;272    				LogReport("\r\n19-ECUVer read fail!");varOperation.isStrenOilOK = 0;
;;;273    				return 200;//版本号识别出错
;;;274    			}	
;;;275    		}
;;;276    		if(varOperation.ecuVersion[i]  == 0x20)
;;;277    			varOperation.ecuVersion[i] =  '\0';
;;;278    	}	
;;;279    	LogReport("\r\n20-ECUVer:%s.",varOperation.ecuVersion);//上报版本号
;;;280    	
;;;281    //根据ECU版本号 确定ECU安全算法的掩码
;;;282    	if(strcmp(varOperation.ecuVersion,(const char *)strengthFuelFlash.ecuVer) == 0)//获得掩码
;;;283    	{
;;;284    		ecuMask = strengthFuelFlash.mask[0];
;;;285    		ecuMask = (ecuMask << 8) + strengthFuelFlash.mask[1];
;;;286    		ecuMask = (ecuMask << 8) + strengthFuelFlash.mask[2];
;;;287    		ecuMask = (ecuMask << 8) + strengthFuelFlash.mask[3];
;;;288    		
;;;289    		return 0;
;;;290    	}else
;;;291    	{
;;;292    		varOperation.isStrenOilOK = 0;   //配置文件的版本号与实际ECU的版本号不同，则不可以进行动力提升
;;;293    		memset(strengPower,0,200);       //清空Flash保存的喷油量的值
;;;294    		SoftErasePage(STRENGE_Q);
;;;295    		Save2KDataToFlash(strengPower,STRENGE_Q,200);
;;;296    		
;;;297    		carChange = Mem_malloc(5);  //
;;;298    		carChange[0] = 3;           //长度
;;;299    		carChange[1] = 0x50;
;;;300    		carChange[2] = 0x19;
;;;301    		SendPidCmdData(carChange);
;;;302    		Mem_free(carChange);
;;;303    		LogReport("\r\nCar changed!!!");                       //可能换车了
;;;304    		LogReport("\r\n21-ECUVer Mismatching;");
;;;305    		varOperation.isStrenOilOK = 0; 	 //不能进行动力提升
;;;306    		return 100;                      //版本号读取出来了，还没有匹配的提升动力版本号
;;;307    	}
;;;308    }
00006e  e8bd83f8          POP      {r3-r9,pc}
                  |L2.114|
000072  4863              LDR      r0,|L2.512|
000074  4959              LDR      r1,|L2.476|
000076  6088              STR      r0,[r1,#8]            ;247  ; dataToSend
000078  460b              MOV      r3,r1                 ;248
00007a  689a              LDR      r2,[r3,#8]            ;248  ; dataToSend
00007c  6859              LDR      r1,[r3,#4]            ;248  ; dataToSend
00007e  6818              LDR      r0,[r3,#0]            ;248  ; dataToSend
000080  f7fffffe          BL       OBD_CAN_SendData
000084  bf00              NOP                            ;249
                  |L2.134|
000086  466a              MOV      r2,sp                 ;250
000088  21c8              MOVS     r1,#0xc8              ;250
00008a  4855              LDR      r0,|L2.480|
00008c  6800              LDR      r0,[r0,#0]            ;250  ; canRecieveQ
00008e  f7fffffe          BL       OSQPend
000092  4605              MOV      r5,r0                 ;250
000094  f89d0000          LDRB     r0,[sp,#0]            ;251
000098  b978              CBNZ     r0,|L2.186|
00009a  ebc400c4          RSB      r0,r4,r4,LSL #3       ;253
00009e  1d80              ADDS     r0,r0,#6              ;253
0000a0  eba00009          SUB      r0,r0,r9              ;253
0000a4  eb000108          ADD      r1,r0,r8              ;253
0000a8  68ea              LDR      r2,[r5,#0xc]          ;253
0000aa  600a              STR      r2,[r1,#0]            ;253
0000ac  8a2a              LDRH     r2,[r5,#0x10]         ;253
0000ae  808a              STRH     r2,[r1,#4]            ;253
0000b0  7ca8              LDRB     r0,[r5,#0x12]         ;253
0000b2  7188              STRB     r0,[r1,#6]            ;253
0000b4  4628              MOV      r0,r5                 ;254
0000b6  f7fffffe          BL       Mem_free
                  |L2.186|
0000ba  1c60              ADDS     r0,r4,#1              ;256
0000bc  b2c4              UXTB     r4,r0                 ;256
0000be  f89d0000          LDRB     r0,[sp,#0]            ;257
0000c2  2800              CMP      r0,#0                 ;257
0000c4  d0df              BEQ      |L2.134|
0000c6  2c02              CMP      r4,#2                 ;258
0000c8  da08              BGE      |L2.220|
0000ca  a04e              ADR      r0,|L2.516|
0000cc  f7fffffe          BL       LogReport
0000d0  2000              MOVS     r0,#0                 ;260
0000d2  494a              LDR      r1,|L2.508|
0000d4  f8810099          STRB     r0,[r1,#0x99]         ;260
0000d8  20c8              MOVS     r0,#0xc8              ;261
0000da  e7c8              B        |L2.110|
                  |L2.220|
0000dc  2213              MOVS     r2,#0x13              ;264
0000de  4641              MOV      r1,r8                 ;264
0000e0  4846              LDR      r0,|L2.508|
0000e2  3064              ADDS     r0,r0,#0x64           ;264
0000e4  f7fffffe          BL       __aeabi_memcpy
0000e8  4640              MOV      r0,r8                 ;265
0000ea  f7fffffe          BL       Mem_free
0000ee  2400              MOVS     r4,#0                 ;266
0000f0  e01f              B        |L2.306|
                  |L2.242|
0000f2  2c05              CMP      r4,#5                 ;268
0000f4  da12              BGE      |L2.284|
0000f6  4841              LDR      r0,|L2.508|
0000f8  3064              ADDS     r0,r0,#0x64           ;270
0000fa  5d00              LDRB     r0,[r0,r4]            ;270
0000fc  2820              CMP      r0,#0x20              ;270
0000fe  db04              BLT      |L2.266|
000100  483e              LDR      r0,|L2.508|
000102  3064              ADDS     r0,r0,#0x64           ;270
000104  5d00              LDRB     r0,[r0,r4]            ;270
000106  287e              CMP      r0,#0x7e              ;270
000108  dd08              BLE      |L2.284|
                  |L2.266|
00010a  a044              ADR      r0,|L2.540|
00010c  f7fffffe          BL       LogReport
000110  2000              MOVS     r0,#0                 ;272
000112  493a              LDR      r1,|L2.508|
000114  f8810099          STRB     r0,[r1,#0x99]         ;272
000118  20c8              MOVS     r0,#0xc8              ;273
00011a  e7a8              B        |L2.110|
                  |L2.284|
00011c  4837              LDR      r0,|L2.508|
00011e  3064              ADDS     r0,r0,#0x64           ;276
000120  5d00              LDRB     r0,[r0,r4]            ;276
000122  2820              CMP      r0,#0x20              ;276
000124  d103              BNE      |L2.302|
000126  2100              MOVS     r1,#0                 ;277
000128  4834              LDR      r0,|L2.508|
00012a  3064              ADDS     r0,r0,#0x64           ;277
00012c  5501              STRB     r1,[r0,r4]            ;277
                  |L2.302|
00012e  1c60              ADDS     r0,r4,#1              ;266
000130  b2c4              UXTB     r4,r0                 ;266
                  |L2.306|
000132  2c14              CMP      r4,#0x14              ;266
000134  dbdd              BLT      |L2.242|
000136  4931              LDR      r1,|L2.508|
000138  3164              ADDS     r1,r1,#0x64           ;279
00013a  a03e              ADR      r0,|L2.564|
00013c  f7fffffe          BL       LogReport
000140  4940              LDR      r1,|L2.580|
000142  482e              LDR      r0,|L2.508|
000144  3064              ADDS     r0,r0,#0x64           ;282
000146  f7fffffe          BL       strcmp
00014a  b9d0              CBNZ     r0,|L2.386|
00014c  483d              LDR      r0,|L2.580|
00014e  7d40              LDRB     r0,[r0,#0x15]         ;284  ; strengthFuelFlash
000150  493d              LDR      r1,|L2.584|
000152  6008              STR      r0,[r1,#0]            ;284  ; ecuMask
000154  483b              LDR      r0,|L2.580|
000156  7d80              LDRB     r0,[r0,#0x16]         ;285
000158  6809              LDR      r1,[r1,#0]            ;285  ; ecuMask
00015a  eb002001          ADD      r0,r0,r1,LSL #8       ;285
00015e  493a              LDR      r1,|L2.584|
000160  6008              STR      r0,[r1,#0]            ;285  ; ecuMask
000162  4838              LDR      r0,|L2.580|
000164  7dc0              LDRB     r0,[r0,#0x17]         ;286
000166  6809              LDR      r1,[r1,#0]            ;286  ; ecuMask
000168  eb002001          ADD      r0,r0,r1,LSL #8       ;286
00016c  4936              LDR      r1,|L2.584|
00016e  6008              STR      r0,[r1,#0]            ;286  ; ecuMask
000170  4834              LDR      r0,|L2.580|
000172  7e00              LDRB     r0,[r0,#0x18]         ;287
000174  6809              LDR      r1,[r1,#0]            ;287  ; ecuMask
000176  eb002001          ADD      r0,r0,r1,LSL #8       ;287
00017a  4933              LDR      r1,|L2.584|
00017c  6008              STR      r0,[r1,#0]            ;287  ; ecuMask
00017e  2000              MOVS     r0,#0                 ;289
000180  e775              B        |L2.110|
                  |L2.386|
000182  2000              MOVS     r0,#0                 ;292
000184  491d              LDR      r1,|L2.508|
000186  f8810099          STRB     r0,[r1,#0x99]         ;292
00018a  21c8              MOVS     r1,#0xc8              ;293
00018c  482f              LDR      r0,|L2.588|
00018e  f7fffffe          BL       __aeabi_memclr
000192  482f              LDR      r0,|L2.592|
000194  f7fffffe          BL       SoftErasePage
000198  22c8              MOVS     r2,#0xc8              ;295
00019a  492d              LDR      r1,|L2.592|
00019c  482b              LDR      r0,|L2.588|
00019e  f7fffffe          BL       Save2KDataToFlash
0001a2  2005              MOVS     r0,#5                 ;297
0001a4  f7fffffe          BL       Mem_malloc
0001a8  4606              MOV      r6,r0                 ;297
0001aa  2003              MOVS     r0,#3                 ;298
0001ac  7030              STRB     r0,[r6,#0]            ;298
0001ae  2050              MOVS     r0,#0x50              ;299
0001b0  7070              STRB     r0,[r6,#1]            ;299
0001b2  2019              MOVS     r0,#0x19              ;300
0001b4  70b0              STRB     r0,[r6,#2]            ;300
0001b6  4630              MOV      r0,r6                 ;301
0001b8  f7fffffe          BL       SendPidCmdData
0001bc  4630              MOV      r0,r6                 ;302
0001be  f7fffffe          BL       Mem_free
0001c2  a024              ADR      r0,|L2.596|
0001c4  f7fffffe          BL       LogReport
0001c8  a027              ADR      r0,|L2.616|
0001ca  f7fffffe          BL       LogReport
0001ce  2000              MOVS     r0,#0                 ;305
0001d0  490a              LDR      r1,|L2.508|
0001d2  f8810099          STRB     r0,[r1,#0x99]         ;305
0001d6  2064              MOVS     r0,#0x64              ;306
0001d8  e749              B        |L2.110|
;;;309    void Get_Q_FromECU(void)
                          ENDP

0001da  0000              DCW      0x0000
                  |L2.476|
                          DCD      dataToSend
                  |L2.480|
                          DCD      canRecieveQ
                  |L2.484|
0001e4  0d0a3137          DCB      "\r\n17-ECUVer read fail!",0
0001e8  2d454355
0001ec  56657220
0001f0  72656164
0001f4  20666169
0001f8  6c2100  
0001fb  00                DCB      0
                  |L2.508|
                          DCD      varOperation
                  |L2.512|
                          DCD      verMany
                  |L2.516|
000204  0d0a3138          DCB      "\r\n18-ECUVer read fail!",0
000208  2d454355
00020c  56657220
000210  72656164
000214  20666169
000218  6c2100  
00021b  00                DCB      0
                  |L2.540|
00021c  0d0a3139          DCB      "\r\n19-ECUVer read fail!",0
000220  2d454355
000224  56657220
000228  72656164
00022c  20666169
000230  6c2100  
000233  00                DCB      0
                  |L2.564|
000234  0d0a3230          DCB      "\r\n20-ECUVer:%s.",0
000238  2d454355
00023c  5665723a
000240  25732e00
                  |L2.580|
                          DCD      strengthFuelFlash
                  |L2.584|
                          DCD      ecuMask
                  |L2.588|
                          DCD      strengPower
                  |L2.592|
                          DCD      0x08060000
                  |L2.596|
000254  0d0a4361          DCB      "\r\nCar changed!!!",0
000258  72206368
00025c  616e6765
000260  64212121
000264  00      
000265  00                DCB      0
000266  00                DCB      0
000267  00                DCB      0
                  |L2.616|
000268  0d0a3231          DCB      "\r\n21-ECUVer Mismatching;",0
00026c  2d454355
000270  56657220
000274  4d69736d
000278  61746368
00027c  696e673b
000280  00      
000281  00                DCB      0
000282  00                DCB      0
000283  00                DCB      0

                          AREA ||i.SafeALG||, CODE, READONLY, ALIGN=2

                  SafeALG PROC
;;;38     extern CAN1DataToSend  dataToSend; 
;;;39     void SafeALG(void)
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;40     {
;;;41     	uint8_t err,i;
;;;42     	CanRxMsg* CAN1_RxMsg;
;;;43     	uint8_t pNum,offset;
;;;44         uint8_t* cmdToSend;
;;;45     	uint8_t* seed;
;;;46     	uint8_t* key;
;;;47     	signed char coe;
;;;48     	uint16_t datToWrite = 0x0000;
000004  2600              MOVS     r6,#0
;;;49     	
;;;50     	cmdToSend = Mem_malloc(8);
000006  2008              MOVS     r0,#8
000008  f7fffffe          BL       Mem_malloc
00000c  4605              MOV      r5,r0
;;;51     	seed = Mem_malloc(4);
00000e  2004              MOVS     r0,#4
000010  f7fffffe          BL       Mem_malloc
000014  4681              MOV      r9,r0
;;;52     	key = Mem_malloc(4);
000016  2004              MOVS     r0,#4
000018  f7fffffe          BL       Mem_malloc
00001c  4683              MOV      r11,r0
;;;53     	memset(seed,0,4);memset(key,0,4);
00001e  2000              MOVS     r0,#0
000020  f8c90000          STR      r0,[r9,#0]
000024  f8cb0000          STR      r0,[r11,#0]
;;;54     	if(strengthFuelFlash.modeOrder == 2)
000028  48fe              LDR      r0,|L3.1060|
00002a  f890003a          LDRB     r0,[r0,#0x3a]  ; strengthFuelFlash
00002e  2802              CMP      r0,#2
000030  d120              BNE      |L3.116|
;;;55     	{
;;;56     		memcpy(cmdToSend,strengthFuelFlash.mode1,8);//过模式指令
000032  48fc              LDR      r0,|L3.1060|
000034  302a              ADDS     r0,r0,#0x2a
000036  6801              LDR      r1,[r0,#0]  ; strengthFuelFlash
000038  6029              STR      r1,[r5,#0]
00003a  6840              LDR      r0,[r0,#4]  ; strengthFuelFlash
00003c  6068              STR      r0,[r5,#4]
;;;57     		dataToSend.pdat   = cmdToSend; 
00003e  48fa              LDR      r0,|L3.1064|
000040  6085              STR      r5,[r0,#8]  ; dataToSend
;;;58     		OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
000042  4603              MOV      r3,r0
000044  689a              LDR      r2,[r3,#8]  ; dataToSend
000046  6859              LDR      r1,[r3,#4]  ; dataToSend
000048  6818              LDR      r0,[r3,#0]  ; dataToSend
00004a  f7fffffe          BL       OBD_CAN_SendData
;;;59     		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
00004e  aa01              ADD      r2,sp,#4
000050  f44f71fa          MOV      r1,#0x1f4
000054  48f5              LDR      r0,|L3.1068|
000056  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000058  f7fffffe          BL       OSQPend
00005c  4682              MOV      r10,r0
;;;60     		if(err != OS_ERR_NONE)
00005e  f89d0004          LDRB     r0,[sp,#4]
000062  b120              CBZ      r0,|L3.110|
;;;61     		{
;;;62     			LogReport("\r\nMode cmd Error.");
000064  a0f2              ADR      r0,|L3.1072|
000066  f7fffffe          BL       LogReport
                  |L3.106|
;;;63     			return;
;;;64     		}
;;;65     		Mem_free(CAN1_RxMsg);
;;;66     	}
;;;67     	memcpy(cmdToSend,strengthFuelFlash.safe1,8);  //安全算法指令1  从ECU得到种子
;;;68     	dataToSend.pdat   = cmdToSend;                //此处开始过安全算法
;;;69     	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
;;;70     	CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
;;;71     	if(err == OS_ERR_NONE)
;;;72     	{
;;;73     		seed[0]=CAN1_RxMsg->Data[3];seed[1]=CAN1_RxMsg->Data[4];
;;;74     		seed[2]=CAN1_RxMsg->Data[5];seed[3]=CAN1_RxMsg->Data[6];
;;;75     		SeedToKey(seed,key);                         //根据ECU返回的种子，计算出秘钥
;;;76     		memcpy(cmdToSend,strengthFuelFlash.safe2,8); //安全算法指令2  将秘钥写入ECU
;;;77     		cmdToSend[0] = 0x06;
;;;78     		cmdToSend[3] = key[0];cmdToSend[4] = key[1];cmdToSend[5] = key[2];cmdToSend[6] = key[3];
;;;79     		Mem_free(CAN1_RxMsg);
;;;80     	}
;;;81     	Mem_free(seed);Mem_free(key);      //用完了就释放内存块
;;;82     	dataToSend.pdat   = cmdToSend; 
;;;83     	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
;;;84     	CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
;;;85     	if(err == OS_ERR_NONE)
;;;86     	{
;;;87     		if(CAN1_RxMsg->Data[1] != 0x7F)
;;;88     			LogReport("\r\n13-NTRU Success.");//安全算法通过
;;;89     		else
;;;90     		{
;;;91     			LogReport("\r\n14-NTRU Fail.");   //没通过安全算法
;;;92     			varOperation.oilMode = 0;
;;;93     			Mem_free(CAN1_RxMsg);
;;;94     			return;
;;;95     		}
;;;96     		Mem_free(CAN1_RxMsg);
;;;97     	}
;;;98     	//todo：顺序有待根据下发的指令顺序进行调整     安全算法的模式指令在此发送
;;;99     	if(strengthFuelFlash.modeOrder == 1)
;;;100    	{
;;;101    		memcpy(cmdToSend,strengthFuelFlash.mode1,8);//过模式指令
;;;102    		dataToSend.pdat   = cmdToSend; 
;;;103    		OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
;;;104    		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
;;;105    		Mem_free(CAN1_RxMsg);
;;;106    		
;;;107    		memcpy(cmdToSend,strengthFuelFlash.mode2,8);//进入功能模式指令
;;;108    		dataToSend.pdat   = cmdToSend;
;;;109    		OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
;;;110    		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
;;;111    		Mem_free(CAN1_RxMsg);
;;;112    	}
;;;113    	Mem_free(cmdToSend);
;;;114    	cmdToSend = Mem_malloc(100);
;;;115    	pNum   = 0x21;
;;;116    	offset = 0;
;;;117    	cmdToSend[offset++] = 0x10;                  //将修改后的标定数据写入ECU，多包
;;;118    	if(strengthFuelFlash.modeOrder == 1)
;;;119    	{
;;;120    		cmdToSend[offset++] = strengPower[1]*2 + 5;
;;;121    		cmdToSend[offset++] = 0x3D;
;;;122    		datToWrite  =  strengthFuelFlash.fuelAddr[2];
;;;123    		datToWrite  = (datToWrite << 8) + strengthFuelFlash.fuelAddr[3];
;;;124    		datToWrite  += strengPower[1] * 2 + 2;
;;;125    		
;;;126    		cmdToSend[offset++] = strengthFuelFlash.fuelAddr[1];//要写入的喷油地址
;;;127    		cmdToSend[offset++] = (datToWrite >> 8) & 0xFF;
;;;128    		cmdToSend[offset++] = datToWrite  & 0xFF;
;;;129    		cmdToSend[offset++] = strengPower[1] * 2;           //要写入后面跟的个数
;;;130    		coe = strengthFuel.coe;
;;;131    		for(i = 0;i < strengPower[1];i++)
;;;132    		{
;;;133    			datToWrite = strengPower[i*2+3];
;;;134    			datToWrite = (datToWrite<<8) + strengPower[i * 2 + 2];
;;;135    			if(strengthFuel.coe >= 0)
;;;136    				datToWrite += datToWrite * coe / 100;
;;;137    			else
;;;138    			{
;;;139    				coe = 0 - strengthFuel.coe;
;;;140    				datToWrite -= datToWrite * coe/100;
;;;141    			}
;;;142    			if(offset % 8 == 0)
;;;143    				cmdToSend[offset++] = pNum ++;
;;;144    			cmdToSend[offset++]	= datToWrite & 0xFF;
;;;145    			if(offset % 8 == 0)
;;;146    				cmdToSend[offset++] = pNum ++;
;;;147    			cmdToSend[offset++]	= (datToWrite >> 8) & 0xFF;
;;;148    		}
;;;149    	}else if(strengthFuelFlash.modeOrder == 2)
;;;150    	{
;;;151    		cmdToSend[offset++] = strengPower[1]*2 + 7;
;;;152    		cmdToSend[offset++] = 0x3D;
;;;153    		datToWrite  =  strengthFuelFlash.fuelAddr[3];
;;;154    		datToWrite  = (datToWrite << 8) + strengthFuelFlash.fuelAddr[4];
;;;155    		datToWrite  += strengPower[1] * 2 + 2;
;;;156    		
;;;157    		cmdToSend[offset++] = strengthFuelFlash.fuelAddr[1];//要写入的喷油地址
;;;158    		cmdToSend[offset++] = strengthFuelFlash.fuelAddr[2];
;;;159    		cmdToSend[offset++] = (datToWrite >> 8) & 0xFF;
;;;160    		cmdToSend[offset++] = datToWrite  & 0xFF;
;;;161    		cmdToSend[offset++] = 0x00;  
;;;162    		cmdToSend[offset++] = pNum++; 
;;;163    		cmdToSend[offset++] = strengPower[1] * 2;//要写入的字节数
;;;164    		coe = strengthFuel.coe;
;;;165    		for(i = 0;i < strengPower[1];i++)
;;;166    		{
;;;167    			datToWrite = strengPower[i*2+3];
;;;168    			datToWrite = (datToWrite<<8) + strengPower[i*2+2];
;;;169    			if(strengthFuel.coe >= 0)
;;;170    				datToWrite += datToWrite * coe / 100;
;;;171    			else
;;;172    			{
;;;173    				coe = 0 - strengthFuel.coe;
;;;174    				datToWrite -= datToWrite * coe/100;
;;;175    			}
;;;176    			cmdToSend[offset++]	= datToWrite & 0xFF; //将修改后的标定值写入将要发送的数组中
;;;177    			if(offset % 8 ==0)
;;;178    				cmdToSend[offset++] = pNum++;
;;;179    			cmdToSend[offset++]	= (datToWrite>>8) & 0xFF;
;;;180    			if(offset % 8 ==0)
;;;181    				cmdToSend[offset++] = pNum++;
;;;182    		}
;;;183    	}
;;;184    	CAN1_RxMsg = OSQPend(canRecieveQ,2,&err);
;;;185    	Mem_free(CAN1_RxMsg);
;;;186    	
;;;187    	dataToSend.pdat   = cmdToSend;                 //写入更改后的值
;;;188    	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
;;;189    	CAN1_RxMsg = OSQPend(canRecieveQ,1000,&err);
;;;190    	Mem_free(CAN1_RxMsg);
;;;191    	pNum = (offset%8) == 0 ? offset/8:(offset/8) + 1;
;;;192    	for(i = 1;i < pNum;i ++)
;;;193    	{
;;;194    		OSTimeDlyHMSM(0,0,0,2);
;;;195    		dataToSend.pdat = &cmdToSend[i*8];
;;;196    		OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
;;;197    	}
;;;198    	CAN1_RxMsg = OSQPend(canRecieveQ,0,&err);
;;;199    	if(CAN1_RxMsg->Data[1] == 0x7F)
;;;200    	{
;;;201    		LogReport("\r\n15-Strength Fail!");   //增强动力失败
;;;202    		varOperation.oilMode = 0;
;;;203    	}else
;;;204    	{
;;;205    		LogReport("\r\n16-Strength Success.");//增强动力成功
;;;206    		
;;;207    		strengthFuelFlash.coe = strengthFuel.coe;
;;;208    		seed = Mem_malloc(5);  //
;;;209    		seed[0] = 4;           //长度
;;;210    		seed[1] = 0x50;
;;;211    		seed[2] = 0x15;
;;;212    		seed[3] = strengthFuel.coe;
;;;213    		SendPidCmdData(seed);
;;;214    		varOperation.oilMode = 1;
;;;215    		Mem_free(seed);
;;;216    	}
;;;217    	Mem_free(CAN1_RxMsg);
;;;218    	Mem_free(cmdToSend);
;;;219    }
00006a  e8bd9ffc          POP      {r2-r12,pc}
                  |L3.110|
00006e  4650              MOV      r0,r10                ;65
000070  f7fffffe          BL       Mem_free
                  |L3.116|
000074  48eb              LDR      r0,|L3.1060|
000076  301a              ADDS     r0,r0,#0x1a           ;67
000078  6801              LDR      r1,[r0,#0]            ;67  ; strengthFuelFlash
00007a  6029              STR      r1,[r5,#0]            ;67
00007c  6840              LDR      r0,[r0,#4]            ;67  ; strengthFuelFlash
00007e  6068              STR      r0,[r5,#4]            ;67
000080  48e9              LDR      r0,|L3.1064|
000082  6085              STR      r5,[r0,#8]            ;68  ; dataToSend
000084  4603              MOV      r3,r0                 ;69
000086  689a              LDR      r2,[r3,#8]            ;69  ; dataToSend
000088  6859              LDR      r1,[r3,#4]            ;69  ; dataToSend
00008a  6818              LDR      r0,[r3,#0]            ;69  ; dataToSend
00008c  f7fffffe          BL       OBD_CAN_SendData
000090  aa01              ADD      r2,sp,#4              ;70
000092  f44f71fa          MOV      r1,#0x1f4             ;70
000096  48e5              LDR      r0,|L3.1068|
000098  6800              LDR      r0,[r0,#0]            ;70  ; canRecieveQ
00009a  f7fffffe          BL       OSQPend
00009e  4682              MOV      r10,r0                ;70
0000a0  f89d0004          LDRB     r0,[sp,#4]            ;71
0000a4  bb50              CBNZ     r0,|L3.252|
0000a6  f89a000e          LDRB     r0,[r10,#0xe]         ;73
0000aa  f8890000          STRB     r0,[r9,#0]            ;73
0000ae  f89a000f          LDRB     r0,[r10,#0xf]         ;73
0000b2  f8890001          STRB     r0,[r9,#1]            ;73
0000b6  f89a0010          LDRB     r0,[r10,#0x10]        ;74
0000ba  f8890002          STRB     r0,[r9,#2]            ;74
0000be  f89a0011          LDRB     r0,[r10,#0x11]        ;74
0000c2  f8890003          STRB     r0,[r9,#3]            ;74
0000c6  4659              MOV      r1,r11                ;75
0000c8  4648              MOV      r0,r9                 ;75
0000ca  f7fffffe          BL       SeedToKey
0000ce  48d5              LDR      r0,|L3.1060|
0000d0  3022              ADDS     r0,r0,#0x22           ;76
0000d2  6801              LDR      r1,[r0,#0]            ;76  ; strengthFuelFlash
0000d4  6029              STR      r1,[r5,#0]            ;76
0000d6  6840              LDR      r0,[r0,#4]            ;76  ; strengthFuelFlash
0000d8  6068              STR      r0,[r5,#4]            ;76
0000da  2006              MOVS     r0,#6                 ;77
0000dc  7028              STRB     r0,[r5,#0]            ;77
0000de  f89b0000          LDRB     r0,[r11,#0]           ;78
0000e2  70e8              STRB     r0,[r5,#3]            ;78
0000e4  f89b0001          LDRB     r0,[r11,#1]           ;78
0000e8  7128              STRB     r0,[r5,#4]            ;78
0000ea  f89b0002          LDRB     r0,[r11,#2]           ;78
0000ee  7168              STRB     r0,[r5,#5]            ;78
0000f0  f89b0003          LDRB     r0,[r11,#3]           ;78
0000f4  71a8              STRB     r0,[r5,#6]            ;78
0000f6  4650              MOV      r0,r10                ;79
0000f8  f7fffffe          BL       Mem_free
                  |L3.252|
0000fc  4648              MOV      r0,r9                 ;81
0000fe  f7fffffe          BL       Mem_free
000102  4658              MOV      r0,r11                ;81
000104  f7fffffe          BL       Mem_free
000108  48c7              LDR      r0,|L3.1064|
00010a  6085              STR      r5,[r0,#8]            ;82  ; dataToSend
00010c  4603              MOV      r3,r0                 ;83
00010e  689a              LDR      r2,[r3,#8]            ;83  ; dataToSend
000110  6859              LDR      r1,[r3,#4]            ;83  ; dataToSend
000112  6818              LDR      r0,[r3,#0]            ;83  ; dataToSend
000114  f7fffffe          BL       OBD_CAN_SendData
000118  aa01              ADD      r2,sp,#4              ;84
00011a  f44f71fa          MOV      r1,#0x1f4             ;84
00011e  48c3              LDR      r0,|L3.1068|
000120  6800              LDR      r0,[r0,#0]            ;84  ; canRecieveQ
000122  f7fffffe          BL       OSQPend
000126  4682              MOV      r10,r0                ;84
000128  f89d0004          LDRB     r0,[sp,#4]            ;85
00012c  b9a8              CBNZ     r0,|L3.346|
00012e  f89a000c          LDRB     r0,[r10,#0xc]         ;87
000132  287f              CMP      r0,#0x7f              ;87
000134  d003              BEQ      |L3.318|
000136  a0c3              ADR      r0,|L3.1092|
000138  f7fffffe          BL       LogReport
00013c  e00a              B        |L3.340|
                  |L3.318|
00013e  a0c6              ADR      r0,|L3.1112|
000140  f7fffffe          BL       LogReport
000144  2000              MOVS     r0,#0                 ;92
000146  49c8              LDR      r1,|L3.1128|
000148  f8810098          STRB     r0,[r1,#0x98]         ;92
00014c  4650              MOV      r0,r10                ;93
00014e  f7fffffe          BL       Mem_free
000152  e78a              B        |L3.106|
                  |L3.340|
000154  4650              MOV      r0,r10                ;96
000156  f7fffffe          BL       Mem_free
                  |L3.346|
00015a  48b2              LDR      r0,|L3.1060|
00015c  f890003a          LDRB     r0,[r0,#0x3a]         ;99  ; strengthFuelFlash
000160  2801              CMP      r0,#1                 ;99
000162  d131              BNE      |L3.456|
000164  48af              LDR      r0,|L3.1060|
000166  302a              ADDS     r0,r0,#0x2a           ;101
000168  6801              LDR      r1,[r0,#0]            ;101  ; strengthFuelFlash
00016a  6029              STR      r1,[r5,#0]            ;101
00016c  6840              LDR      r0,[r0,#4]            ;101  ; strengthFuelFlash
00016e  6068              STR      r0,[r5,#4]            ;101
000170  48ad              LDR      r0,|L3.1064|
000172  6085              STR      r5,[r0,#8]            ;102  ; dataToSend
000174  4603              MOV      r3,r0                 ;103
000176  689a              LDR      r2,[r3,#8]            ;103  ; dataToSend
000178  6859              LDR      r1,[r3,#4]            ;103  ; dataToSend
00017a  6818              LDR      r0,[r3,#0]            ;103  ; dataToSend
00017c  f7fffffe          BL       OBD_CAN_SendData
000180  aa01              ADD      r2,sp,#4              ;104
000182  f44f71fa          MOV      r1,#0x1f4             ;104
000186  48a9              LDR      r0,|L3.1068|
000188  6800              LDR      r0,[r0,#0]            ;104  ; canRecieveQ
00018a  f7fffffe          BL       OSQPend
00018e  4682              MOV      r10,r0                ;104
000190  4650              MOV      r0,r10                ;105
000192  f7fffffe          BL       Mem_free
000196  48a3              LDR      r0,|L3.1060|
000198  3032              ADDS     r0,r0,#0x32           ;107
00019a  6801              LDR      r1,[r0,#0]            ;107  ; strengthFuelFlash
00019c  6029              STR      r1,[r5,#0]            ;107
00019e  6840              LDR      r0,[r0,#4]            ;107  ; strengthFuelFlash
0001a0  6068              STR      r0,[r5,#4]            ;107
0001a2  48a1              LDR      r0,|L3.1064|
0001a4  6085              STR      r5,[r0,#8]            ;108  ; dataToSend
0001a6  4603              MOV      r3,r0                 ;109
0001a8  689a              LDR      r2,[r3,#8]            ;109  ; dataToSend
0001aa  6859              LDR      r1,[r3,#4]            ;109  ; dataToSend
0001ac  6818              LDR      r0,[r3,#0]            ;109  ; dataToSend
0001ae  f7fffffe          BL       OBD_CAN_SendData
0001b2  aa01              ADD      r2,sp,#4              ;110
0001b4  f44f71fa          MOV      r1,#0x1f4             ;110
0001b8  489c              LDR      r0,|L3.1068|
0001ba  6800              LDR      r0,[r0,#0]            ;110  ; canRecieveQ
0001bc  f7fffffe          BL       OSQPend
0001c0  4682              MOV      r10,r0                ;110
0001c2  4650              MOV      r0,r10                ;111
0001c4  f7fffffe          BL       Mem_free
                  |L3.456|
0001c8  4628              MOV      r0,r5                 ;113
0001ca  f7fffffe          BL       Mem_free
0001ce  2064              MOVS     r0,#0x64              ;114
0001d0  f7fffffe          BL       Mem_malloc
0001d4  4605              MOV      r5,r0                 ;114
0001d6  f04f0821          MOV      r8,#0x21              ;115
0001da  2400              MOVS     r4,#0                 ;116
0001dc  2210              MOVS     r2,#0x10              ;117
0001de  4621              MOV      r1,r4                 ;117
0001e0  1c64              ADDS     r4,r4,#1              ;117
0001e2  546a              STRB     r2,[r5,r1]            ;117
0001e4  488f              LDR      r0,|L3.1060|
0001e6  f890003a          LDRB     r0,[r0,#0x3a]         ;118  ; strengthFuelFlash
0001ea  2801              CMP      r0,#1                 ;118
0001ec  d17e              BNE      |L3.748|
0001ee  489f              LDR      r0,|L3.1132|
0001f0  7840              LDRB     r0,[r0,#1]            ;120  ; strengPower
0001f2  2105              MOVS     r1,#5                 ;120
0001f4  eb010040          ADD      r0,r1,r0,LSL #1       ;120
0001f8  b2c2              UXTB     r2,r0                 ;120
0001fa  4620              MOV      r0,r4                 ;120
0001fc  1c61              ADDS     r1,r4,#1              ;120
0001fe  b2cc              UXTB     r4,r1                 ;120
000200  542a              STRB     r2,[r5,r0]            ;120
000202  223d              MOVS     r2,#0x3d              ;121
000204  4620              MOV      r0,r4                 ;121
000206  1c61              ADDS     r1,r4,#1              ;121
000208  b2cc              UXTB     r4,r1                 ;121
00020a  542a              STRB     r2,[r5,r0]            ;121
00020c  4885              LDR      r0,|L3.1060|
00020e  7c86              LDRB     r6,[r0,#0x12]         ;122
000210  7cc0              LDRB     r0,[r0,#0x13]         ;123
000212  eb002006          ADD      r0,r0,r6,LSL #8       ;123
000216  b286              UXTH     r6,r0                 ;123
000218  4894              LDR      r0,|L3.1132|
00021a  7840              LDRB     r0,[r0,#1]            ;124  ; strengPower
00021c  2102              MOVS     r1,#2                 ;124
00021e  eb010040          ADD      r0,r1,r0,LSL #1       ;124
000222  4430              ADD      r0,r0,r6              ;124
000224  b286              UXTH     r6,r0                 ;124
000226  487f              LDR      r0,|L3.1060|
000228  7c42              LDRB     r2,[r0,#0x11]         ;126
00022a  4621              MOV      r1,r4                 ;126
00022c  1c60              ADDS     r0,r4,#1              ;126
00022e  b2c4              UXTB     r4,r0                 ;126
000230  546a              STRB     r2,[r5,r1]            ;126
000232  0a32              LSRS     r2,r6,#8              ;127
000234  4620              MOV      r0,r4                 ;127
000236  1c61              ADDS     r1,r4,#1              ;127
000238  b2cc              UXTB     r4,r1                 ;127
00023a  542a              STRB     r2,[r5,r0]            ;127
00023c  4620              MOV      r0,r4                 ;128
00023e  1c61              ADDS     r1,r4,#1              ;128
000240  b2cc              UXTB     r4,r1                 ;128
000242  542e              STRB     r6,[r5,r0]            ;128
000244  4889              LDR      r0,|L3.1132|
000246  7840              LDRB     r0,[r0,#1]            ;129  ; strengPower
000248  0640              LSLS     r0,r0,#25             ;129
00024a  0e02              LSRS     r2,r0,#24             ;129
00024c  4620              MOV      r0,r4                 ;129
00024e  1c61              ADDS     r1,r4,#1              ;129
000250  b2cc              UXTB     r4,r1                 ;129
000252  542a              STRB     r2,[r5,r0]            ;129
000254  4886              LDR      r0,|L3.1136|
000256  f9900019          LDRSB    r0,[r0,#0x19]         ;130  ; strengthFuel
00025a  9000              STR      r0,[sp,#0]            ;130
00025c  2700              MOVS     r7,#0                 ;131
00025e  e051              B        |L3.772|
                  |L3.608|
000260  2003              MOVS     r0,#3                 ;133
000262  eb000047          ADD      r0,r0,r7,LSL #1       ;133
000266  4981              LDR      r1,|L3.1132|
000268  5c0e              LDRB     r6,[r1,r0]            ;133
00026a  2002              MOVS     r0,#2                 ;134
00026c  eb000047          ADD      r0,r0,r7,LSL #1       ;134
000270  5c08              LDRB     r0,[r1,r0]            ;134
000272  eb002006          ADD      r0,r0,r6,LSL #8       ;134
000276  b286              UXTH     r6,r0                 ;134
000278  487d              LDR      r0,|L3.1136|
00027a  f9900019          LDRSB    r0,[r0,#0x19]         ;135  ; strengthFuel
00027e  2800              CMP      r0,#0                 ;135
000280  db07              BLT      |L3.658|
000282  9800              LDR      r0,[sp,#0]            ;136
000284  4370              MULS     r0,r6,r0              ;136
000286  2164              MOVS     r1,#0x64              ;136
000288  fb90f0f1          SDIV     r0,r0,r1              ;136
00028c  4430              ADD      r0,r0,r6              ;136
00028e  b286              UXTH     r6,r0                 ;136
000290  e00b              B        |L3.682|
                  |L3.658|
000292  4877              LDR      r0,|L3.1136|
000294  7e40              LDRB     r0,[r0,#0x19]         ;139  ; strengthFuel
000296  4240              RSBS     r0,r0,#0              ;139
000298  b240              SXTB     r0,r0                 ;139
00029a  9000              STR      r0,[sp,#0]            ;139
00029c  9800              LDR      r0,[sp,#0]            ;140
00029e  4370              MULS     r0,r6,r0              ;140
0002a0  2164              MOVS     r1,#0x64              ;140
0002a2  fb90f0f1          SDIV     r0,r0,r1              ;140
0002a6  1a30              SUBS     r0,r6,r0              ;140
0002a8  b286              UXTH     r6,r0                 ;140
                  |L3.682|
0002aa  17e1              ASRS     r1,r4,#31             ;142
0002ac  eb047151          ADD      r1,r4,r1,LSR #29      ;142
0002b0  10c9              ASRS     r1,r1,#3              ;142
0002b2  eba401c1          SUB      r1,r4,r1,LSL #3       ;142
0002b6  b941              CBNZ     r1,|L3.714|
0002b8  4620              MOV      r0,r4                 ;143
0002ba  1c61              ADDS     r1,r4,#1              ;143
0002bc  b2cc              UXTB     r4,r1                 ;143
0002be  f8058000          STRB     r8,[r5,r0]            ;143
0002c2  f1080001          ADD      r0,r8,#1              ;143
0002c6  f00008ff          AND      r8,r0,#0xff           ;143
                  |L3.714|
0002ca  4620              MOV      r0,r4                 ;144
0002cc  1c61              ADDS     r1,r4,#1              ;144
0002ce  b2cc              UXTB     r4,r1                 ;144
0002d0  542e              STRB     r6,[r5,r0]            ;144
0002d2  17e1              ASRS     r1,r4,#31             ;145
0002d4  eb047151          ADD      r1,r4,r1,LSR #29      ;145
0002d8  10c9              ASRS     r1,r1,#3              ;145
0002da  eba401c1          SUB      r1,r4,r1,LSL #3       ;145
0002de  b951              CBNZ     r1,|L3.758|
0002e0  4620              MOV      r0,r4                 ;146
0002e2  1c61              ADDS     r1,r4,#1              ;146
0002e4  b2cc              UXTB     r4,r1                 ;146
0002e6  f8058000          STRB     r8,[r5,r0]            ;146
0002ea  e000              B        |L3.750|
                  |L3.748|
0002ec  e00f              B        |L3.782|
                  |L3.750|
0002ee  f1080001          ADD      r0,r8,#1              ;146
0002f2  f00008ff          AND      r8,r0,#0xff           ;146
                  |L3.758|
0002f6  0a32              LSRS     r2,r6,#8              ;147
0002f8  4620              MOV      r0,r4                 ;147
0002fa  1c61              ADDS     r1,r4,#1              ;147
0002fc  b2cc              UXTB     r4,r1                 ;147
0002fe  542a              STRB     r2,[r5,r0]            ;147
000300  1c78              ADDS     r0,r7,#1              ;131
000302  b2c7              UXTB     r7,r0                 ;131
                  |L3.772|
000304  4859              LDR      r0,|L3.1132|
000306  7840              LDRB     r0,[r0,#1]            ;131  ; strengPower
000308  42b8              CMP      r0,r7                 ;131
00030a  dca9              BGT      |L3.608|
                  |L3.780|
00030c  e0cf              B        |L3.1198|
                  |L3.782|
00030e  4845              LDR      r0,|L3.1060|
000310  f890003a          LDRB     r0,[r0,#0x3a]         ;149  ; strengthFuelFlash
000314  2802              CMP      r0,#2                 ;149
000316  d1f9              BNE      |L3.780|
000318  4854              LDR      r0,|L3.1132|
00031a  7840              LDRB     r0,[r0,#1]            ;151  ; strengPower
00031c  2107              MOVS     r1,#7                 ;151
00031e  eb010040          ADD      r0,r1,r0,LSL #1       ;151
000322  b2c2              UXTB     r2,r0                 ;151
000324  4620              MOV      r0,r4                 ;151
000326  1c61              ADDS     r1,r4,#1              ;151
000328  b2cc              UXTB     r4,r1                 ;151
00032a  542a              STRB     r2,[r5,r0]            ;151
00032c  223d              MOVS     r2,#0x3d              ;152
00032e  4620              MOV      r0,r4                 ;152
000330  1c61              ADDS     r1,r4,#1              ;152
000332  b2cc              UXTB     r4,r1                 ;152
000334  542a              STRB     r2,[r5,r0]            ;152
000336  483b              LDR      r0,|L3.1060|
000338  7cc6              LDRB     r6,[r0,#0x13]         ;153
00033a  7d00              LDRB     r0,[r0,#0x14]         ;154
00033c  eb002006          ADD      r0,r0,r6,LSL #8       ;154
000340  b286              UXTH     r6,r0                 ;154
000342  484a              LDR      r0,|L3.1132|
000344  7840              LDRB     r0,[r0,#1]            ;155  ; strengPower
000346  2102              MOVS     r1,#2                 ;155
000348  eb010040          ADD      r0,r1,r0,LSL #1       ;155
00034c  4430              ADD      r0,r0,r6              ;155
00034e  b286              UXTH     r6,r0                 ;155
000350  4834              LDR      r0,|L3.1060|
000352  7c42              LDRB     r2,[r0,#0x11]         ;157
000354  4620              MOV      r0,r4                 ;157
000356  1c61              ADDS     r1,r4,#1              ;157
000358  b2cc              UXTB     r4,r1                 ;157
00035a  542a              STRB     r2,[r5,r0]            ;157
00035c  4831              LDR      r0,|L3.1060|
00035e  7c82              LDRB     r2,[r0,#0x12]         ;158
000360  4620              MOV      r0,r4                 ;158
000362  1c61              ADDS     r1,r4,#1              ;158
000364  b2cc              UXTB     r4,r1                 ;158
000366  542a              STRB     r2,[r5,r0]            ;158
000368  0a32              LSRS     r2,r6,#8              ;159
00036a  4620              MOV      r0,r4                 ;159
00036c  1c61              ADDS     r1,r4,#1              ;159
00036e  b2cc              UXTB     r4,r1                 ;159
000370  542a              STRB     r2,[r5,r0]            ;159
000372  4620              MOV      r0,r4                 ;160
000374  1c61              ADDS     r1,r4,#1              ;160
000376  b2cc              UXTB     r4,r1                 ;160
000378  542e              STRB     r6,[r5,r0]            ;160
00037a  2200              MOVS     r2,#0                 ;161
00037c  4620              MOV      r0,r4                 ;161
00037e  1c61              ADDS     r1,r4,#1              ;161
000380  b2cc              UXTB     r4,r1                 ;161
000382  542a              STRB     r2,[r5,r0]            ;161
000384  4620              MOV      r0,r4                 ;162
000386  1c61              ADDS     r1,r4,#1              ;162
000388  b2cc              UXTB     r4,r1                 ;162
00038a  f8058000          STRB     r8,[r5,r0]            ;162
00038e  f1080001          ADD      r0,r8,#1              ;162
000392  f00008ff          AND      r8,r0,#0xff           ;162
000396  4835              LDR      r0,|L3.1132|
000398  7840              LDRB     r0,[r0,#1]            ;163  ; strengPower
00039a  0640              LSLS     r0,r0,#25             ;163
00039c  0e02              LSRS     r2,r0,#24             ;163
00039e  4620              MOV      r0,r4                 ;163
0003a0  1c61              ADDS     r1,r4,#1              ;163
0003a2  b2cc              UXTB     r4,r1                 ;163
0003a4  542a              STRB     r2,[r5,r0]            ;163
0003a6  4832              LDR      r0,|L3.1136|
0003a8  f9900019          LDRSB    r0,[r0,#0x19]         ;164  ; strengthFuel
0003ac  9000              STR      r0,[sp,#0]            ;164
0003ae  2700              MOVS     r7,#0                 ;165
0003b0  e079              B        |L3.1190|
                  |L3.946|
0003b2  2003              MOVS     r0,#3                 ;167
0003b4  eb000047          ADD      r0,r0,r7,LSL #1       ;167
0003b8  492c              LDR      r1,|L3.1132|
0003ba  5c0e              LDRB     r6,[r1,r0]            ;167
0003bc  2002              MOVS     r0,#2                 ;168
0003be  eb000047          ADD      r0,r0,r7,LSL #1       ;168
0003c2  5c08              LDRB     r0,[r1,r0]            ;168
0003c4  eb002006          ADD      r0,r0,r6,LSL #8       ;168
0003c8  b286              UXTH     r6,r0                 ;168
0003ca  4829              LDR      r0,|L3.1136|
0003cc  f9900019          LDRSB    r0,[r0,#0x19]         ;169  ; strengthFuel
0003d0  2800              CMP      r0,#0                 ;169
0003d2  db07              BLT      |L3.996|
0003d4  9800              LDR      r0,[sp,#0]            ;170
0003d6  4370              MULS     r0,r6,r0              ;170
0003d8  2164              MOVS     r1,#0x64              ;170
0003da  fb90f0f1          SDIV     r0,r0,r1              ;170
0003de  4430              ADD      r0,r0,r6              ;170
0003e0  b286              UXTH     r6,r0                 ;170
0003e2  e00b              B        |L3.1020|
                  |L3.996|
0003e4  4822              LDR      r0,|L3.1136|
0003e6  7e40              LDRB     r0,[r0,#0x19]         ;173  ; strengthFuel
0003e8  4240              RSBS     r0,r0,#0              ;173
0003ea  b240              SXTB     r0,r0                 ;173
0003ec  9000              STR      r0,[sp,#0]            ;173
0003ee  9800              LDR      r0,[sp,#0]            ;174
0003f0  4370              MULS     r0,r6,r0              ;174
0003f2  2164              MOVS     r1,#0x64              ;174
0003f4  fb90f0f1          SDIV     r0,r0,r1              ;174
0003f8  1a30              SUBS     r0,r6,r0              ;174
0003fa  b286              UXTH     r6,r0                 ;174
                  |L3.1020|
0003fc  4620              MOV      r0,r4                 ;176
0003fe  1c61              ADDS     r1,r4,#1              ;176
000400  b2cc              UXTB     r4,r1                 ;176
000402  542e              STRB     r6,[r5,r0]            ;176
000404  17e1              ASRS     r1,r4,#31             ;177
000406  eb047151          ADD      r1,r4,r1,LSR #29      ;177
00040a  10c9              ASRS     r1,r1,#3              ;177
00040c  eba401c1          SUB      r1,r4,r1,LSL #3       ;177
000410  b939              CBNZ     r1,|L3.1058|
000412  4620              MOV      r0,r4                 ;178
000414  1c61              ADDS     r1,r4,#1              ;178
000416  b2cc              UXTB     r4,r1                 ;178
000418  f8058000          STRB     r8,[r5,r0]            ;178
00041c  f1080001          ADD      r0,r8,#1              ;178
000420  e028              B        |L3.1140|
                  |L3.1058|
000422  e029              B        |L3.1144|
                  |L3.1060|
                          DCD      strengthFuelFlash
                  |L3.1064|
                          DCD      dataToSend
                  |L3.1068|
                          DCD      canRecieveQ
                  |L3.1072|
000430  0d0a4d6f          DCB      "\r\nMode cmd Error.",0
000434  64652063
000438  6d642045
00043c  72726f72
000440  2e00    
000442  00                DCB      0
000443  00                DCB      0
                  |L3.1092|
000444  0d0a3133          DCB      "\r\n13-NTRU Success.",0
000448  2d4e5452
00044c  55205375
000450  63636573
000454  732e00  
000457  00                DCB      0
                  |L3.1112|
000458  0d0a3134          DCB      "\r\n14-NTRU Fail.",0
00045c  2d4e5452
000460  55204661
000464  696c2e00
                  |L3.1128|
                          DCD      varOperation
                  |L3.1132|
                          DCD      strengPower
                  |L3.1136|
                          DCD      strengthFuel
                  |L3.1140|
000474  f00008ff          AND      r8,r0,#0xff           ;178
                  |L3.1144|
000478  0a32              LSRS     r2,r6,#8              ;179
00047a  4620              MOV      r0,r4                 ;179
00047c  1c61              ADDS     r1,r4,#1              ;179
00047e  b2cc              UXTB     r4,r1                 ;179
000480  542a              STRB     r2,[r5,r0]            ;179
000482  17e1              ASRS     r1,r4,#31             ;180
000484  eb047151          ADD      r1,r4,r1,LSR #29      ;180
000488  10c9              ASRS     r1,r1,#3              ;180
00048a  eba401c1          SUB      r1,r4,r1,LSL #3       ;180
00048e  b941              CBNZ     r1,|L3.1186|
000490  4620              MOV      r0,r4                 ;181
000492  1c61              ADDS     r1,r4,#1              ;181
000494  b2cc              UXTB     r4,r1                 ;181
000496  f8058000          STRB     r8,[r5,r0]            ;181
00049a  f1080001          ADD      r0,r8,#1              ;181
00049e  f00008ff          AND      r8,r0,#0xff           ;181
                  |L3.1186|
0004a2  1c78              ADDS     r0,r7,#1              ;165
0004a4  b2c7              UXTB     r7,r0                 ;165
                  |L3.1190|
0004a6  4845              LDR      r0,|L3.1468|
0004a8  7840              LDRB     r0,[r0,#1]            ;165  ; strengPower
0004aa  42b8              CMP      r0,r7                 ;165
0004ac  dc81              BGT      |L3.946|
                  |L3.1198|
0004ae  aa01              ADD      r2,sp,#4              ;184
0004b0  2102              MOVS     r1,#2                 ;184
0004b2  4843              LDR      r0,|L3.1472|
0004b4  6800              LDR      r0,[r0,#0]            ;184  ; canRecieveQ
0004b6  f7fffffe          BL       OSQPend
0004ba  4682              MOV      r10,r0                ;184
0004bc  4650              MOV      r0,r10                ;185
0004be  f7fffffe          BL       Mem_free
0004c2  4840              LDR      r0,|L3.1476|
0004c4  6085              STR      r5,[r0,#8]            ;187  ; dataToSend
0004c6  4603              MOV      r3,r0                 ;188
0004c8  689a              LDR      r2,[r3,#8]            ;188  ; dataToSend
0004ca  6859              LDR      r1,[r3,#4]            ;188  ; dataToSend
0004cc  6818              LDR      r0,[r3,#0]            ;188  ; dataToSend
0004ce  f7fffffe          BL       OBD_CAN_SendData
0004d2  aa01              ADD      r2,sp,#4              ;189
0004d4  f44f717a          MOV      r1,#0x3e8             ;189
0004d8  4839              LDR      r0,|L3.1472|
0004da  6800              LDR      r0,[r0,#0]            ;189  ; canRecieveQ
0004dc  f7fffffe          BL       OSQPend
0004e0  4682              MOV      r10,r0                ;189
0004e2  4650              MOV      r0,r10                ;190
0004e4  f7fffffe          BL       Mem_free
0004e8  4622              MOV      r2,r4                 ;191
0004ea  17e3              ASRS     r3,r4,#31             ;191
0004ec  eb047353          ADD      r3,r4,r3,LSR #29      ;191
0004f0  10db              ASRS     r3,r3,#3              ;191
0004f2  eba403c3          SUB      r3,r4,r3,LSL #3       ;191
0004f6  b92b              CBNZ     r3,|L3.1284|
0004f8  4621              MOV      r1,r4                 ;191
0004fa  17cb              ASRS     r3,r1,#31             ;191
0004fc  eb017353          ADD      r3,r1,r3,LSR #29      ;191
000500  10db              ASRS     r3,r3,#3              ;191
000502  e005              B        |L3.1296|
                  |L3.1284|
000504  4620              MOV      r0,r4                 ;191
000506  17e3              ASRS     r3,r4,#31             ;191
000508  eb047353          ADD      r3,r4,r3,LSR #29      ;191
00050c  10db              ASRS     r3,r3,#3              ;191
00050e  1c5b              ADDS     r3,r3,#1              ;191
                  |L3.1296|
000510  f00308ff          AND      r8,r3,#0xff           ;191
000514  2701              MOVS     r7,#1                 ;192
000516  e011              B        |L3.1340|
                  |L3.1304|
000518  2302              MOVS     r3,#2                 ;194
00051a  2200              MOVS     r2,#0                 ;194
00051c  4611              MOV      r1,r2                 ;194
00051e  4610              MOV      r0,r2                 ;194
000520  f7fffffe          BL       OSTimeDlyHMSM
000524  eb0500c7          ADD      r0,r5,r7,LSL #3       ;195
000528  4926              LDR      r1,|L3.1476|
00052a  6088              STR      r0,[r1,#8]            ;195  ; dataToSend
00052c  460b              MOV      r3,r1                 ;196
00052e  689a              LDR      r2,[r3,#8]            ;196  ; dataToSend
000530  6859              LDR      r1,[r3,#4]            ;196  ; dataToSend
000532  6818              LDR      r0,[r3,#0]            ;196  ; dataToSend
000534  f7fffffe          BL       OBD_CAN_SendData
000538  1c78              ADDS     r0,r7,#1              ;192
00053a  b2c7              UXTB     r7,r0                 ;192
                  |L3.1340|
00053c  4547              CMP      r7,r8                 ;192
00053e  dbeb              BLT      |L3.1304|
000540  aa01              ADD      r2,sp,#4              ;198
000542  2100              MOVS     r1,#0                 ;198
000544  481e              LDR      r0,|L3.1472|
000546  6800              LDR      r0,[r0,#0]            ;198  ; canRecieveQ
000548  f7fffffe          BL       OSQPend
00054c  4682              MOV      r10,r0                ;198
00054e  f89a000c          LDRB     r0,[r10,#0xc]         ;199
000552  287f              CMP      r0,#0x7f              ;199
000554  d107              BNE      |L3.1382|
000556  a01c              ADR      r0,|L3.1480|
000558  f7fffffe          BL       LogReport
00055c  2000              MOVS     r0,#0                 ;202
00055e  491f              LDR      r1,|L3.1500|
000560  f8810098          STRB     r0,[r1,#0x98]         ;202
000564  e021              B        |L3.1450|
                  |L3.1382|
000566  a01e              ADR      r0,|L3.1504|
000568  f7fffffe          BL       LogReport
00056c  4822              LDR      r0,|L3.1528|
00056e  7e40              LDRB     r0,[r0,#0x19]         ;207  ; strengthFuel
000570  4922              LDR      r1,|L3.1532|
000572  7648              STRB     r0,[r1,#0x19]         ;207
000574  2005              MOVS     r0,#5                 ;208
000576  f7fffffe          BL       Mem_malloc
00057a  4681              MOV      r9,r0                 ;208
00057c  2004              MOVS     r0,#4                 ;209
00057e  f8890000          STRB     r0,[r9,#0]            ;209
000582  2050              MOVS     r0,#0x50              ;210
000584  f8890001          STRB     r0,[r9,#1]            ;210
000588  2015              MOVS     r0,#0x15              ;211
00058a  f8890002          STRB     r0,[r9,#2]            ;211
00058e  481a              LDR      r0,|L3.1528|
000590  7e40              LDRB     r0,[r0,#0x19]         ;212  ; strengthFuel
000592  f8890003          STRB     r0,[r9,#3]            ;212
000596  4648              MOV      r0,r9                 ;213
000598  f7fffffe          BL       SendPidCmdData
00059c  2001              MOVS     r0,#1                 ;214
00059e  490f              LDR      r1,|L3.1500|
0005a0  f8810098          STRB     r0,[r1,#0x98]         ;214
0005a4  4648              MOV      r0,r9                 ;215
0005a6  f7fffffe          BL       Mem_free
                  |L3.1450|
0005aa  4650              MOV      r0,r10                ;217
0005ac  f7fffffe          BL       Mem_free
0005b0  4628              MOV      r0,r5                 ;218
0005b2  f7fffffe          BL       Mem_free
0005b6  bf00              NOP      
0005b8  e557              B        |L3.106|
;;;220    
                          ENDP

0005ba  0000              DCW      0x0000
                  |L3.1468|
                          DCD      strengPower
                  |L3.1472|
                          DCD      canRecieveQ
                  |L3.1476|
                          DCD      dataToSend
                  |L3.1480|
0005c8  0d0a3135          DCB      "\r\n15-Strength Fail!",0
0005cc  2d537472
0005d0  656e6774
0005d4  68204661
0005d8  696c2100
                  |L3.1500|
                          DCD      varOperation
                  |L3.1504|
0005e0  0d0a3136          DCB      "\r\n16-Strength Success.",0
0005e4  2d537472
0005e8  656e6774
0005ec  68205375
0005f0  63636573
0005f4  732e00  
0005f7  00                DCB      0
                  |L3.1528|
                          DCD      strengthFuel
                  |L3.1532|
                          DCD      strengthFuelFlash

                          AREA ||i.SeedToKey||, CODE, READONLY, ALIGN=2

                  SeedToKey PROC
;;;13     long   ecuMask = 0;//需要知道 ECU 掩码
;;;14     void   SeedToKey(uint8_t* seed, uint8_t* key)
000000  b538              PUSH     {r3-r5,lr}
;;;15     {
000002  460a              MOV      r2,r1
;;;16     	uint8_t i;
;;;17     	longToUchar seedlokal;
;;;18     	const long mask = ecuMask;
000004  4c19              LDR      r4,|L4.108|
000006  6823              LDR      r3,[r4,#0]  ; ecuMask
;;;19     	
;;;20     	if(seed[0] == 0 && seed[1] == 0)
000008  7804              LDRB     r4,[r0,#0]
00000a  b914              CBNZ     r4,|L4.18|
00000c  7844              LDRB     r4,[r0,#1]
00000e  b904              CBNZ     r4,|L4.18|
                  |L4.16|
;;;21     		return;
;;;22     	seedlokal.dword = ((long)seed[0]<<24)+((long)seed[1]<<16)+((long)seed[2]<<8)+(long)seed[3];
;;;23     	for(i=0; i<35; i++)
;;;24     	{
;;;25     		if(seedlokal.dword & 0x80000000)
;;;26     		{
;;;27     			seedlokal.dword = seedlokal.dword << 1;
;;;28     			seedlokal.dword = seedlokal.dword ^ mask;
;;;29     		}else
;;;30     			seedlokal.dword=seedlokal.dword<<1;
;;;31     	}
;;;32     	for(i=0; i<4; i++)
;;;33     		key[3 - i] = seedlokal.byte[i];
;;;34     	return;   
;;;35     }
000010  bd38              POP      {r3-r5,pc}
                  |L4.18|
000012  7804              LDRB     r4,[r0,#0]            ;22
000014  0624              LSLS     r4,r4,#24             ;22
000016  7845              LDRB     r5,[r0,#1]            ;22
000018  eb044405          ADD      r4,r4,r5,LSL #16      ;22
00001c  7885              LDRB     r5,[r0,#2]            ;22
00001e  eb042405          ADD      r4,r4,r5,LSL #8       ;22
000022  78c5              LDRB     r5,[r0,#3]            ;22
000024  442c              ADD      r4,r4,r5              ;22
000026  9400              STR      r4,[sp,#0]            ;22
000028  2100              MOVS     r1,#0                 ;23
00002a  e00f              B        |L4.76|
                  |L4.44|
00002c  9c00              LDR      r4,[sp,#0]            ;25
00002e  f0044400          AND      r4,r4,#0x80000000     ;25
000032  b134              CBZ      r4,|L4.66|
000034  9c00              LDR      r4,[sp,#0]            ;27
000036  0064              LSLS     r4,r4,#1              ;27
000038  9400              STR      r4,[sp,#0]            ;27
00003a  9c00              LDR      r4,[sp,#0]            ;28
00003c  405c              EORS     r4,r4,r3              ;28
00003e  9400              STR      r4,[sp,#0]            ;28
000040  e002              B        |L4.72|
                  |L4.66|
000042  9c00              LDR      r4,[sp,#0]            ;30
000044  0064              LSLS     r4,r4,#1              ;30
000046  9400              STR      r4,[sp,#0]            ;30
                  |L4.72|
000048  1c4c              ADDS     r4,r1,#1              ;23
00004a  b2e1              UXTB     r1,r4                 ;23
                  |L4.76|
00004c  2923              CMP      r1,#0x23              ;23
00004e  dbed              BLT      |L4.44|
000050  2100              MOVS     r1,#0                 ;32
000052  e006              B        |L4.98|
                  |L4.84|
000054  f81d4001          LDRB     r4,[sp,r1]            ;33
000058  f1c10503          RSB      r5,r1,#3              ;33
00005c  5554              STRB     r4,[r2,r5]            ;33
00005e  1c4c              ADDS     r4,r1,#1              ;32
000060  b2e1              UXTB     r1,r4                 ;32
                  |L4.98|
000062  2904              CMP      r1,#4                 ;32
000064  dbf6              BLT      |L4.84|
000066  bf00              NOP                            ;34
000068  e7d2              B        |L4.16|
;;;36     
                          ENDP

00006a  0000              DCW      0x0000
                  |L4.108|
                          DCD      ecuMask

                          AREA ||i.StrengthFuel||, CODE, READONLY, ALIGN=2

                  StrengthFuel PROC
;;;486    
;;;487    void StrengthFuel(void)
000000  b510              PUSH     {r4,lr}
;;;488    {
;;;489    	static uint16_t time = 0;
;;;490    	if(strengthFuelFlash.coe == strengthFuel.coe)//系数相等，不进行提升动力
000002  481e              LDR      r0,|L5.124|
000004  f9900019          LDRSB    r0,[r0,#0x19]  ; strengthFuelFlash
000008  491d              LDR      r1,|L5.128|
00000a  f9911019          LDRSB    r1,[r1,#0x19]  ; strengthFuel
00000e  4288              CMP      r0,r1
000010  d100              BNE      |L5.20|
                  |L5.18|
;;;491    		return;
;;;492    	if(varOperation.isStrenOilOK == 0)           //
;;;493    	{
;;;494    		if(time % 10000 == 0)                    //防止不停地打印信息
;;;495    			LogReport("ECU can't be discerned!");
;;;496    		time++;
;;;497    		return;
;;;498    	}
;;;499    	if(varOperation.pidTset == 1)//如果正在测试，也不可以进行增强动力
;;;500    		return;
;;;501    	varOperation.strengthRun = 1;//进入提升动力状态
;;;502    	varOperation.pidRun = 0;
;;;503    	//停止 CAN 报文的发送
;;;504    	//过安全算法、过模式、将新的标定值写入 ECU
;;;505    	//延时 20 秒，进入正常的 CAN 报文收发
;;;506    	SafeALG();
;;;507    	OSTimeDlyHMSM(0,0,20,0);
;;;508    	varOperation.strengthRun = 0;
;;;509    	varOperation.pidRun = 1;
;;;510    }
000012  bd10              POP      {r4,pc}
                  |L5.20|
000014  481b              LDR      r0,|L5.132|
000016  f8900099          LDRB     r0,[r0,#0x99]         ;492  ; varOperation
00001a  b988              CBNZ     r0,|L5.64|
00001c  481a              LDR      r0,|L5.136|
00001e  8800              LDRH     r0,[r0,#0]            ;494  ; time
000020  f2427110          MOV      r1,#0x2710            ;494
000024  fb90f2f1          SDIV     r2,r0,r1              ;494
000028  fb010012          MLS      r0,r1,r2,r0           ;494
00002c  b910              CBNZ     r0,|L5.52|
00002e  a017              ADR      r0,|L5.140|
000030  f7fffffe          BL       LogReport
                  |L5.52|
000034  4814              LDR      r0,|L5.136|
000036  8800              LDRH     r0,[r0,#0]            ;496  ; time
000038  1c40              ADDS     r0,r0,#1              ;496
00003a  4913              LDR      r1,|L5.136|
00003c  8008              STRH     r0,[r1,#0]            ;496
00003e  e7e8              B        |L5.18|
                  |L5.64|
000040  4810              LDR      r0,|L5.132|
000042  f8900093          LDRB     r0,[r0,#0x93]         ;499  ; varOperation
000046  2801              CMP      r0,#1                 ;499
000048  d100              BNE      |L5.76|
00004a  e7e2              B        |L5.18|
                  |L5.76|
00004c  2001              MOVS     r0,#1                 ;501
00004e  490d              LDR      r1,|L5.132|
000050  f8810094          STRB     r0,[r1,#0x94]         ;501
000054  2000              MOVS     r0,#0                 ;502
000056  f8810095          STRB     r0,[r1,#0x95]         ;502
00005a  f7fffffe          BL       SafeALG
00005e  2300              MOVS     r3,#0                 ;507
000060  2214              MOVS     r2,#0x14              ;507
000062  4619              MOV      r1,r3                 ;507
000064  4618              MOV      r0,r3                 ;507
000066  f7fffffe          BL       OSTimeDlyHMSM
00006a  2000              MOVS     r0,#0                 ;508
00006c  4905              LDR      r1,|L5.132|
00006e  f8810094          STRB     r0,[r1,#0x94]         ;508
000072  2001              MOVS     r0,#1                 ;509
000074  f8810095          STRB     r0,[r1,#0x95]         ;509
000078  bf00              NOP      
00007a  e7ca              B        |L5.18|
;;;511    
                          ENDP

                  |L5.124|
                          DCD      strengthFuelFlash
                  |L5.128|
                          DCD      strengthFuel
                  |L5.132|
                          DCD      varOperation
                  |L5.136|
                          DCD      time
                  |L5.140|
00008c  45435520          DCB      "ECU can't be discerned!",0
000090  63616e27
000094  74206265
000098  20646973
00009c  6365726e
0000a0  65642100

                          AREA ||.data||, DATA, ALIGN=2

                  ecuMask
                          DCD      0x00000000
                  verMany
000004  30000000          DCB      0x30,0x00,0x00,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  time
00000c  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\OBD\\strengthenPower.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_strengthenPower_c_ecuMask____REV16|
#line 465 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.2.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___17_strengthenPower_c_ecuMask____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_strengthenPower_c_ecuMask____REVSH|
#line 480
|__asm___17_strengthenPower_c_ecuMask____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___17_strengthenPower_c_ecuMask____RRX|
#line 667
|__asm___17_strengthenPower_c_ecuMask____RRX| PROC
#line 668

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
