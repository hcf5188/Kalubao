; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\obdcan_tx_rx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\obdcan_tx_rx.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\obdcan_tx_rx.crf ..\OBD\OBDCAN_Tx_Rx.c]
                          THUMB

                          AREA ||i.CAN1_RX1_IRQHandler||, CODE, READONLY, ALIGN=2

                  CAN1_RX1_IRQHandler PROC
;;;38     
;;;39     void CAN1_RX1_IRQHandler(void )
000000  b570              PUSH     {r4-r6,lr}
;;;40     {
;;;41     	uint8_t err;
;;;42     	CanRxMsg* CAN1_RxMsg = Mem_malloc(sizeof(CanRxMsg));
000002  2014              MOVS     r0,#0x14
000004  f7fffffe          BL       Mem_malloc
000008  4605              MOV      r5,r0
;;;43     	
;;;44     	OSIntEnter();				//系统进入中断服务程序
00000a  f7fffffe          BL       OSIntEnter
;;;45     	
;;;46     	CAN_Receive(CAN1, CAN_FIFO1, CAN1_RxMsg);
00000e  462a              MOV      r2,r5
000010  2101              MOVS     r1,#1
000012  482f              LDR      r0,|L1.208|
000014  f7fffffe          BL       CAN_Receive
;;;47     	if(varOperation.pidTset == 1)
000018  482e              LDR      r0,|L1.212|
00001a  f8900093          LDRB     r0,[r0,#0x93]  ; varOperation
00001e  2801              CMP      r0,#1
000020  d10b              BNE      |L1.58|
;;;48     	{
;;;49     		err = OSQPost(canRecieveQ,CAN1_RxMsg);
000022  4629              MOV      r1,r5
000024  482c              LDR      r0,|L1.216|
000026  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000028  f7fffffe          BL       OSQPost
00002c  4604              MOV      r4,r0
;;;50     		if(err != OS_ERR_NONE)
00002e  2c00              CMP      r4,#0
000030  d04a              BEQ      |L1.200|
;;;51     			Mem_free(CAN1_RxMsg);
000032  4628              MOV      r0,r5
000034  f7fffffe          BL       Mem_free
000038  e046              B        |L1.200|
                  |L1.58|
;;;52     	}else
;;;53     	{
;;;54     		if(varOperation.canTest == 2) //收到CAN回复的数据 - 波特率测试成功
00003a  4826              LDR      r0,|L1.212|
00003c  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
000040  2802              CMP      r0,#2
000042  d11b              BNE      |L1.124|
;;;55     		{
;;;56     			if(CAN1_RxMsg->ExtId != varOperation.canRxId)//扔给J1939任务处理
000044  4923              LDR      r1,|L1.212|
000046  6868              LDR      r0,[r5,#4]
000048  f8d1108c          LDR      r1,[r1,#0x8c]  ; varOperation
00004c  4288              CMP      r0,r1
00004e  d00a              BEQ      |L1.102|
;;;57     			{
;;;58     				err = OSQPost(canJ1939Q,CAN1_RxMsg);
000050  4629              MOV      r1,r5
000052  4822              LDR      r0,|L1.220|
000054  6800              LDR      r0,[r0,#0]  ; canJ1939Q
000056  f7fffffe          BL       OSQPost
00005a  4604              MOV      r4,r0
;;;59     				if(err != OS_ERR_NONE)
00005c  b30c              CBZ      r4,|L1.162|
;;;60     					Mem_free(CAN1_RxMsg);
00005e  4628              MOV      r0,r5
000060  f7fffffe          BL       Mem_free
000064  e030              B        |L1.200|
                  |L1.102|
;;;61     			}else 
;;;62     			{
;;;63     				err = OSQPost(canRecieveQ,CAN1_RxMsg);
000066  4629              MOV      r1,r5
000068  481b              LDR      r0,|L1.216|
00006a  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00006c  f7fffffe          BL       OSQPost
000070  4604              MOV      r4,r0
;;;64     				if(err != OS_ERR_NONE)
000072  b1b4              CBZ      r4,|L1.162|
;;;65     					Mem_free(CAN1_RxMsg);
000074  4628              MOV      r0,r5
000076  f7fffffe          BL       Mem_free
00007a  e025              B        |L1.200|
                  |L1.124|
;;;66     			}
;;;67     		}	
;;;68     		else if(varOperation.canTest == 1)//自识别 CAN ID 阶段
00007c  4815              LDR      r0,|L1.212|
00007e  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
000082  2801              CMP      r0,#1
000084  d10e              BNE      |L1.164|
;;;69     		{
;;;70     			varOperation.canTest = 2;
000086  2002              MOVS     r0,#2
000088  4912              LDR      r1,|L1.212|
00008a  f8a10091          STRH     r0,[r1,#0x91]
;;;71     			err = OSQPost(canRecieveQ,CAN1_RxMsg);
00008e  4629              MOV      r1,r5
000090  4811              LDR      r0,|L1.216|
000092  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000094  f7fffffe          BL       OSQPost
000098  4604              MOV      r4,r0
;;;72     			if(err != OS_ERR_NONE)
00009a  b114              CBZ      r4,|L1.162|
;;;73     				Mem_free(CAN1_RxMsg);
00009c  4628              MOV      r0,r5
00009e  f7fffffe          BL       Mem_free
                  |L1.162|
0000a2  e011              B        |L1.200|
                  |L1.164|
;;;74     		}
;;;75     		else if(varOperation.canTest == 0)
0000a4  480b              LDR      r0,|L1.212|
0000a6  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
0000aa  b968              CBNZ     r0,|L1.200|
;;;76     		{
;;;77     			varOperation.canTest = 1; //自识别波特率阶段
0000ac  2001              MOVS     r0,#1
0000ae  4909              LDR      r1,|L1.212|
0000b0  f8a10091          STRH     r0,[r1,#0x91]
;;;78     			err = OSQPost(canRecieveQ,CAN1_RxMsg);
0000b4  4629              MOV      r1,r5
0000b6  4808              LDR      r0,|L1.216|
0000b8  6800              LDR      r0,[r0,#0]  ; canRecieveQ
0000ba  f7fffffe          BL       OSQPost
0000be  4604              MOV      r4,r0
;;;79     			if(err != OS_ERR_NONE)
0000c0  b114              CBZ      r4,|L1.200|
;;;80     				Mem_free(CAN1_RxMsg);
0000c2  4628              MOV      r0,r5
0000c4  f7fffffe          BL       Mem_free
                  |L1.200|
;;;81     		}
;;;82     	}
;;;83     	
;;;84     
;;;85     	OSIntExit();  //中断服务结束，系统进行任务调度
0000c8  f7fffffe          BL       OSIntExit
;;;86     }
0000cc  bd70              POP      {r4-r6,pc}
;;;87     
                          ENDP

0000ce  0000              DCW      0x0000
                  |L1.208|
                          DCD      0x40006400
                  |L1.212|
                          DCD      varOperation
                  |L1.216|
                          DCD      canRecieveQ
                  |L1.220|
                          DCD      canJ1939Q

                          AREA ||i.OBD_CAN_SendData||, CODE, READONLY, ALIGN=2

                  OBD_CAN_SendData PROC
;;;8      static CanTxMsg TxMessage;
;;;9      void OBD_CAN_SendData(u32 canId,u32 ide,u8* pdat)
000000  b5f8              PUSH     {r3-r7,lr}
;;;10     {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4614              MOV      r4,r2
;;;11     	u8 err;
;;;12     	OSMutexPend(CANSendMutex,0,&err);     //提高优先级，独占CAN
000008  466a              MOV      r2,sp
00000a  2100              MOVS     r1,#0
00000c  4813              LDR      r0,|L2.92|
00000e  6800              LDR      r0,[r0,#0]  ; CANSendMutex
000010  f7fffffe          BL       OSMutexPend
;;;13     			
;;;14     	TxMessage.StdId = canId;
000014  4812              LDR      r0,|L2.96|
000016  6005              STR      r5,[r0,#0]  ; TxMessage
;;;15     	TxMessage.ExtId = canId;  //扩展帧
000018  6045              STR      r5,[r0,#4]  ; TxMessage
;;;16     	
;;;17     	TxMessage.IDE = ide;
00001a  4601              MOV      r1,r0
00001c  720e              STRB     r6,[r1,#8]
;;;18     	TxMessage.RTR = CAN_RTR_DATA;
00001e  2000              MOVS     r0,#0
000020  7248              STRB     r0,[r1,#9]
;;;19     	TxMessage.DLC = 8;//数据长度
000022  2008              MOVS     r0,#8
000024  7288              STRB     r0,[r1,#0xa]
;;;20     	
;;;21     	TxMessage.Data[0] = pdat[0];
000026  7820              LDRB     r0,[r4,#0]
000028  72c8              STRB     r0,[r1,#0xb]
;;;22     	TxMessage.Data[1] = pdat[1];
00002a  7861              LDRB     r1,[r4,#1]
00002c  480c              LDR      r0,|L2.96|
00002e  7301              STRB     r1,[r0,#0xc]
;;;23     	TxMessage.Data[2] = pdat[2];
000030  78a1              LDRB     r1,[r4,#2]
000032  7341              STRB     r1,[r0,#0xd]
;;;24     	TxMessage.Data[3] = pdat[3];
000034  78e1              LDRB     r1,[r4,#3]
000036  7381              STRB     r1,[r0,#0xe]
;;;25     	TxMessage.Data[4] = pdat[4];
000038  7921              LDRB     r1,[r4,#4]
00003a  73c1              STRB     r1,[r0,#0xf]
;;;26     	TxMessage.Data[5] = pdat[5];
00003c  7961              LDRB     r1,[r4,#5]
00003e  7401              STRB     r1,[r0,#0x10]
;;;27     	TxMessage.Data[6] = pdat[6];
000040  79a1              LDRB     r1,[r4,#6]
000042  7441              STRB     r1,[r0,#0x11]
;;;28     	TxMessage.Data[7] = pdat[7];
000044  79e1              LDRB     r1,[r4,#7]
000046  7481              STRB     r1,[r0,#0x12]
;;;29     	
;;;30     	CAN_Transmit(CAN1,&TxMessage);
000048  4601              MOV      r1,r0
00004a  4806              LDR      r0,|L2.100|
00004c  f7fffffe          BL       CAN_Transmit
;;;31     	
;;;32     	OSMutexPost(CANSendMutex);
000050  4802              LDR      r0,|L2.92|
000052  6800              LDR      r0,[r0,#0]  ; CANSendMutex
000054  f7fffffe          BL       OSMutexPost
;;;33     }
000058  bdf8              POP      {r3-r7,pc}
;;;34     
                          ENDP

00005a  0000              DCW      0x0000
                  |L2.92|
                          DCD      CANSendMutex
                  |L2.96|
                          DCD      TxMessage
                  |L2.100|
                          DCD      0x40006400

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  TxMessage
                          %        20

;*** Start embedded assembler ***

#line 1 "..\\OBD\\OBDCAN_Tx_Rx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_OBDCAN_Tx_Rx_c_55f03bcd____REV16|
#line 465 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.2.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___14_OBDCAN_Tx_Rx_c_55f03bcd____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_OBDCAN_Tx_Rx_c_55f03bcd____REVSH|
#line 480
|__asm___14_OBDCAN_Tx_Rx_c_55f03bcd____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_OBDCAN_Tx_Rx_c_55f03bcd____RRX|
#line 667
|__asm___14_OBDCAN_Tx_Rx_c_55f03bcd____RRX| PROC
#line 668

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
