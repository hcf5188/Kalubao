; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\cdma_tx_rx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\cdma_tx_rx.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\cdma_tx_rx.crf ..\CDMA\CDMA_Tx_Rx.c]
                          THUMB

                          AREA ||i.USART2_IRQHandler||, CODE, READONLY, ALIGN=2

                  USART2_IRQHandler PROC
;;;8      
;;;9      void USART2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;10     {
;;;11     	OSIntEnter();//系统进入中断服务程序
000002  f7fffffe          BL       OSIntEnter
;;;12     	
;;;13     	
;;;14     	if(USART_GetITStatus(USART2, USART_IT_RXNE) != RESET)//接收到数据
000006  f2405125          MOV      r1,#0x525
00000a  4817              LDR      r0,|L1.104|
00000c  f7fffffe          BL       USART_GetITStatus
000010  b150              CBZ      r0,|L1.40|
;;;15       	{
;;;16         	/* Read one byte from the receive data register */
;;;17         	byteRec=USART_ReceiveData(USART2);
000012  4815              LDR      r0,|L1.104|
000014  f7fffffe          BL       USART_ReceiveData
000018  4914              LDR      r1,|L1.108|
00001a  7008              STRB     r0,[r1,#0]
;;;18     //		g_usart_data[u_index].rx_buf[g_usart_data[u_index].rx_last++]=tmp;
;;;19     //		g_usart_data[u_index].rx_last&=0x01ff;
;;;20     		USART_ClearITPendingBit(USART2, USART_IT_RXNE) ;
00001c  f2405125          MOV      r1,#0x525
000020  4811              LDR      r0,|L1.104|
000022  f7fffffe          BL       USART_ClearITPendingBit
000026  e01c              B        |L1.98|
                  |L1.40|
;;;21     	}
;;;22     	else if(USART_GetITStatus(USART2, USART_IT_TC) != RESET)//发送完毕
000028  f2406126          MOV      r1,#0x626
00002c  480e              LDR      r0,|L1.104|
00002e  f7fffffe          BL       USART_GetITStatus
000032  b128              CBZ      r0,|L1.64|
;;;23     	{
;;;24     //		if(g_usart_data[u_index].tx_last!=g_usart_data[u_index].tx_used)
;;;25     //		{
;;;26     //			tmp=g_usart_data[u_index].tx_buf[g_usart_data[u_index].tx_used++];
;;;27     //			g_usart_data[u_index].tx_used&=0x01ff;
;;;28     //			USART_SendData(USART2, tmp);
;;;29     //		}else
;;;30     //		{
;;;31     //			 g_usart_data[u_index].flag_txstop=1;
;;;32     //		}
;;;33     		USART_ClearITPendingBit(USART2, USART_IT_TC) ;
000034  f2406126          MOV      r1,#0x626
000038  480b              LDR      r0,|L1.104|
00003a  f7fffffe          BL       USART_ClearITPendingBit
00003e  e010              B        |L1.98|
                  |L1.64|
;;;34     	}
;;;35     	else if(USART_GetITStatus(USART2, USART_IT_TXE) != RESET)//空
000040  f2407127          MOV      r1,#0x727
000044  4808              LDR      r0,|L1.104|
000046  f7fffffe          BL       USART_GetITStatus
00004a  b150              CBZ      r0,|L1.98|
;;;36     	{
;;;37     //		if(g_usart_data[u_index].tx_last!=g_usart_data[u_index].tx_used)
;;;38     //		{
;;;39     //			tmp=g_usart_data[u_index].tx_buf[g_usart_data[u_index].tx_used++];
;;;40     //			g_usart_data[u_index].tx_used&=0x01ff;
;;;41     //			USART_SendData(USART2, tmp);
;;;42     //		}
;;;43     //		else
;;;44     //		{
;;;45     //			 g_usart_data[u_index].flag_txstop=1;
;;;46     //		}
;;;47     		USART_ITConfig(USART2, USART_IT_TXE, DISABLE);
00004c  2200              MOVS     r2,#0
00004e  f2407127          MOV      r1,#0x727
000052  4805              LDR      r0,|L1.104|
000054  f7fffffe          BL       USART_ITConfig
;;;48     		USART_ClearITPendingBit(USART2, USART_IT_TXE) ;
000058  f2407127          MOV      r1,#0x727
00005c  4802              LDR      r0,|L1.104|
00005e  f7fffffe          BL       USART_ClearITPendingBit
                  |L1.98|
;;;49     	}
;;;50     	
;;;51     	
;;;52     	OSIntExit();  //中断服务结束，系统进行任务调度
000062  f7fffffe          BL       OSIntExit
;;;53     }
000066  bd10              POP      {r4,pc}
;;;54     
                          ENDP

                  |L1.104|
                          DCD      0x40004400
                  |L1.108|
                          DCD      byteRec

                          AREA ||.data||, DATA, ALIGN=0

                  byteRec
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\CDMA\\CDMA_Tx_Rx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_CDMA_Tx_Rx_c_byteRec____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_CDMA_Tx_Rx_c_byteRec____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_CDMA_Tx_Rx_c_byteRec____REVSH|
#line 144
|__asm___12_CDMA_Tx_Rx_c_byteRec____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
