; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\cdmatask.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\cdmatask.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\cdmatask.crf ..\CDMA\CDMATask.c]
                          THUMB

                          AREA ||i.CDMATask||, CODE, READONLY, ALIGN=2

                  CDMATask PROC
;;;6      const uint8_t atCmd[] = "AT\r";
;;;7      void CDMATask(void *pdata)
000000  f44f6080          MOV      r0,#0x400
;;;8      {
;;;9      	sendCDMA_Q = Cir_Queue_Init(1024);//CDMA 串口发送 循环队列
000004  f7fffffe          BL       Cir_Queue_Init
000008  4914              LDR      r1,|L1.92|
00000a  6008              STR      r0,[r1,#0]  ; sendCDMA_Q
;;;10     	receCDMA_S = Store_Init(1024);    //CDMA 串口接收 数据堆
00000c  f44f6080          MOV      r0,#0x400
000010  f7fffffe          BL       Store_Init
000014  4912              LDR      r1,|L1.96|
000016  6008              STR      r0,[r1,#0]  ; receCDMA_S
;;;11     	
;;;12     //	CDMAUart2Init();
;;;13     //	
;;;14     //	OSTimeDlyHMSM(0,0,5,0);
;;;15     	CDMA_POWER_LOW;
000018  f44f4100          MOV      r1,#0x8000
00001c  4811              LDR      r0,|L1.100|
00001e  f7fffffe          BL       GPIO_ResetBits
;;;16     	OSTimeDlyHMSM(0,0,3,0);
000022  2300              MOVS     r3,#0
000024  2203              MOVS     r2,#3
000026  4619              MOV      r1,r3
000028  4618              MOV      r0,r3
00002a  f7fffffe          BL       OSTimeDlyHMSM
;;;17     	CDMA_POWER_HIGH;
00002e  f44f4100          MOV      r1,#0x8000
000032  480c              LDR      r0,|L1.100|
000034  f7fffffe          BL       GPIO_SetBits
;;;18     	OSTimeDlyHMSM(0,0,3,0);
000038  2300              MOVS     r3,#0
00003a  2203              MOVS     r2,#3
00003c  4619              MOV      r1,r3
00003e  4618              MOV      r0,r3
000040  f7fffffe          BL       OSTimeDlyHMSM
;;;19     	
;;;20     	
;;;21     	while(1)
000044  e009              B        |L1.90|
                  |L1.70|
;;;22     	{
;;;23     		CDMASendDatas(atCmd,sizeof(atCmd));
000046  2104              MOVS     r1,#4
000048  4807              LDR      r0,|L1.104|
00004a  f7fffffe          BL       CDMASendDatas
;;;24     		OSTimeDlyHMSM(0,0,1,0);
00004e  2300              MOVS     r3,#0
000050  2201              MOVS     r2,#1
000052  4619              MOV      r1,r3
000054  4618              MOV      r0,r3
000056  f7fffffe          BL       OSTimeDlyHMSM
                  |L1.90|
00005a  e7f4              B        |L1.70|
;;;25     	}
;;;26     }
;;;27     
                          ENDP

                  |L1.92|
                          DCD      sendCDMA_Q
                  |L1.96|
                          DCD      receCDMA_S
                  |L1.100|
                          DCD      0x40010c00
                  |L1.104|
                          DCD      atCmd

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  atCmd
000000  41540d00          DCB      0x41,0x54,0x0d,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  sendCDMA_Q
                          DCD      0x00000000
                  receCDMA_S
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\CDMA\\CDMATask.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_CDMATask_c_atCmd____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_CDMATask_c_atCmd____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_CDMATask_c_atCmd____REVSH|
#line 144
|__asm___10_CDMATask_c_atCmd____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
