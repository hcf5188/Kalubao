; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\obdtask_1.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\obdtask_1.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\obdtask_1.crf ..\OBD\OBDTask.c]
                          THUMB

                          AREA ||i.CANTestChannel||, CODE, READONLY, ALIGN=2

                  CANTestChannel PROC
;;;169    
;;;170    void CANTestChannel(void )
000000  b5f0              PUSH     {r4-r7,lr}
;;;171    {
000002  b089              SUB      sp,sp,#0x24
;;;172    	uint8_t err,i;
;;;173    	CanRxMsg* CAN1_RxMsg;
;;;174    	CanTxMsg  CAN1_TxMsg;
;;;175        uint8_t* ptrTestCan;
;;;176    	uint8_t cmdManyPackNum;
;;;177    	CAN_InitTypeDef   CAN_InitStructure;
;;;178    	
;;;179    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能CAN1时钟
000004  2101              MOVS     r1,#1
000006  0648              LSLS     r0,r1,#25
000008  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;180    
;;;181    //baud:	
;;;182    	varOperation.canTest = 0;
00000c  2000              MOVS     r0,#0
00000e  49c3              LDR      r1,|L1.796|
000010  f8a1007c          STRH     r0,[r1,#0x7c]
;;;183    	for(i = 0;i<NUMOfCANBaud;i++)       //获得CAN的波特率
000014  2500              MOVS     r5,#0
000016  e02b              B        |L1.112|
                  |L1.24|
;;;184    	{
;;;185    		CAN_DeInit(CAN1);
000018  48c1              LDR      r0,|L1.800|
00001a  f7fffffe          BL       CAN_DeInit
;;;186    		CAN_StructInit(&CAN_InitStructure);
00001e  4668              MOV      r0,sp
000020  f7fffffe          BL       CAN_StructInit
;;;187    		CAN1_BaudSet(canBaudEnum[i]); 
000024  49bf              LDR      r1,|L1.804|
000026  5d48              LDRB     r0,[r1,r5]
000028  f7fffffe          BL       CAN1_BaudSet
;;;188    		CAN1_ClearFilter();
00002c  f7fffffe          BL       CAN1_ClearFilter
;;;189    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
000030  2201              MOVS     r2,#1
000032  2110              MOVS     r1,#0x10
000034  48ba              LDR      r0,|L1.800|
000036  f7fffffe          BL       CAN_ITConfig
;;;190    		
;;;191    		//只要此波特率下有数据，CAN波特率就确定了
;;;192    		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
00003a  aa08              ADD      r2,sp,#0x20
00003c  f44f71fa          MOV      r1,#0x1f4
000040  48b9              LDR      r0,|L1.808|
000042  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000044  f7fffffe          BL       OSQPend
000048  4606              MOV      r6,r0
;;;193    		if(err == OS_ERR_NONE)
00004a  f89d0020          LDRB     r0,[sp,#0x20]
00004e  b968              CBNZ     r0,|L1.108|
;;;194    		{
;;;195    			varOperation.canBaud = canBaudEnum[i];
000050  48b4              LDR      r0,|L1.804|
000052  5d40              LDRB     r0,[r0,r5]
000054  49b1              LDR      r1,|L1.796|
000056  f881007b          STRB     r0,[r1,#0x7b]
;;;196    			Mem_free(CAN1_RxMsg);
00005a  4630              MOV      r0,r6
00005c  f7fffffe          BL       Mem_free
;;;197    			LogReport("Baud %d Test Success.",canBaudEnum[i]);
000060  48b0              LDR      r0,|L1.804|
000062  5d41              LDRB     r1,[r0,r5]
000064  a0b1              ADR      r0,|L1.812|
000066  f7fffffe          BL       LogReport
;;;198    			break;
00006a  e003              B        |L1.116|
                  |L1.108|
00006c  1c68              ADDS     r0,r5,#1              ;183
00006e  b2c5              UXTB     r5,r0                 ;183
                  |L1.112|
000070  2d03              CMP      r5,#3                 ;183
000072  dbd1              BLT      |L1.24|
                  |L1.116|
000074  bf00              NOP      
;;;199    		}
;;;200    	}//如果波特率没有确定，就一直去确定波特率
;;;201    	if((i >= NUMOfCANBaud) && (err != OS_ERR_NONE))
000076  2d03              CMP      r5,#3
000078  db0a              BLT      |L1.144|
00007a  f89d0020          LDRB     r0,[sp,#0x20]
00007e  b138              CBZ      r0,|L1.144|
;;;202    	{
;;;203    		LogReport("Baud Test Fail!!!");
000080  a0b0              ADR      r0,|L1.836|
000082  f7fffffe          BL       LogReport
;;;204    		varOperation.canTest = 0;
000086  2000              MOVS     r0,#0
000088  49a4              LDR      r1,|L1.796|
00008a  f8a1007c          STRH     r0,[r1,#0x7c]
;;;205    		goto idOK;
00008e  e142              B        |L1.790|
                  |L1.144|
;;;206    	}
;;;207    		
;;;208    //reID:	
;;;209    	dataToSend.ide = CAN_ID_EXT;
000090  2004              MOVS     r0,#4
000092  49b1              LDR      r1,|L1.856|
000094  6048              STR      r0,[r1,#4]  ; dataToSend
;;;210    	for(i=0;i<NUMOfCANID_EXT;i++)
000096  2500              MOVS     r5,#0
000098  e132              B        |L1.768|
                  |L1.154|
;;;211    	{
;;;212    		varOperation.canRxId  =(canIdExt[i]>>24) &0x000000FF;
00009a  48b0              LDR      r0,|L1.860|
00009c  f8500025          LDR      r0,[r0,r5,LSL #2]
0000a0  0e00              LSRS     r0,r0,#24
0000a2  499e              LDR      r1,|L1.796|
0000a4  f8c10077          STR      r0,[r1,#0x77]  ; varOperation
;;;213    		varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i]>>16) & 0x000000FF);
0000a8  48ac              LDR      r0,|L1.860|
0000aa  f8500025          LDR      r0,[r0,r5,LSL #2]
0000ae  f3c04007          UBFX     r0,r0,#16,#8
0000b2  f8d11077          LDR      r1,[r1,#0x77]  ; varOperation
0000b6  eb002001          ADD      r0,r0,r1,LSL #8
0000ba  4998              LDR      r1,|L1.796|
0000bc  f8c10077          STR      r0,[r1,#0x77]  ; varOperation
;;;214    		varOperation.canRxId  =(varOperation.canRxId  << 8)+(canIdExt[i]&0x000000FF);
0000c0  4608              MOV      r0,r1
0000c2  f8d01077          LDR      r1,[r0,#0x77]  ; varOperation
0000c6  48a5              LDR      r0,|L1.860|
0000c8  f8500025          LDR      r0,[r0,r5,LSL #2]
0000cc  f361201f          BFI      r0,r1,#8,#24
0000d0  4992              LDR      r1,|L1.796|
0000d2  f8c10077          STR      r0,[r1,#0x77]  ; varOperation
;;;215    		varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i]>>8) &0x000000FF);
0000d6  48a1              LDR      r0,|L1.860|
0000d8  f8300025          LDRH     r0,[r0,r5,LSL #2]
0000dc  f3c02007          UBFX     r0,r0,#8,#8
0000e0  f8d11077          LDR      r1,[r1,#0x77]  ; varOperation
0000e4  eb002001          ADD      r0,r0,r1,LSL #8
0000e8  498c              LDR      r1,|L1.796|
0000ea  f8c10077          STR      r0,[r1,#0x77]  ; varOperation
;;;216    		
;;;217    		CAN_DeInit(CAN1);
0000ee  488c              LDR      r0,|L1.800|
0000f0  f7fffffe          BL       CAN_DeInit
;;;218    		CAN_StructInit(&CAN_InitStructure);
0000f4  4668              MOV      r0,sp
0000f6  f7fffffe          BL       CAN_StructInit
;;;219    		CAN1_BaudSet(varOperation.canBaud);
0000fa  4988              LDR      r1,|L1.796|
0000fc  f891007b          LDRB     r0,[r1,#0x7b]  ; varOperation
000100  f7fffffe          BL       CAN1_BaudSet
;;;220    		CAN1_SetFilter(varOperation.canRxId ,CAN_ID_EXT);
000104  4985              LDR      r1,|L1.796|
000106  f8d10077          LDR      r0,[r1,#0x77]  ; varOperation
00010a  2104              MOVS     r1,#4
00010c  f7fffffe          BL       CAN1_SetFilter
;;;221    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
000110  2201              MOVS     r2,#1
000112  2110              MOVS     r1,#0x10
000114  4882              LDR      r0,|L1.800|
000116  f7fffffe          BL       CAN_ITConfig
;;;222    		
;;;223    		dataToSend.canId = canIdExt[i];
00011a  4890              LDR      r0,|L1.860|
00011c  f8500025          LDR      r0,[r0,r5,LSL #2]
000120  498d              LDR      r1,|L1.856|
000122  6008              STR      r0,[r1,#0]  ; dataToSend
;;;224    		
;;;225    		CAN1_TxMsg.IDE     = CAN_ID_EXT;
000124  2004              MOVS     r0,#4
000126  f88d0014          STRB     r0,[sp,#0x14]
;;;226    		CAN1_TxMsg.StdId   = dataToSend.canId;
00012a  4608              MOV      r0,r1
00012c  6800              LDR      r0,[r0,#0]  ; dataToSend
00012e  9003              STR      r0,[sp,#0xc]
;;;227    		CAN1_TxMsg.ExtId   = dataToSend.canId;
000130  4608              MOV      r0,r1
000132  6800              LDR      r0,[r0,#0]  ; dataToSend
000134  9004              STR      r0,[sp,#0x10]
;;;228    		CAN1_TxMsg.DLC     = 0x08;
000136  2008              MOVS     r0,#8
000138  f88d0016          STRB     r0,[sp,#0x16]
;;;229    		
;;;230    		CAN1_TxMsg.Data[0] = 0x02;CAN1_TxMsg.Data[1] = 0x1A;CAN1_TxMsg.Data[2] = 0x94;
00013c  2002              MOVS     r0,#2
00013e  f88d0017          STRB     r0,[sp,#0x17]
000142  211a              MOVS     r1,#0x1a
000144  f88d1018          STRB     r1,[sp,#0x18]
000148  2194              MOVS     r1,#0x94
00014a  f88d1019          STRB     r1,[sp,#0x19]
;;;231    		CAN1_TxMsg.Data[3] = 0x00;CAN1_TxMsg.Data[4] = 0x00;CAN1_TxMsg.Data[5] = 0x00;
00014e  2100              MOVS     r1,#0
000150  f88d101a          STRB     r1,[sp,#0x1a]
000154  f88d101b          STRB     r1,[sp,#0x1b]
000158  f88d101c          STRB     r1,[sp,#0x1c]
;;;232    		CAN1_TxMsg.Data[6] = 0x00;CAN1_TxMsg.Data[7] = 0x00;
00015c  f88d101d          STRB     r1,[sp,#0x1d]
000160  f88d101e          STRB     r1,[sp,#0x1e]
;;;233    		CAN_Transmit(CAN1,&CAN1_TxMsg);
000164  a903              ADD      r1,sp,#0xc
000166  486e              LDR      r0,|L1.800|
000168  f7fffffe          BL       CAN_Transmit
;;;234    		
;;;235    		CAN1_RxMsg = OSQPend(canRecieveQ,50,&err);
00016c  aa08              ADD      r2,sp,#0x20
00016e  2132              MOVS     r1,#0x32
000170  486d              LDR      r0,|L1.808|
000172  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000174  f7fffffe          BL       OSQPend
000178  4606              MOV      r6,r0
;;;236    		if(err == OS_ERR_NONE)
00017a  f89d0020          LDRB     r0,[sp,#0x20]
00017e  2800              CMP      r0,#0
000180  d17d              BNE      |L1.638|
;;;237    		{
;;;238    			varOperation.canIdType = CAN_ID_EXT;
000182  2004              MOVS     r0,#4
000184  4965              LDR      r1,|L1.796|
000186  f8810072          STRB     r0,[r1,#0x72]
;;;239    			varOperation.canTxId   = dataToSend.canId;
00018a  4873              LDR      r0,|L1.856|
00018c  6800              LDR      r0,[r0,#0]  ; dataToSend
00018e  f8c10073          STR      r0,[r1,#0x73]  ; varOperation
;;;240    			if(CAN1_RxMsg->Data[0] == 0x10)     //多包处理
000192  7af0              LDRB     r0,[r6,#0xb]
000194  2810              CMP      r0,#0x10
000196  d173              BNE      |L1.640|
;;;241    			{
;;;242    				ptrTestCan = Mem_malloc(CAN1_RxMsg->Data[1]+15);//申请的内存块足够长
000198  7b31              LDRB     r1,[r6,#0xc]
00019a  f101000f          ADD      r0,r1,#0xf
00019e  f7fffffe          BL       Mem_malloc
0001a2  4604              MOV      r4,r0
;;;243    				if(ptrTestCan != NULL)
0001a4  2c00              CMP      r4,#0
0001a6  d06c              BEQ      |L1.642|
;;;244    				{
;;;245    					ptrTestCan[0] = 31;
0001a8  201f              MOVS     r0,#0x1f
0001aa  7020              STRB     r0,[r4,#0]
;;;246    					ptrTestCan[1] = 0x50;
0001ac  2050              MOVS     r0,#0x50
0001ae  7060              STRB     r0,[r4,#1]
;;;247    					ptrTestCan[2] = 0x13;
0001b0  2013              MOVS     r0,#0x13
0001b2  70a0              STRB     r0,[r4,#2]
;;;248    					ptrTestCan[3] = varOperation.canBaud;
0001b4  4859              LDR      r0,|L1.796|
0001b6  f890007b          LDRB     r0,[r0,#0x7b]  ; varOperation
0001ba  70e0              STRB     r0,[r4,#3]
;;;249    					ptrTestCan[4] = (varOperation.canRxId>>24) &0x000000FF;//卡路宝ID
0001bc  4857              LDR      r0,|L1.796|
0001be  f8d00077          LDR      r0,[r0,#0x77]  ; varOperation
0001c2  0e00              LSRS     r0,r0,#24
0001c4  7120              STRB     r0,[r4,#4]
;;;250    					ptrTestCan[5] = (varOperation.canRxId>>16) &0x000000FF;
0001c6  4855              LDR      r0,|L1.796|
0001c8  f8d00077          LDR      r0,[r0,#0x77]  ; varOperation
0001cc  0c00              LSRS     r0,r0,#16
0001ce  7160              STRB     r0,[r4,#5]
;;;251    					ptrTestCan[6] = (varOperation.canRxId>>8) &0x000000FF;
0001d0  4852              LDR      r0,|L1.796|
0001d2  f8b00077          LDRH     r0,[r0,#0x77]  ; varOperation
0001d6  0a00              LSRS     r0,r0,#8
0001d8  71a0              STRB     r0,[r4,#6]
;;;252    					ptrTestCan[7] = (varOperation.canRxId>>0) &0x000000FF;
0001da  4850              LDR      r0,|L1.796|
0001dc  f8900077          LDRB     r0,[r0,#0x77]  ; varOperation
0001e0  71e0              STRB     r0,[r4,#7]
;;;253    					
;;;254    					ptrTestCan[8]  = (varOperation.canTxId>>24) &0x000000FF;//ECUID
0001e2  484e              LDR      r0,|L1.796|
0001e4  f8d00073          LDR      r0,[r0,#0x73]  ; varOperation
0001e8  0e00              LSRS     r0,r0,#24
0001ea  7220              STRB     r0,[r4,#8]
;;;255    					ptrTestCan[9]  = (varOperation.canTxId>>16) &0x000000FF;
0001ec  484b              LDR      r0,|L1.796|
0001ee  f8d00073          LDR      r0,[r0,#0x73]  ; varOperation
0001f2  0c00              LSRS     r0,r0,#16
0001f4  7260              STRB     r0,[r4,#9]
;;;256    					ptrTestCan[10] = (varOperation.canTxId>>8) &0x000000FF;
0001f6  4849              LDR      r0,|L1.796|
0001f8  f8b00073          LDRH     r0,[r0,#0x73]  ; varOperation
0001fc  0a00              LSRS     r0,r0,#8
0001fe  72a0              STRB     r0,[r4,#0xa]
;;;257    					ptrTestCan[11] = (varOperation.canTxId>>0) &0x000000FF;
000200  4846              LDR      r0,|L1.796|
000202  f8900073          LDRB     r0,[r0,#0x73]  ; varOperation
000206  72e0              STRB     r0,[r4,#0xb]
;;;258    					
;;;259    					memcpy(&ptrTestCan[12],&CAN1_RxMsg->Data[4],4);
000208  f8d6000f          LDR      r0,[r6,#0xf]
00020c  60e0              STR      r0,[r4,#0xc]
;;;260    					cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6)%7 == 0? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
00020e  7b30              LDRB     r0,[r6,#0xc]
000210  1f80              SUBS     r0,r0,#6
000212  2107              MOVS     r1,#7
000214  fb90f2f1          SDIV     r2,r0,r1
000218  fb010012          MLS      r0,r1,r2,r0
00021c  b920              CBNZ     r0,|L1.552|
00021e  7b30              LDRB     r0,[r6,#0xc]
000220  1f80              SUBS     r0,r0,#6
000222  fb90f0f1          SDIV     r0,r0,r1
000226  e005              B        |L1.564|
                  |L1.552|
000228  7b30              LDRB     r0,[r6,#0xc]
00022a  1f80              SUBS     r0,r0,#6
00022c  2107              MOVS     r1,#7
00022e  fb90f0f1          SDIV     r0,r0,r1
000232  1c40              ADDS     r0,r0,#1
                  |L1.564|
000234  b2c7              UXTB     r7,r0
;;;261    					Mem_free(CAN1_RxMsg);
000236  4630              MOV      r0,r6
000238  f7fffffe          BL       Mem_free
;;;262    					
;;;263    					dataToSend.pdat = pidManyBag;//发送0x30 请求接下来的多包
00023c  4848              LDR      r0,|L1.864|
00023e  4946              LDR      r1,|L1.856|
000240  6088              STR      r0,[r1,#8]  ; dataToSend
;;;264    					OBD_CAN_SendData(dataToSend);
000242  4608              MOV      r0,r1
000244  c807              LDM      r0,{r0-r2}
000246  f7fffffe          BL       OBD_CAN_SendData
;;;265    					
;;;266    					for(i=0;i<cmdManyPackNum;i++)
00024a  2500              MOVS     r5,#0
00024c  e01d              B        |L1.650|
                  |L1.590|
;;;267    					{
;;;268    						CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);//接收多包
00024e  aa08              ADD      r2,sp,#0x20
000250  2119              MOVS     r1,#0x19
000252  4835              LDR      r0,|L1.808|
000254  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000256  f7fffffe          BL       OSQPend
00025a  4606              MOV      r6,r0
;;;269    						if(err == OS_ERR_NONE)
00025c  f89d0020          LDRB     r0,[sp,#0x20]
000260  b980              CBNZ     r0,|L1.644|
;;;270    						{
;;;271    							memcpy(&ptrTestCan[7*i + 16],&CAN1_RxMsg->Data[1],7);
000262  ebc500c5          RSB      r0,r5,r5,LSL #3
000266  3010              ADDS     r0,r0,#0x10
000268  1901              ADDS     r1,r0,r4
00026a  68f2              LDR      r2,[r6,#0xc]
00026c  600a              STR      r2,[r1,#0]
00026e  8a32              LDRH     r2,[r6,#0x10]
000270  808a              STRH     r2,[r1,#4]
000272  7cb0              LDRB     r0,[r6,#0x12]
000274  7188              STRB     r0,[r1,#6]
;;;272    							Mem_free(CAN1_RxMsg);
000276  4630              MOV      r0,r6
000278  f7fffffe          BL       Mem_free
00027c  e003              B        |L1.646|
                  |L1.638|
00027e  e03d              B        |L1.764|
                  |L1.640|
000280  e02f              B        |L1.738|
                  |L1.642|
000282  e038              B        |L1.758|
                  |L1.644|
;;;273    						}
;;;274    						else break;
000284  e003              B        |L1.654|
                  |L1.646|
000286  1c68              ADDS     r0,r5,#1              ;266
000288  b2c5              UXTB     r5,r0                 ;266
                  |L1.650|
00028a  42bd              CMP      r5,r7                 ;266
00028c  dbdf              BLT      |L1.590|
                  |L1.654|
00028e  bf00              NOP      
;;;275    					}
;;;276    					if(i == cmdManyPackNum)
000290  42bd              CMP      r5,r7
000292  d11c              BNE      |L1.718|
;;;277    					{
;;;278    						OSMutexPend(CDMASendMutex,0,&err);
000294  aa08              ADD      r2,sp,#0x20
000296  2100              MOVS     r1,#0
000298  4832              LDR      r0,|L1.868|
00029a  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00029c  f7fffffe          BL       OSMutexPend
;;;279    						
;;;280    						memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],ptrTestCan,ptrTestCan[0]);
0002a0  4931              LDR      r1,|L1.872|
0002a2  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0002a4  6849              LDR      r1,[r1,#4]
0002a6  4b30              LDR      r3,|L1.872|
0002a8  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0002aa  881b              LDRH     r3,[r3,#0]
0002ac  18c8              ADDS     r0,r1,r3
0002ae  7822              LDRB     r2,[r4,#0]
0002b0  4621              MOV      r1,r4
0002b2  f7fffffe          BL       __aeabi_memcpy
;;;281    						cdmaDataToSend->datLength += ptrTestCan[0];
0002b6  482c              LDR      r0,|L1.872|
0002b8  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0002ba  8800              LDRH     r0,[r0,#0]
0002bc  7821              LDRB     r1,[r4,#0]
0002be  4408              ADD      r0,r0,r1
0002c0  4929              LDR      r1,|L1.872|
0002c2  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0002c4  8008              STRH     r0,[r1,#0]
;;;282    						
;;;283    						OSMutexPost(CDMASendMutex);
0002c6  4827              LDR      r0,|L1.868|
0002c8  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0002ca  f7fffffe          BL       OSMutexPost
                  |L1.718|
;;;284    					}
;;;285    					Mem_free(ptrTestCan);
0002ce  4620              MOV      r0,r4
0002d0  f7fffffe          BL       Mem_free
;;;286    					LogReport("CANID - %d Test Success type-%d .",dataToSend.canId,CAN_ID_EXT);
0002d4  4820              LDR      r0,|L1.856|
0002d6  2204              MOVS     r2,#4
0002d8  6801              LDR      r1,[r0,#0]  ; dataToSend
0002da  a024              ADR      r0,|L1.876|
0002dc  f7fffffe          BL       LogReport
;;;287    					goto idOK;
0002e0  e019              B        |L1.790|
                  |L1.738|
;;;288    				}
;;;289    			}
;;;290    			else
;;;291    			{
;;;292    				LogReport("CANID %d receive wrong data!",varOperation.canTxId);
0002e2  480e              LDR      r0,|L1.796|
0002e4  f8d01073          LDR      r1,[r0,#0x73]  ; varOperation
0002e8  a029              ADR      r0,|L1.912|
0002ea  f7fffffe          BL       LogReport
;;;293    				varOperation.canTest = 0;
0002ee  2000              MOVS     r0,#0
0002f0  490a              LDR      r1,|L1.796|
0002f2  f8a1007c          STRH     r0,[r1,#0x7c]
                  |L1.758|
;;;294    			}
;;;295    			Mem_free(CAN1_RxMsg);
0002f6  4630              MOV      r0,r6
0002f8  f7fffffe          BL       Mem_free
                  |L1.764|
0002fc  1c68              ADDS     r0,r5,#1              ;210
0002fe  b2c5              UXTB     r5,r0                 ;210
                  |L1.768|
000300  2d04              CMP      r5,#4                 ;210
000302  f6ffaeca          BLT      |L1.154|
;;;296    		}
;;;297    	}
;;;298    	LogReport("CANID EXT Test Fail!");
000306  a02a              ADR      r0,|L1.944|
000308  f7fffffe          BL       LogReport
;;;299    	varOperation.canTest = 0;
00030c  2000              MOVS     r0,#0
00030e  4903              LDR      r1,|L1.796|
000310  f8a1007c          STRH     r0,[r1,#0x7c]
;;;300    //	if(i >= NUMOfCANID_STD&&err != OS_ERR_NONE)
;;;301    //		goto reID;
;;;302    idOK:
000314  bf00              NOP      
                  |L1.790|
;;;303    	return;
;;;304    }
000316  b009              ADD      sp,sp,#0x24
000318  bdf0              POP      {r4-r7,pc}
;;;305    extern VARConfig* ptrPIDVars;//指向第二配置区
                          ENDP

00031a  0000              DCW      0x0000
                  |L1.796|
                          DCD      varOperation
                  |L1.800|
                          DCD      0x40006400
                  |L1.804|
                          DCD      canBaudEnum
                  |L1.808|
                          DCD      canRecieveQ
                  |L1.812|
00032c  42617564          DCB      "Baud %d Test Success.",0
000330  20256420
000334  54657374
000338  20537563
00033c  63657373
000340  2e00    
000342  00                DCB      0
000343  00                DCB      0
                  |L1.836|
000344  42617564          DCB      "Baud Test Fail!!!",0
000348  20546573
00034c  74204661
000350  696c2121
000354  2100    
000356  00                DCB      0
000357  00                DCB      0
                  |L1.856|
                          DCD      dataToSend
                  |L1.860|
                          DCD      canIdExt
                  |L1.864|
                          DCD      pidManyBag
                  |L1.868|
                          DCD      CDMASendMutex
                  |L1.872|
                          DCD      cdmaDataToSend
                  |L1.876|
00036c  43414e49          DCB      "CANID - %d Test Success type-%d .",0
000370  44202d20
000374  25642054
000378  65737420
00037c  53756363
000380  65737320
000384  74797065
000388  2d256420
00038c  2e00    
00038e  00                DCB      0
00038f  00                DCB      0
                  |L1.912|
000390  43414e49          DCB      "CANID %d receive wrong data!",0
000394  44202564
000398  20726563
00039c  65697665
0003a0  2077726f
0003a4  6e672064
0003a8  61746121
0003ac  00      
0003ad  00                DCB      0
0003ae  00                DCB      0
0003af  00                DCB      0
                  |L1.944|
0003b0  43414e49          DCB      "CANID EXT Test Fail!",0
0003b4  44204558
0003b8  54205465
0003bc  73742046
0003c0  61696c21
0003c4  00      
0003c5  00                DCB      0
0003c6  00                DCB      0
0003c7  00                DCB      0

                          AREA ||i.OBDTask||, CODE, READONLY, ALIGN=2

                  OBDTask PROC
;;;12     
;;;13     void OBDTask(void *pdata)
000000  b508              PUSH     {r3,lr}
;;;14     {
;;;15     	INT8U     err;
;;;16     	uint8_t   i      = 0;
000002  f04f0800          MOV      r8,#0
;;;17     	uint8_t   cmdLen = 0;        //封包的时候要减去指令的长度
000006  2600              MOVS     r6,#0
;;;18     	uint8_t   cmdNum = 0;        //指令序号
000008  46b1              MOV      r9,r6
;;;19     	uint8_t   cmdManyPackNum = 0;//要接受的多包的数量
00000a  46b2              MOV      r10,r6
;;;20     	
;;;21     	CanRxMsg* CAN1_RxMsg;        //指向接收到的OBD信息
;;;22     	uint8_t * can1_Txbuff;       //指向要发送的OBD信息
;;;23     	uint8_t * ptrSaveBuff;
;;;24     	
;;;25     	CARVarInit();                //与CAN相关的变量的初始化
00000c  f7fffffe          BL       CARVarInit
;;;26     	CAN1Config();                //CAN 配置
000010  f7fffffe          BL       CAN1Config
;;;27     	OSTimeDlyHMSM(0,0,1,4);
000014  2304              MOVS     r3,#4
000016  2201              MOVS     r2,#1
000018  2100              MOVS     r1,#0
00001a  4608              MOV      r0,r1
00001c  f7fffffe          BL       OSTimeDlyHMSM
;;;28     	TestServer();                //测试服务器
000020  f7fffffe          BL       TestServer
;;;29     
;;;30     	while(1)
000024  e10a              B        |L2.572|
                  |L2.38|
;;;31     	{	
;;;32     		can1_Txbuff = OSQPend(canSendQ,0,&err);//收到PID指令，进行发送
000026  466a              MOV      r2,sp
000028  2100              MOVS     r1,#0
00002a  4885              LDR      r0,|L2.576|
00002c  6800              LDR      r0,[r0,#0]  ; canSendQ
00002e  f7fffffe          BL       OSQPend
000032  4607              MOV      r7,r0
;;;33     		
;;;34     		cmdNum = can1_Txbuff[0];               //记录PID指令序号
000034  f8979000          LDRB     r9,[r7,#0]
;;;35     		cmdLen = can1_Txbuff[1];               //记录PID指令长度
000038  787e              LDRB     r6,[r7,#1]
;;;36     		
;;;37     		dataToSend.pdat = &can1_Txbuff[1];     
00003a  1c78              ADDS     r0,r7,#1
00003c  4981              LDR      r1,|L2.580|
00003e  6088              STR      r0,[r1,#8]  ; dataToSend
;;;38     		OBD_CAN_SendData(dataToSend);          //发送PID指令
000040  4608              MOV      r0,r1
000042  c807              LDM      r0,{r0-r2}
000044  f7fffffe          BL       OBD_CAN_SendData
;;;39     		
;;;40     
;;;41     		CAN1_RxMsg = OSQPend(canRecieveQ,25,&err); //接收到OBD回复
000048  466a              MOV      r2,sp
00004a  2119              MOVS     r1,#0x19
00004c  487e              LDR      r0,|L2.584|
00004e  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000050  f7fffffe          BL       OSQPend
000054  4604              MOV      r4,r0
;;;42     		if(err == OS_ERR_NONE)
000056  f89d0000          LDRB     r0,[sp,#0]
00005a  2800              CMP      r0,#0
00005c  d17e              BNE      |L2.348|
;;;43     		{
;;;44     			freOBDLed = 500;                    //OBD 初始化成功
00005e  f44f70fa          MOV      r0,#0x1f4
000062  497a              LDR      r1,|L2.588|
000064  8008              STRH     r0,[r1,#0]
;;;45     			if(CAN1_RxMsg->Data[0] == 0x10)     //多包处理
000066  7ae0              LDRB     r0,[r4,#0xb]
000068  2810              CMP      r0,#0x10
00006a  d178              BNE      |L2.350|
;;;46     			{
;;;47     				ptrSaveBuff = Mem_malloc(CAN1_RxMsg->Data[1]+10);//申请的内存块足够长
00006c  7b21              LDRB     r1,[r4,#0xc]
00006e  f101000a          ADD      r0,r1,#0xa
000072  f7fffffe          BL       Mem_malloc
000076  4605              MOV      r5,r0
;;;48     				if(ptrSaveBuff != NULL)
000078  2d00              CMP      r5,#0
00007a  d071              BEQ      |L2.352|
;;;49     				{
;;;50     					ptrSaveBuff[0] = CAN1_RxMsg->Data[1] - cmdLen + 3;
00007c  7b20              LDRB     r0,[r4,#0xc]
00007e  1b80              SUBS     r0,r0,r6
000080  1cc0              ADDS     r0,r0,#3
000082  7028              STRB     r0,[r5,#0]
;;;51     					ptrSaveBuff[1] = 0x60;
000084  2060              MOVS     r0,#0x60
000086  7068              STRB     r0,[r5,#1]
;;;52     					ptrSaveBuff[2] = cmdNum;
000088  f8859002          STRB     r9,[r5,#2]
;;;53     					memcpy(&ptrSaveBuff[3],&CAN1_RxMsg->Data[cmdLen + 2],(6 - cmdLen));
00008c  f1c60206          RSB      r2,r6,#6
000090  f104000b          ADD      r0,r4,#0xb
000094  1cb3              ADDS     r3,r6,#2
000096  18c1              ADDS     r1,r0,r3
000098  1ce8              ADDS     r0,r5,#3
00009a  f7fffffe          BL       __aeabi_memcpy
;;;54     					cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6)%7 == 0? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
00009e  7b20              LDRB     r0,[r4,#0xc]
0000a0  1f80              SUBS     r0,r0,#6
0000a2  2107              MOVS     r1,#7
0000a4  fb90f2f1          SDIV     r2,r0,r1
0000a8  fb010012          MLS      r0,r1,r2,r0
0000ac  b920              CBNZ     r0,|L2.184|
0000ae  7b20              LDRB     r0,[r4,#0xc]
0000b0  1f80              SUBS     r0,r0,#6
0000b2  fb90f0f1          SDIV     r0,r0,r1
0000b6  e005              B        |L2.196|
                  |L2.184|
0000b8  7b20              LDRB     r0,[r4,#0xc]
0000ba  1f80              SUBS     r0,r0,#6
0000bc  2107              MOVS     r1,#7
0000be  fb90f0f1          SDIV     r0,r0,r1
0000c2  1c40              ADDS     r0,r0,#1
                  |L2.196|
0000c4  f0000aff          AND      r10,r0,#0xff
;;;55     					Mem_free(CAN1_RxMsg);
0000c8  4620              MOV      r0,r4
0000ca  f7fffffe          BL       Mem_free
;;;56     					
;;;57     					dataToSend.pdat = pidManyBag;//发送0x30 请求接下来的多包
0000ce  4860              LDR      r0,|L2.592|
0000d0  495c              LDR      r1,|L2.580|
0000d2  6088              STR      r0,[r1,#8]  ; dataToSend
;;;58     					OBD_CAN_SendData(dataToSend);
0000d4  4608              MOV      r0,r1
0000d6  c807              LDM      r0,{r0-r2}
0000d8  f7fffffe          BL       OBD_CAN_SendData
;;;59     					
;;;60     					for(i=0;i<cmdManyPackNum;i++)
0000dc  f04f0800          MOV      r8,#0
0000e0  e01d              B        |L2.286|
                  |L2.226|
;;;61     					{
;;;62     						CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);//接收多包
0000e2  466a              MOV      r2,sp
0000e4  2119              MOVS     r1,#0x19
0000e6  4858              LDR      r0,|L2.584|
0000e8  6800              LDR      r0,[r0,#0]  ; canRecieveQ
0000ea  f7fffffe          BL       OSQPend
0000ee  4604              MOV      r4,r0
;;;63     						if(err == OS_ERR_NONE)
0000f0  f89d0000          LDRB     r0,[sp,#0]
0000f4  b970              CBNZ     r0,|L2.276|
;;;64     						{
;;;65     							memcpy(&ptrSaveBuff[7*i + 9 - cmdLen],&CAN1_RxMsg->Data[1],7);
0000f6  ebc800c8          RSB      r0,r8,r8,LSL #3
0000fa  3009              ADDS     r0,r0,#9
0000fc  1b80              SUBS     r0,r0,r6
0000fe  1941              ADDS     r1,r0,r5
000100  68e2              LDR      r2,[r4,#0xc]
000102  600a              STR      r2,[r1,#0]
000104  8a22              LDRH     r2,[r4,#0x10]
000106  808a              STRH     r2,[r1,#4]
000108  7ca0              LDRB     r0,[r4,#0x12]
00010a  7188              STRB     r0,[r1,#6]
;;;66     							Mem_free(CAN1_RxMsg);
00010c  4620              MOV      r0,r4
00010e  f7fffffe          BL       Mem_free
000112  e000              B        |L2.278|
                  |L2.276|
;;;67     						}
;;;68     						else break;
000114  e005              B        |L2.290|
                  |L2.278|
000116  f1080001          ADD      r0,r8,#1              ;60
00011a  f00008ff          AND      r8,r0,#0xff           ;60
                  |L2.286|
00011e  45d0              CMP      r8,r10                ;60
000120  dbdf              BLT      |L2.226|
                  |L2.290|
000122  bf00              NOP      
;;;69     					}
;;;70     					if(i == cmdManyPackNum)
000124  45d0              CMP      r8,r10
000126  d120              BNE      |L2.362|
;;;71     					{
;;;72     						OSMutexPend(CDMASendMutex,0,&err);
000128  466a              MOV      r2,sp
00012a  2100              MOVS     r1,#0
00012c  4849              LDR      r0,|L2.596|
00012e  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000130  f7fffffe          BL       OSMutexPend
;;;73     						
;;;74     						memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],ptrSaveBuff,ptrSaveBuff[0]);
000134  4948              LDR      r1,|L2.600|
000136  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000138  6849              LDR      r1,[r1,#4]
00013a  4b47              LDR      r3,|L2.600|
00013c  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
00013e  881b              LDRH     r3,[r3,#0]
000140  18c8              ADDS     r0,r1,r3
000142  782a              LDRB     r2,[r5,#0]
000144  4629              MOV      r1,r5
000146  f7fffffe          BL       __aeabi_memcpy
;;;75     						cdmaDataToSend->datLength += ptrSaveBuff[0];
00014a  4843              LDR      r0,|L2.600|
00014c  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00014e  8800              LDRH     r0,[r0,#0]
000150  7829              LDRB     r1,[r5,#0]
000152  4408              ADD      r0,r0,r1
000154  4940              LDR      r1,|L2.600|
000156  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000158  8008              STRH     r0,[r1,#0]
;;;76     						
;;;77     						OSMutexPost(CDMASendMutex);
00015a  e002              B        |L2.354|
                  |L2.348|
00015c  e065              B        |L2.554|
                  |L2.350|
00015e  e008              B        |L2.370|
                  |L2.352|
000160  e069              B        |L2.566|
                  |L2.354|
000162  483c              LDR      r0,|L2.596|
000164  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000166  f7fffffe          BL       OSMutexPost
                  |L2.362|
;;;78     					}
;;;79     					Mem_free(ptrSaveBuff);
00016a  4628              MOV      r0,r5
00016c  f7fffffe          BL       Mem_free
000170  e061              B        |L2.566|
                  |L2.370|
;;;80     				}
;;;81     			}
;;;82     			else  //单包处理
;;;83     			{
;;;84     				OSMutexPend(CDMASendMutex,0,&err);
000172  466a              MOV      r2,sp
000174  2100              MOVS     r1,#0
000176  4837              LDR      r0,|L2.596|
000178  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00017a  f7fffffe          BL       OSMutexPend
;;;85     				
;;;86     				cdmaDataToSend->data[cdmaDataToSend->datLength++] = CAN1_RxMsg->Data[0] - cmdLen + 3;
00017e  7ae0              LDRB     r0,[r4,#0xb]
000180  1b80              SUBS     r0,r0,r6
000182  1cc0              ADDS     r0,r0,#3
000184  b2c1              UXTB     r1,r0
000186  4834              LDR      r0,|L2.600|
000188  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00018a  8802              LDRH     r2,[r0,#0]
00018c  4832              LDR      r0,|L2.600|
00018e  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000190  8800              LDRH     r0,[r0,#0]
000192  1c40              ADDS     r0,r0,#1
000194  4b30              LDR      r3,|L2.600|
000196  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
000198  8018              STRH     r0,[r3,#0]
00019a  482f              LDR      r0,|L2.600|
00019c  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00019e  6840              LDR      r0,[r0,#4]
0001a0  5481              STRB     r1,[r0,r2]
;;;87     				cdmaDataToSend->data[cdmaDataToSend->datLength++] = 0x60;
0001a2  2160              MOVS     r1,#0x60
0001a4  482c              LDR      r0,|L2.600|
0001a6  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001a8  8802              LDRH     r2,[r0,#0]
0001aa  482b              LDR      r0,|L2.600|
0001ac  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001ae  8800              LDRH     r0,[r0,#0]
0001b0  1c40              ADDS     r0,r0,#1
0001b2  4b29              LDR      r3,|L2.600|
0001b4  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0001b6  8018              STRH     r0,[r3,#0]
0001b8  4827              LDR      r0,|L2.600|
0001ba  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001bc  6840              LDR      r0,[r0,#4]
0001be  5481              STRB     r1,[r0,r2]
;;;88     				cdmaDataToSend->data[cdmaDataToSend->datLength++] = cmdNum;
0001c0  4825              LDR      r0,|L2.600|
0001c2  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001c4  8801              LDRH     r1,[r0,#0]
0001c6  4824              LDR      r0,|L2.600|
0001c8  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001ca  8800              LDRH     r0,[r0,#0]
0001cc  1c40              ADDS     r0,r0,#1
0001ce  4a22              LDR      r2,|L2.600|
0001d0  6812              LDR      r2,[r2,#0]  ; cdmaDataToSend
0001d2  8010              STRH     r0,[r2,#0]
0001d4  4820              LDR      r0,|L2.600|
0001d6  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001d8  6840              LDR      r0,[r0,#4]
0001da  f8009001          STRB     r9,[r0,r1]
;;;89     				memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],&CAN1_RxMsg->Data[cmdLen+1],(CAN1_RxMsg->Data[0] - cmdLen));
0001de  4b1e              LDR      r3,|L2.600|
0001e0  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0001e2  685b              LDR      r3,[r3,#4]
0001e4  f8dfc070          LDR      r12,|L2.600|
0001e8  f8dcc000          LDR      r12,[r12,#0]  ; cdmaDataToSend
0001ec  f8bcc000          LDRH     r12,[r12,#0]
0001f0  eb03000c          ADD      r0,r3,r12
0001f4  7ae3              LDRB     r3,[r4,#0xb]
0001f6  1b9a              SUBS     r2,r3,r6
0001f8  f104030b          ADD      r3,r4,#0xb
0001fc  f1060c01          ADD      r12,r6,#1
000200  eb03010c          ADD      r1,r3,r12
000204  f7fffffe          BL       __aeabi_memcpy
;;;90     				cdmaDataToSend->datLength += CAN1_RxMsg->Data[0] - cmdLen;
000208  4813              LDR      r0,|L2.600|
00020a  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00020c  8800              LDRH     r0,[r0,#0]
00020e  7ae1              LDRB     r1,[r4,#0xb]
000210  1b89              SUBS     r1,r1,r6
000212  4408              ADD      r0,r0,r1
000214  4910              LDR      r1,|L2.600|
000216  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000218  8008              STRH     r0,[r1,#0]
;;;91     	
;;;92     				OSMutexPost(CDMASendMutex);
00021a  480e              LDR      r0,|L2.596|
00021c  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00021e  f7fffffe          BL       OSMutexPost
;;;93     				
;;;94     				Mem_free(CAN1_RxMsg);
000222  4620              MOV      r0,r4
000224  f7fffffe          BL       Mem_free
000228  e005              B        |L2.566|
                  |L2.554|
;;;95     			}
;;;96     		}
;;;97     		else
;;;98     		{
;;;99     			OSTimeDlyHMSM(0,0,0,4);
00022a  2304              MOVS     r3,#4
00022c  2200              MOVS     r2,#0
00022e  4611              MOV      r1,r2
000230  4610              MOV      r0,r2
000232  f7fffffe          BL       OSTimeDlyHMSM
                  |L2.566|
;;;100    		}
;;;101    		Mem_free(can1_Txbuff);                 //释放内存块
000236  4638              MOV      r0,r7
000238  f7fffffe          BL       Mem_free
                  |L2.572|
00023c  e6f3              B        |L2.38|
;;;102    	}
;;;103    }
;;;104    
                          ENDP

00023e  0000              DCW      0x0000
                  |L2.576|
                          DCD      canSendQ
                  |L2.580|
                          DCD      dataToSend
                  |L2.584|
                          DCD      canRecieveQ
                  |L2.588|
                          DCD      freOBDLed
                  |L2.592|
                          DCD      pidManyBag
                  |L2.596|
                          DCD      CDMASendMutex
                  |L2.600|
                          DCD      cdmaDataToSend

                          AREA ||i.PIDVarGet||, CODE, READONLY, ALIGN=2

                  PIDVarGet PROC
;;;307    
;;;308    void PIDVarGet(uint8_t cmdId,uint8_t *ptrData)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;309    {
000004  4680              MOV      r8,r0
000006  460e              MOV      r6,r1
;;;310    	uint8_t  i; 
;;;311    	uint32_t saveDate;
;;;312    	uint8_t  saveLen = 0;
000008  2400              MOVS     r4,#0
;;;313    	uint32_t  temp = 0;
00000a  2700              MOVS     r7,#0
;;;314    	for(i = 0;i < varOperation.pidVarNum;i ++)
00000c  2500              MOVS     r5,#0
00000e  e0a5              B        |L3.348|
                  |L3.16|
;;;315    	{
;;;316    		if((ptrPIDVars + i)->pidId != cmdId)
000010  eb050085          ADD      r0,r5,r5,LSL #2
000014  eb0000c5          ADD      r0,r0,r5,LSL #3
000018  4954              LDR      r1,|L3.364|
00001a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00001c  5c08              LDRB     r0,[r1,r0]
00001e  4540              CMP      r0,r8
000020  d000              BEQ      |L3.36|
;;;317    			continue;
000022  e099              B        |L3.344|
                  |L3.36|
;;;318    		while(saveLen < (ptrPIDVars + i)->bitLen)
000024  e02c              B        |L3.128|
                  |L3.38|
;;;319    		{
;;;320    			if(saveLen < 8)
000026  2c08              CMP      r4,#8
000028  da04              BGE      |L3.52|
;;;321    				temp = ptrData[ptrPIDVars->startByte];
00002a  4850              LDR      r0,|L3.364|
00002c  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
00002e  7880              LDRB     r0,[r0,#2]
000030  5c37              LDRB     r7,[r6,r0]
000032  e01f              B        |L3.116|
                  |L3.52|
;;;322    			else if(saveLen >= 8 && saveLen < 16)
000034  2c08              CMP      r4,#8
000036  db08              BLT      |L3.74|
000038  2c10              CMP      r4,#0x10
00003a  da06              BGE      |L3.74|
;;;323    			{
;;;324    				temp = ptrData[ptrPIDVars->startByte + 1];
00003c  484b              LDR      r0,|L3.364|
00003e  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
000040  7880              LDRB     r0,[r0,#2]
000042  1c40              ADDS     r0,r0,#1
000044  5c37              LDRB     r7,[r6,r0]
;;;325    				temp <<= 8;
000046  023f              LSLS     r7,r7,#8
000048  e014              B        |L3.116|
                  |L3.74|
;;;326    			}else if(saveLen >= 16 && saveLen < 24)
00004a  2c10              CMP      r4,#0x10
00004c  db08              BLT      |L3.96|
00004e  2c18              CMP      r4,#0x18
000050  da06              BGE      |L3.96|
;;;327    			{
;;;328    				temp = ptrData[ptrPIDVars->startByte + 2];
000052  4846              LDR      r0,|L3.364|
000054  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
000056  7880              LDRB     r0,[r0,#2]
000058  1c80              ADDS     r0,r0,#2
00005a  5c37              LDRB     r7,[r6,r0]
;;;329    				temp <<= 16;
00005c  043f              LSLS     r7,r7,#16
00005e  e009              B        |L3.116|
                  |L3.96|
;;;330    			}else if(saveLen >= 24 && saveLen < 32)
000060  2c18              CMP      r4,#0x18
000062  db07              BLT      |L3.116|
000064  2c20              CMP      r4,#0x20
000066  da05              BGE      |L3.116|
;;;331    			{
;;;332    				temp = ptrData[ptrPIDVars->startByte + 3];
000068  4840              LDR      r0,|L3.364|
00006a  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
00006c  7880              LDRB     r0,[r0,#2]
00006e  1cc0              ADDS     r0,r0,#3
000070  5c37              LDRB     r7,[r6,r0]
;;;333    				temp <<= 24;
000072  063f              LSLS     r7,r7,#24
                  |L3.116|
;;;334    			}
;;;335    			saveDate += temp & (0x00000001 << saveLen);
000074  2001              MOVS     r0,#1
000076  40a0              LSLS     r0,r0,r4
000078  4038              ANDS     r0,r0,r7
00007a  4481              ADD      r9,r9,r0
;;;336    			saveLen ++;
00007c  1c60              ADDS     r0,r4,#1
00007e  b2c4              UXTB     r4,r0
                  |L3.128|
000080  eb050085          ADD      r0,r5,r5,LSL #2       ;318
000084  eb0000c5          ADD      r0,r0,r5,LSL #3       ;318
000088  4938              LDR      r1,|L3.364|
00008a  6809              LDR      r1,[r1,#0]            ;318  ; ptrPIDVars
00008c  4408              ADD      r0,r0,r1              ;318
00008e  7900              LDRB     r0,[r0,#4]            ;318
000090  42a0              CMP      r0,r4                 ;318
000092  dcc8              BGT      |L3.38|
;;;337    		}
;;;338    		
;;;339    		//1-车速 2-发动机转速 3-总喷油量 4-主喷油量 5-预喷油量 6-后喷油量 7-当前喷油量
;;;340    		switch((ptrPIDVars + i)->varId)
000094  eb050085          ADD      r0,r5,r5,LSL #2
000098  eb0000c5          ADD      r0,r0,r5,LSL #3
00009c  4933              LDR      r1,|L3.364|
00009e  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0000a0  4408              ADD      r0,r0,r1
0000a2  7840              LDRB     r0,[r0,#1]
0000a4  2808              CMP      r0,#8
0000a6  d254              BCS      |L3.338|
0000a8  e8dff000          TBB      [pc,r0]
0000ac  5304274e          DCB      0x53,0x04,0x27,0x4e
0000b0  4f505152          DCB      0x4f,0x50,0x51,0x52
;;;341    		{
;;;342    			case 1://计算车速
;;;343    				carStateVar.carSpeed = saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset;
0000b4  eb050185          ADD      r1,r5,r5,LSL #2
0000b8  eb0101c5          ADD      r1,r1,r5,LSL #3
0000bc  4a2b              LDR      r2,|L3.364|
0000be  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0000c0  4411              ADD      r1,r1,r2
0000c2  f8d10009          LDR      r0,[r1,#9]
0000c6  f7fffffe          BL       __aeabi_i2f
0000ca  4683              MOV      r11,r0
0000cc  4648              MOV      r0,r9
0000ce  f7fffffe          BL       __aeabi_ui2f
0000d2  9000              STR      r0,[sp,#0]
0000d4  eb050085          ADD      r0,r5,r5,LSL #2
0000d8  eb0000c5          ADD      r0,r0,r5,LSL #3
0000dc  4a23              LDR      r2,|L3.364|
0000de  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0000e0  4410              ADD      r0,r0,r2
0000e2  f8d01005          LDR      r1,[r0,#5]
0000e6  9800              LDR      r0,[sp,#0]
0000e8  f7fffffe          BL       __aeabi_fmul
0000ec  4682              MOV      r10,r0
0000ee  4659              MOV      r1,r11
0000f0  f7fffffe          BL       __aeabi_fadd
0000f4  491e              LDR      r1,|L3.368|
0000f6  6008              STR      r0,[r1,#0]  ; carStateVar
;;;344    				break;
0000f8  e02c              B        |L3.340|
;;;345    			case 2://转速
;;;346    				if(carStateVar.engineSpeedTemp != 1)
0000fa  481d              LDR      r0,|L3.368|
0000fc  7b00              LDRB     r0,[r0,#0xc]  ; carStateVar
0000fe  2801              CMP      r0,#1
000100  d021              BEQ      |L3.326|
;;;347    				carStateVar.engineSpeed = saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset;
000102  eb050185          ADD      r1,r5,r5,LSL #2
000106  eb0101c5          ADD      r1,r1,r5,LSL #3
00010a  4a18              LDR      r2,|L3.364|
00010c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00010e  4411              ADD      r1,r1,r2
000110  f8d10009          LDR      r0,[r1,#9]
000114  f7fffffe          BL       __aeabi_i2f
000118  9000              STR      r0,[sp,#0]
00011a  4648              MOV      r0,r9
00011c  f7fffffe          BL       __aeabi_ui2f
000120  4683              MOV      r11,r0
000122  eb050085          ADD      r0,r5,r5,LSL #2
000126  eb0000c5          ADD      r0,r0,r5,LSL #3
00012a  4a10              LDR      r2,|L3.364|
00012c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00012e  4410              ADD      r0,r0,r2
000130  f8d01005          LDR      r1,[r0,#5]
000134  4658              MOV      r0,r11
000136  f7fffffe          BL       __aeabi_fmul
00013a  4682              MOV      r10,r0
00013c  9900              LDR      r1,[sp,#0]
00013e  f7fffffe          BL       __aeabi_fadd
000142  490b              LDR      r1,|L3.368|
000144  6088              STR      r0,[r1,#8]  ; carStateVar
                  |L3.326|
;;;348    				break;
000146  e005              B        |L3.340|
;;;349    			case 3:break;
000148  e004              B        |L3.340|
;;;350    			case 4:break;
00014a  e003              B        |L3.340|
;;;351    			case 5:break;
00014c  e002              B        |L3.340|
;;;352    			case 6:break;
00014e  e001              B        |L3.340|
;;;353    			case 7:break;
000150  e000              B        |L3.340|
                  |L3.338|
;;;354    			default:break;
000152  bf00              NOP      
                  |L3.340|
000154  bf00              NOP                            ;344
000156  bf00              NOP                            ;317
                  |L3.344|
000158  1c68              ADDS     r0,r5,#1              ;314
00015a  b2c5              UXTB     r5,r0                 ;314
                  |L3.348|
00015c  4805              LDR      r0,|L3.372|
00015e  f8b0006f          LDRH     r0,[r0,#0x6f]         ;314  ; varOperation
000162  42a8              CMP      r0,r5                 ;314
000164  f73faf54          BGT      |L3.16|
;;;355    		}
;;;356    	}
;;;357    }
000168  e8bd8ff8          POP      {r3-r11,pc}
;;;358    
                          ENDP

                  |L3.364|
                          DCD      ptrPIDVars
                  |L3.368|
                          DCD      carStateVar
                  |L3.372|
                          DCD      varOperation

                          AREA ||i.TestServer||, CODE, READONLY, ALIGN=2

                  TestServer PROC
;;;105    extern uint8_t configData[2048];
;;;106    void TestServer(void)
000000  b510              PUSH     {r4,lr}
;;;107    {
000002  b08a              SUB      sp,sp,#0x28
;;;108    	uint8_t err;
;;;109    	CanRxMsg* CAN1_RxMsg;
;;;110    	CanTxMsg CAN1_TxMsg;
;;;111    	CAN_InitTypeDef   CAN_InitStructure;
;;;112    	OSSemPend(LoginMes,0,&err);
000004  aa09              ADD      r2,sp,#0x24
000006  2100              MOVS     r1,#0
000008  484a              LDR      r0,|L4.308|
00000a  6800              LDR      r0,[r0,#0]  ; LoginMes
00000c  f7fffffe          BL       OSSemPend
;;;113    	
;;;114    	if(varOperation.ecuVersion == 0)
000010  4849              LDR      r0,|L4.312|
000012  f8d00066          LDR      r0,[r0,#0x66]  ; varOperation
000016  b948              CBNZ     r0,|L4.44|
;;;115    	{
;;;116    		LogReport("01 - ECU Version %d,Need Config.",sysUpdateVar.ecuVersion);
000018  4848              LDR      r0,|L4.316|
00001a  f8d01009          LDR      r1,[r0,#9]  ; sysUpdateVar
00001e  a048              ADR      r0,|L4.320|
000020  f7fffffe          BL       LogReport
;;;117    		CANTestChannel();
000024  f7fffffe          BL       CANTestChannel
                  |L4.40|
;;;118    		return	;
;;;119    	}		
;;;120    	
;;;121    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能CAN1时钟
;;;122    	
;;;123    	CAN_DeInit(CAN1);  
;;;124    	CAN_StructInit(&CAN_InitStructure);
;;;125    	//先用flash中的CAN配置进行测试
;;;126    	CAN1_BaudSet(sysUpdateVar.canBaud);
;;;127    	
;;;128    	CAN1_SetFilter(sysUpdateVar.canRxId,sysUpdateVar.canIdType);
;;;129    	CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
;;;130    	
;;;131    	CAN1_TxMsg.IDE     = sysUpdateVar.canIdType;
;;;132    	CAN1_TxMsg.StdId   = sysUpdateVar.canTxId ;
;;;133    	CAN1_TxMsg.ExtId   = sysUpdateVar.canTxId ;
;;;134    	CAN1_TxMsg.DLC     = 0x08;
;;;135    	
;;;136    	CAN1_TxMsg.Data[0] = configData[5];CAN1_TxMsg.Data[1] = configData[6];CAN1_TxMsg.Data[2] = configData[7];//todo:测试报文PID是什么？
;;;137    	CAN1_TxMsg.Data[3] = configData[8];CAN1_TxMsg.Data[4] = configData[9];CAN1_TxMsg.Data[5] = configData[10];
;;;138    	CAN1_TxMsg.Data[6] = configData[11];CAN1_TxMsg.Data[7] = configData[12];
;;;139    	CAN_Transmit(CAN1,&CAN1_TxMsg);
;;;140    	CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
;;;141    	if(err ==OS_ERR_NONE)
;;;142    	{
;;;143    		dataToSend.ide = sysUpdateVar.canIdType;
;;;144    		dataToSend.canId   = sysUpdateVar.canTxId;
;;;145    		Mem_free(CAN1_RxMsg);
;;;146    		LogReport("01 - ECU Version %d test Success.",sysUpdateVar.ecuVersion);
;;;147    		varOperation.canTest = 2;//Flash中的CAN配置成功
;;;148    		
;;;149    		CAN_DeInit(CAN1);  
;;;150    		CAN_StructInit(&CAN_InitStructure);
;;;151    		//先用flash中的CAN配置进行测试
;;;152    		CAN1_BaudSet(sysUpdateVar.canBaud);
;;;153    		
;;;154    		CAN1_ClearFilter();  //清除滤波器，进入侦听模式，接收一切CAN消息
;;;155    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
;;;156    		//todo:进入正常程序
;;;157    	}
;;;158    	else
;;;159    	{
;;;160    		LogReport("ECU Version %d test Error!",sysUpdateVar.ecuVersion);
;;;161    		CANTestChannel();
;;;162    	}
;;;163    		
;;;164    }
000028  b00a              ADD      sp,sp,#0x28
00002a  bd10              POP      {r4,pc}
                  |L4.44|
00002c  2101              MOVS     r1,#1                 ;121
00002e  0648              LSLS     r0,r1,#25             ;121
000030  f7fffffe          BL       RCC_APB1PeriphClockCmd
000034  484b              LDR      r0,|L4.356|
000036  f7fffffe          BL       CAN_DeInit
00003a  a801              ADD      r0,sp,#4              ;124
00003c  f7fffffe          BL       CAN_StructInit
000040  493e              LDR      r1,|L4.316|
000042  7ec8              LDRB     r0,[r1,#0x1b]         ;126  ; sysUpdateVar
000044  f7fffffe          BL       CAN1_BaudSet
000048  4a3c              LDR      r2,|L4.316|
00004a  7c91              LDRB     r1,[r2,#0x12]         ;128  ; sysUpdateVar
00004c  f8d20017          LDR      r0,[r2,#0x17]         ;128  ; sysUpdateVar
000050  f7fffffe          BL       CAN1_SetFilter
000054  2201              MOVS     r2,#1                 ;129
000056  2110              MOVS     r1,#0x10              ;129
000058  4842              LDR      r0,|L4.356|
00005a  f7fffffe          BL       CAN_ITConfig
00005e  4837              LDR      r0,|L4.316|
000060  7c80              LDRB     r0,[r0,#0x12]         ;131  ; sysUpdateVar
000062  f88d0018          STRB     r0,[sp,#0x18]         ;131
000066  4835              LDR      r0,|L4.316|
000068  f8d00013          LDR      r0,[r0,#0x13]         ;132  ; sysUpdateVar
00006c  9004              STR      r0,[sp,#0x10]         ;132
00006e  4833              LDR      r0,|L4.316|
000070  f8d00013          LDR      r0,[r0,#0x13]         ;133  ; sysUpdateVar
000074  9005              STR      r0,[sp,#0x14]         ;133
000076  2008              MOVS     r0,#8                 ;134
000078  f88d001a          STRB     r0,[sp,#0x1a]         ;134
00007c  483a              LDR      r0,|L4.360|
00007e  7940              LDRB     r0,[r0,#5]            ;136  ; configData
000080  f88d001b          STRB     r0,[sp,#0x1b]         ;136
000084  4838              LDR      r0,|L4.360|
000086  7981              LDRB     r1,[r0,#6]            ;136  ; configData
000088  f88d101c          STRB     r1,[sp,#0x1c]         ;136
00008c  79c1              LDRB     r1,[r0,#7]            ;136  ; configData
00008e  f88d101d          STRB     r1,[sp,#0x1d]         ;136
000092  7a01              LDRB     r1,[r0,#8]            ;137  ; configData
000094  f88d101e          STRB     r1,[sp,#0x1e]         ;137
000098  7a41              LDRB     r1,[r0,#9]            ;137  ; configData
00009a  f88d101f          STRB     r1,[sp,#0x1f]         ;137
00009e  7a81              LDRB     r1,[r0,#0xa]          ;137  ; configData
0000a0  a804              ADD      r0,sp,#0x10           ;137
0000a2  7401              STRB     r1,[r0,#0x10]         ;137
0000a4  4830              LDR      r0,|L4.360|
0000a6  7ac1              LDRB     r1,[r0,#0xb]          ;138  ; configData
0000a8  a804              ADD      r0,sp,#0x10           ;138
0000aa  7441              STRB     r1,[r0,#0x11]         ;138
0000ac  482e              LDR      r0,|L4.360|
0000ae  7b01              LDRB     r1,[r0,#0xc]          ;138  ; configData
0000b0  a804              ADD      r0,sp,#0x10           ;138
0000b2  7481              STRB     r1,[r0,#0x12]         ;138
0000b4  a904              ADD      r1,sp,#0x10           ;139
0000b6  482b              LDR      r0,|L4.356|
0000b8  f7fffffe          BL       CAN_Transmit
0000bc  aa09              ADD      r2,sp,#0x24           ;140
0000be  f44f71fa          MOV      r1,#0x1f4             ;140
0000c2  482a              LDR      r0,|L4.364|
0000c4  6800              LDR      r0,[r0,#0]            ;140  ; canRecieveQ
0000c6  f7fffffe          BL       OSQPend
0000ca  4604              MOV      r4,r0                 ;140
0000cc  f89d0024          LDRB     r0,[sp,#0x24]         ;141
0000d0  bb30              CBNZ     r0,|L4.288|
0000d2  481a              LDR      r0,|L4.316|
0000d4  7c80              LDRB     r0,[r0,#0x12]         ;143  ; sysUpdateVar
0000d6  4926              LDR      r1,|L4.368|
0000d8  6048              STR      r0,[r1,#4]            ;143  ; dataToSend
0000da  4818              LDR      r0,|L4.316|
0000dc  f8d00013          LDR      r0,[r0,#0x13]         ;144  ; sysUpdateVar
0000e0  6008              STR      r0,[r1,#0]            ;144  ; dataToSend
0000e2  4620              MOV      r0,r4                 ;145
0000e4  f7fffffe          BL       Mem_free
0000e8  4814              LDR      r0,|L4.316|
0000ea  f8d01009          LDR      r1,[r0,#9]            ;146  ; sysUpdateVar
0000ee  a021              ADR      r0,|L4.372|
0000f0  f7fffffe          BL       LogReport
0000f4  2002              MOVS     r0,#2                 ;147
0000f6  4910              LDR      r1,|L4.312|
0000f8  f8a1007c          STRH     r0,[r1,#0x7c]         ;147
0000fc  4819              LDR      r0,|L4.356|
0000fe  f7fffffe          BL       CAN_DeInit
000102  a801              ADD      r0,sp,#4              ;150
000104  f7fffffe          BL       CAN_StructInit
000108  490c              LDR      r1,|L4.316|
00010a  7ec8              LDRB     r0,[r1,#0x1b]         ;152  ; sysUpdateVar
00010c  f7fffffe          BL       CAN1_BaudSet
000110  f7fffffe          BL       CAN1_ClearFilter
000114  2201              MOVS     r2,#1                 ;155
000116  2110              MOVS     r1,#0x10              ;155
000118  4812              LDR      r0,|L4.356|
00011a  f7fffffe          BL       CAN_ITConfig
00011e  e007              B        |L4.304|
                  |L4.288|
000120  4806              LDR      r0,|L4.316|
000122  f8d01009          LDR      r1,[r0,#9]            ;160  ; sysUpdateVar
000126  a01c              ADR      r0,|L4.408|
000128  f7fffffe          BL       LogReport
00012c  f7fffffe          BL       CANTestChannel
                  |L4.304|
000130  bf00              NOP      
000132  e779              B        |L4.40|
;;;165    
                          ENDP

                  |L4.308|
                          DCD      LoginMes
                  |L4.312|
                          DCD      varOperation
                  |L4.316|
                          DCD      sysUpdateVar
                  |L4.320|
000140  3031202d          DCB      "01 - ECU Version %d,Need Config.",0
000144  20454355
000148  20566572
00014c  73696f6e
000150  2025642c
000154  4e656564
000158  20436f6e
00015c  6669672e
000160  00      
000161  00                DCB      0
000162  00                DCB      0
000163  00                DCB      0
                  |L4.356|
                          DCD      0x40006400
                  |L4.360|
                          DCD      configData
                  |L4.364|
                          DCD      canRecieveQ
                  |L4.368|
                          DCD      dataToSend
                  |L4.372|
000174  3031202d          DCB      "01 - ECU Version %d test Success.",0
000178  20454355
00017c  20566572
000180  73696f6e
000184  20256420
000188  74657374
00018c  20537563
000190  63657373
000194  2e00    
000196  00                DCB      0
000197  00                DCB      0
                  |L4.408|
000198  45435520          DCB      "ECU Version %d test Error!",0
00019c  56657273
0001a0  696f6e20
0001a4  25642074
0001a8  65737420
0001ac  4572726f
0001b0  722100  
0001b3  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  dataToSend
                          %        12

                          AREA ||.data||, DATA, ALIGN=0

                  pidManyBag
000000  30000000          DCB      0x30,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\OBD\\OBDTask.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_OBDTask_c_bbcd6d9f____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REVSH|
#line 144
|__asm___9_OBDTask_c_bbcd6d9f____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
