; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\obd_on_off.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\obd_on_off.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\obd_on_off.crf ..\OBD\OBD_ON_OFF.c]
                          THUMB

                          AREA ||i.CANTestChannel||, CODE, READONLY, ALIGN=2

                  CANTestChannel PROC
;;;135    extern const CmdVersion canIdExt[5];
;;;136    void CANTestChannel(void)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;137    {
;;;138    	uint8_t   err,i,temp = 0;
000004  2600              MOVS     r6,#0
;;;139    	CanRxMsg* CAN1_RxMsg;
;;;140    	uint8_t*  ptrOK;
;;;141    	CAN_InitTypeDef CAN_InitStructure;
;;;142    	
;;;143    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能 CAN1 时钟
000006  2101              MOVS     r1,#1
000008  0648              LSLS     r0,r1,#25
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;144    
;;;145    	TestStart:
00000e  bf00              NOP      
                  |L1.16|
;;;146    	CAN_DeInit(CAN1);
000010  48dd              LDR      r0,|L1.904|
000012  f7fffffe          BL       CAN_DeInit
;;;147    	CAN_StructInit(&CAN_InitStructure);
000016  4668              MOV      r0,sp
000018  f7fffffe          BL       CAN_StructInit
;;;148    	CAN1_BaudSet(CANBAUD_250K); 
00001c  2001              MOVS     r0,#1
00001e  f7fffffe          BL       CAN1_BaudSet
;;;149    	CAN1_ClearFilter();
000022  f7fffffe          BL       CAN1_ClearFilter
;;;150    	CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
000026  2201              MOVS     r2,#1
000028  2110              MOVS     r1,#0x10
00002a  48d7              LDR      r0,|L1.904|
00002c  f7fffffe          BL       CAN_ITConfig
;;;151    		
;;;152    	//只要此波特率下有J1939数据，CAN 波特率就确定了
;;;153    	CAN1_RxMsg = OSQPend(canJ1939Q,500,&err);
000030  aa03              ADD      r2,sp,#0xc
000032  f44f71fa          MOV      r1,#0x1f4
000036  48d5              LDR      r0,|L1.908|
000038  6800              LDR      r0,[r0,#0]  ; canJ1939Q
00003a  f7fffffe          BL       OSQPend
00003e  4607              MOV      r7,r0
;;;154    	if(err == OS_ERR_NONE)  //14230协议，250K，J1939有数据
000040  f89d000c          LDRB     r0,[sp,#0xc]
000044  2800              CMP      r0,#0
000046  d15c              BNE      |L1.258|
;;;155    	{
;;;156    		canDataConfig.canBaud = CANBAUD_250K;
000048  2001              MOVS     r0,#1
00004a  49d1              LDR      r1,|L1.912|
00004c  7488              STRB     r0,[r1,#0x12]
;;;157    		Mem_free(CAN1_RxMsg);
00004e  4638              MOV      r0,r7
000050  f7fffffe          BL       Mem_free
;;;158    		LogReport("\r\n10-Test Baud:%d;",canDataConfig.canBaud);
000054  48ce              LDR      r0,|L1.912|
000056  7c81              LDRB     r1,[r0,#0x12]  ; canDataConfig
000058  a0ce              ADR      r0,|L1.916|
00005a  f7fffffe          BL       LogReport
;;;159    		for(i = 0;i < 3;i ++)//模式1的时候，一共有3个CANID
00005e  2400              MOVS     r4,#0
000060  e04c              B        |L1.252|
                  |L1.98|
;;;160    		{
;;;161    			varOperation.canRxId  =(canIdExt[i].canID >> 24) & 0x000000FF;
000062  eb040044          ADD      r0,r4,r4,LSL #1
000066  49d0              LDR      r1,|L1.936|
000068  f8510020          LDR      r0,[r1,r0,LSL #2]
00006c  0e00              LSRS     r0,r0,#24
00006e  49cf              LDR      r1,|L1.940|
000070  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;162    			varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i].canID >> 16) & 0x000000FF);
000074  eb040044          ADD      r0,r4,r4,LSL #1
000078  49cb              LDR      r1,|L1.936|
00007a  f8510020          LDR      r0,[r1,r0,LSL #2]
00007e  f3c04007          UBFX     r0,r0,#16,#8
000082  49ca              LDR      r1,|L1.940|
000084  f8d1108c          LDR      r1,[r1,#0x8c]  ; varOperation
000088  eb002001          ADD      r0,r0,r1,LSL #8
00008c  49c7              LDR      r1,|L1.940|
00008e  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;163    			varOperation.canRxId  =(varOperation.canRxId  << 8)+(canIdExt[i].canID & 0x000000FF);
000092  4608              MOV      r0,r1
000094  f8d0108c          LDR      r1,[r0,#0x8c]  ; varOperation
000098  eb040044          ADD      r0,r4,r4,LSL #1
00009c  4ac2              LDR      r2,|L1.936|
00009e  f8520020          LDR      r0,[r2,r0,LSL #2]
0000a2  f361201f          BFI      r0,r1,#8,#24
0000a6  49c1              LDR      r1,|L1.940|
0000a8  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;164    			varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i].canID >> 8) & 0x000000FF);
0000ac  eb040044          ADD      r0,r4,r4,LSL #1
0000b0  4611              MOV      r1,r2
0000b2  f8310020          LDRH     r0,[r1,r0,LSL #2]
0000b6  f3c02007          UBFX     r0,r0,#8,#8
0000ba  49bc              LDR      r1,|L1.940|
0000bc  f8d1108c          LDR      r1,[r1,#0x8c]  ; varOperation
0000c0  eb002001          ADD      r0,r0,r1,LSL #8
0000c4  49b9              LDR      r1,|L1.940|
0000c6  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;165    			
;;;166    			dataToSend.canId = canIdExt[i].canID;
0000ca  eb040044          ADD      r0,r4,r4,LSL #1
0000ce  4611              MOV      r1,r2
0000d0  f8510020          LDR      r0,[r1,r0,LSL #2]
0000d4  49b6              LDR      r1,|L1.944|
0000d6  6008              STR      r0,[r1,#0]  ; dataToSend
;;;167    			dataToSend.ide     = CAN_ID_EXT;
0000d8  2004              MOVS     r0,#4
0000da  6048              STR      r0,[r1,#4]  ; dataToSend
;;;168    			temp = ReadECUVersion((uint8_t *)canIdExt[i].pidVerCmd); 
0000dc  eb040144          ADD      r1,r4,r4,LSL #1
0000e0  eb020181          ADD      r1,r2,r1,LSL #2
0000e4  1d08              ADDS     r0,r1,#4
0000e6  f7fffffe          BL       ReadECUVersion
0000ea  4606              MOV      r6,r0
;;;169    			if(temp < 200)
0000ec  2ec8              CMP      r6,#0xc8
0000ee  da00              BGE      |L1.242|
;;;170    				goto TestSuccess;
0000f0  e069              B        |L1.454|
                  |L1.242|
;;;171    			else if(i == 2)
0000f2  2c02              CMP      r4,#2
0000f4  d100              BNE      |L1.248|
;;;172    				goto TestError;
0000f6  e0fb              B        |L1.752|
                  |L1.248|
0000f8  1c60              ADDS     r0,r4,#1              ;159
0000fa  b2c4              UXTB     r4,r0                 ;159
                  |L1.252|
0000fc  2c03              CMP      r4,#3                 ;159
0000fe  dbb0              BLT      |L1.98|
000100  e060              B        |L1.452|
                  |L1.258|
;;;173    		}
;;;174    	}
;;;175    	else   // 14229 协议， J1939 没数据
;;;176    	{
;;;177    		CAN_DeInit(CAN1);
000102  48a1              LDR      r0,|L1.904|
000104  f7fffffe          BL       CAN_DeInit
;;;178    		CAN_StructInit(&CAN_InitStructure);
000108  4668              MOV      r0,sp
00010a  f7fffffe          BL       CAN_StructInit
;;;179    		CAN1_BaudSet(CANBAUD_500K); 
00010e  2002              MOVS     r0,#2
000110  f7fffffe          BL       CAN1_BaudSet
;;;180    		CAN1_ClearFilter();
000114  f7fffffe          BL       CAN1_ClearFilter
;;;181    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
000118  2201              MOVS     r2,#1
00011a  2110              MOVS     r1,#0x10
00011c  489a              LDR      r0,|L1.904|
00011e  f7fffffe          BL       CAN_ITConfig
;;;182    		for(i = 3;i < 5;i ++)//模式1的时候，一共有3个CANID
000122  2403              MOVS     r4,#3
000124  e04c              B        |L1.448|
                  |L1.294|
;;;183    		{
;;;184    			varOperation.canRxId  =(canIdExt[i].canID >> 24) & 0x000000FF;
000126  eb040044          ADD      r0,r4,r4,LSL #1
00012a  499f              LDR      r1,|L1.936|
00012c  f8510020          LDR      r0,[r1,r0,LSL #2]
000130  0e00              LSRS     r0,r0,#24
000132  499e              LDR      r1,|L1.940|
000134  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;185    			varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i].canID >> 16) & 0x000000FF);
000138  eb040044          ADD      r0,r4,r4,LSL #1
00013c  499a              LDR      r1,|L1.936|
00013e  f8510020          LDR      r0,[r1,r0,LSL #2]
000142  f3c04007          UBFX     r0,r0,#16,#8
000146  4999              LDR      r1,|L1.940|
000148  f8d1108c          LDR      r1,[r1,#0x8c]  ; varOperation
00014c  eb002001          ADD      r0,r0,r1,LSL #8
000150  4996              LDR      r1,|L1.940|
000152  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;186    			varOperation.canRxId  =(varOperation.canRxId  << 8)+(canIdExt[i].canID & 0x000000FF);
000156  4608              MOV      r0,r1
000158  f8d0108c          LDR      r1,[r0,#0x8c]  ; varOperation
00015c  eb040044          ADD      r0,r4,r4,LSL #1
000160  4a91              LDR      r2,|L1.936|
000162  f8520020          LDR      r0,[r2,r0,LSL #2]
000166  f361201f          BFI      r0,r1,#8,#24
00016a  4990              LDR      r1,|L1.940|
00016c  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;187    			varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i].canID >> 8) & 0x000000FF);
000170  eb040044          ADD      r0,r4,r4,LSL #1
000174  4611              MOV      r1,r2
000176  f8310020          LDRH     r0,[r1,r0,LSL #2]
00017a  f3c02007          UBFX     r0,r0,#8,#8
00017e  498b              LDR      r1,|L1.940|
000180  f8d1108c          LDR      r1,[r1,#0x8c]  ; varOperation
000184  eb002001          ADD      r0,r0,r1,LSL #8
000188  4988              LDR      r1,|L1.940|
00018a  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;188    			
;;;189    			dataToSend.canId = canIdExt[i].canID;
00018e  eb040044          ADD      r0,r4,r4,LSL #1
000192  4611              MOV      r1,r2
000194  f8510020          LDR      r0,[r1,r0,LSL #2]
000198  4985              LDR      r1,|L1.944|
00019a  6008              STR      r0,[r1,#0]  ; dataToSend
;;;190    			dataToSend.ide     = CAN_ID_EXT;
00019c  2004              MOVS     r0,#4
00019e  6048              STR      r0,[r1,#4]  ; dataToSend
;;;191    			temp = ReadECUVersion((uint8_t *)canIdExt[i].pidVerCmd);
0001a0  eb040144          ADD      r1,r4,r4,LSL #1
0001a4  eb020181          ADD      r1,r2,r1,LSL #2
0001a8  1d08              ADDS     r0,r1,#4
0001aa  f7fffffe          BL       ReadECUVersion
0001ae  4606              MOV      r6,r0
;;;192    			if(temp < 200)
0001b0  2ec8              CMP      r6,#0xc8
0001b2  da00              BGE      |L1.438|
;;;193    				goto TestSuccess;
0001b4  e007              B        |L1.454|
                  |L1.438|
;;;194    			else if(i == 4)
0001b6  2c04              CMP      r4,#4
0001b8  d100              BNE      |L1.444|
;;;195    				goto TestError;
0001ba  e099              B        |L1.752|
                  |L1.444|
0001bc  1c60              ADDS     r0,r4,#1              ;182
0001be  b2c4              UXTB     r4,r0                 ;182
                  |L1.448|
0001c0  2c05              CMP      r4,#5                 ;182
0001c2  dbb0              BLT      |L1.294|
                  |L1.452|
;;;196    		}
;;;197    	}
;;;198    TestSuccess:	
0001c4  bf00              NOP      
                  |L1.454|
;;;199    	ptrOK = Mem_malloc(60);
0001c6  203c              MOVS     r0,#0x3c
0001c8  f7fffffe          BL       Mem_malloc
0001cc  4605              MOV      r5,r0
;;;200    	ptrOK[i++] = 32;
0001ce  2220              MOVS     r2,#0x20
0001d0  4620              MOV      r0,r4
0001d2  1c61              ADDS     r1,r4,#1
0001d4  b2cc              UXTB     r4,r1
0001d6  542a              STRB     r2,[r5,r0]
;;;201    	ptrOK[i++] = 0x50;
0001d8  2250              MOVS     r2,#0x50
0001da  4620              MOV      r0,r4
0001dc  1c61              ADDS     r1,r4,#1
0001de  b2cc              UXTB     r4,r1
0001e0  542a              STRB     r2,[r5,r0]
;;;202    	ptrOK[i++] = 0x13;
0001e2  2213              MOVS     r2,#0x13
0001e4  4620              MOV      r0,r4
0001e6  1c61              ADDS     r1,r4,#1
0001e8  b2cc              UXTB     r4,r1
0001ea  542a              STRB     r2,[r5,r0]
;;;203    	ptrOK[i++] = canDataConfig.canBaud;
0001ec  4868              LDR      r0,|L1.912|
0001ee  7c82              LDRB     r2,[r0,#0x12]  ; canDataConfig
0001f0  4620              MOV      r0,r4
0001f2  1c61              ADDS     r1,r4,#1
0001f4  b2cc              UXTB     r4,r1
0001f6  542a              STRB     r2,[r5,r0]
;;;204    	ptrOK[i++] = (varOperation.canRxId>>24) & 0x000000FF;ptrOK[i++] = (varOperation.canRxId>>16) & 0x000000FF;
0001f8  486c              LDR      r0,|L1.940|
0001fa  f8d0008c          LDR      r0,[r0,#0x8c]  ; varOperation
0001fe  0e00              LSRS     r0,r0,#24
000200  4621              MOV      r1,r4
000202  1c62              ADDS     r2,r4,#1
000204  b2d4              UXTB     r4,r2
000206  5468              STRB     r0,[r5,r1]
000208  4868              LDR      r0,|L1.940|
00020a  f8d0008c          LDR      r0,[r0,#0x8c]  ; varOperation
00020e  f3c04207          UBFX     r2,r0,#16,#8
000212  4620              MOV      r0,r4
000214  1c61              ADDS     r1,r4,#1
000216  b2cc              UXTB     r4,r1
000218  542a              STRB     r2,[r5,r0]
;;;205    	ptrOK[i++] = (varOperation.canRxId>>8) & 0x000000FF;ptrOK[i++] = (varOperation.canRxId>>0) & 0x000000FF;
00021a  4864              LDR      r0,|L1.940|
00021c  f8b0008c          LDRH     r0,[r0,#0x8c]  ; varOperation
000220  f3c02207          UBFX     r2,r0,#8,#8
000224  4620              MOV      r0,r4
000226  1c61              ADDS     r1,r4,#1
000228  b2cc              UXTB     r4,r1
00022a  542a              STRB     r2,[r5,r0]
00022c  485f              LDR      r0,|L1.940|
00022e  f890208c          LDRB     r2,[r0,#0x8c]  ; varOperation
000232  4620              MOV      r0,r4
000234  1c61              ADDS     r1,r4,#1
000236  b2cc              UXTB     r4,r1
000238  542a              STRB     r2,[r5,r0]
;;;206    	ptrOK[i++] = (dataToSend.canId>>24) & 0x000000FF;ptrOK[i++] = (dataToSend.canId>>16) & 0x000000FF;
00023a  485d              LDR      r0,|L1.944|
00023c  6800              LDR      r0,[r0,#0]  ; dataToSend
00023e  0e00              LSRS     r0,r0,#24
000240  4621              MOV      r1,r4
000242  1c62              ADDS     r2,r4,#1
000244  b2d4              UXTB     r4,r2
000246  5468              STRB     r0,[r5,r1]
000248  4859              LDR      r0,|L1.944|
00024a  6800              LDR      r0,[r0,#0]  ; dataToSend
00024c  f3c04207          UBFX     r2,r0,#16,#8
000250  4620              MOV      r0,r4
000252  1c61              ADDS     r1,r4,#1
000254  b2cc              UXTB     r4,r1
000256  542a              STRB     r2,[r5,r0]
;;;207    	ptrOK[i++] = (dataToSend.canId>>8) & 0x000000FF;ptrOK[i++] = (dataToSend.canId>>0) & 0x000000FF;
000258  4855              LDR      r0,|L1.944|
00025a  8800              LDRH     r0,[r0,#0]  ; dataToSend
00025c  f3c02207          UBFX     r2,r0,#8,#8
000260  4620              MOV      r0,r4
000262  1c61              ADDS     r1,r4,#1
000264  b2cc              UXTB     r4,r1
000266  542a              STRB     r2,[r5,r0]
000268  4851              LDR      r0,|L1.944|
00026a  7802              LDRB     r2,[r0,#0]  ; dataToSend
00026c  4621              MOV      r1,r4
00026e  1c60              ADDS     r0,r4,#1
000270  b2c4              UXTB     r4,r0
000272  546a              STRB     r2,[r5,r1]
;;;208    	memcpy(&ptrOK[i],varOperation.ecuVersion,20);
000274  1928              ADDS     r0,r5,r4
000276  2214              MOVS     r2,#0x14
000278  494c              LDR      r1,|L1.940|
00027a  3164              ADDS     r1,r1,#0x64
00027c  f7fffffe          BL       __aeabi_memcpy
;;;209    	if(varOperation.isDataFlow != 1)
000280  484a              LDR      r0,|L1.940|
000282  f890002d          LDRB     r0,[r0,#0x2d]  ; varOperation
000286  2801              CMP      r0,#1
000288  d025              BEQ      |L1.726|
;;;210    	{
;;;211    		OSMutexPend(CDMASendMutex,0,&err);
00028a  aa03              ADD      r2,sp,#0xc
00028c  2100              MOVS     r1,#0
00028e  4849              LDR      r0,|L1.948|
000290  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000292  f7fffffe          BL       OSMutexPend
;;;212    		memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrOK,ptrOK[0]);
000296  4948              LDR      r1,|L1.952|
000298  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00029a  684b              LDR      r3,[r1,#4]
00029c  4943              LDR      r1,|L1.940|
00029e  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
0002a2  311b              ADDS     r1,r1,#0x1b
0002a4  1858              ADDS     r0,r3,r1
0002a6  782a              LDRB     r2,[r5,#0]
0002a8  4629              MOV      r1,r5
0002aa  f7fffffe          BL       __aeabi_memcpy
;;;213    		cdmaDataToSend->datLength += ptrOK[0];
0002ae  4842              LDR      r0,|L1.952|
0002b0  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0002b2  8800              LDRH     r0,[r0,#0]
0002b4  7829              LDRB     r1,[r5,#0]
0002b6  4408              ADD      r0,r0,r1
0002b8  493f              LDR      r1,|L1.952|
0002ba  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0002bc  8008              STRH     r0,[r1,#0]
;;;214    		varOperation.datOKLeng += ptrOK[0];
0002be  483b              LDR      r0,|L1.940|
0002c0  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
0002c4  7829              LDRB     r1,[r5,#0]
0002c6  4408              ADD      r0,r0,r1
0002c8  4938              LDR      r1,|L1.940|
0002ca  f8a10096          STRH     r0,[r1,#0x96]
;;;215    		OSMutexPost(CDMASendMutex);
0002ce  4839              LDR      r0,|L1.948|
0002d0  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0002d2  f7fffffe          BL       OSMutexPost
                  |L1.726|
;;;216    	}
;;;217    	Mem_free(ptrOK);
0002d6  4628              MOV      r0,r5
0002d8  f7fffffe          BL       Mem_free
;;;218    	memcpy(canDataConfig.pidVerCmd,canIdExt[i].pidVerCmd,4);//todo:保存当前读取版本号的指令
0002dc  eb040044          ADD      r0,r4,r4,LSL #1
0002e0  4931              LDR      r1,|L1.936|
0002e2  eb010180          ADD      r1,r1,r0,LSL #2
0002e6  482a              LDR      r0,|L1.912|
0002e8  6849              LDR      r1,[r1,#4]
0002ea  f8c01013          STR      r1,[r0,#0x13]  ; canDataConfig
;;;219    	goto endTest;
0002ee  e038              B        |L1.866|
                  |L1.752|
;;;220    TestError:			
;;;221    	ptrOK = Mem_malloc(10);
0002f0  200a              MOVS     r0,#0xa
0002f2  f7fffffe          BL       Mem_malloc
0002f6  4605              MOV      r5,r0
;;;222    	ptrOK[0] = 3;
0002f8  2003              MOVS     r0,#3
0002fa  7028              STRB     r0,[r5,#0]
;;;223    	ptrOK[1] = 0x50;
0002fc  2050              MOVS     r0,#0x50
0002fe  7068              STRB     r0,[r5,#1]
;;;224    	ptrOK[2] = 0x20;
000300  2020              MOVS     r0,#0x20
000302  70a8              STRB     r0,[r5,#2]
;;;225    	if(varOperation.isDataFlow != 1)
000304  4829              LDR      r0,|L1.940|
000306  f890002d          LDRB     r0,[r0,#0x2d]  ; varOperation
00030a  2801              CMP      r0,#1
00030c  d025              BEQ      |L1.858|
;;;226    	{
;;;227    		OSMutexPend(CDMASendMutex,0,&err);
00030e  aa03              ADD      r2,sp,#0xc
000310  2100              MOVS     r1,#0
000312  4828              LDR      r0,|L1.948|
000314  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000316  f7fffffe          BL       OSMutexPend
;;;228    		memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrOK,ptrOK[0]);
00031a  4927              LDR      r1,|L1.952|
00031c  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00031e  684b              LDR      r3,[r1,#4]
000320  4922              LDR      r1,|L1.940|
000322  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
000326  311b              ADDS     r1,r1,#0x1b
000328  1858              ADDS     r0,r3,r1
00032a  782a              LDRB     r2,[r5,#0]
00032c  4629              MOV      r1,r5
00032e  f7fffffe          BL       __aeabi_memcpy
;;;229    		cdmaDataToSend->datLength += ptrOK[0];
000332  4821              LDR      r0,|L1.952|
000334  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000336  8800              LDRH     r0,[r0,#0]
000338  7829              LDRB     r1,[r5,#0]
00033a  4408              ADD      r0,r0,r1
00033c  491e              LDR      r1,|L1.952|
00033e  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000340  8008              STRH     r0,[r1,#0]
;;;230    		varOperation.datOKLeng    += ptrOK[0];
000342  481a              LDR      r0,|L1.940|
000344  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
000348  7829              LDRB     r1,[r5,#0]
00034a  4408              ADD      r0,r0,r1
00034c  4917              LDR      r1,|L1.940|
00034e  f8a10096          STRH     r0,[r1,#0x96]
;;;231    		OSMutexPost(CDMASendMutex);
000352  4818              LDR      r0,|L1.948|
000354  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000356  f7fffffe          BL       OSMutexPost
                  |L1.858|
;;;232    	}
;;;233    	Mem_free(ptrOK);
00035a  4628              MOV      r0,r5
00035c  f7fffffe          BL       Mem_free
;;;234    	
;;;235    endTest:
000360  bf00              NOP      
                  |L1.866|
;;;236    	varOperation.canTest      = 0;
000362  2000              MOVS     r0,#0
000364  4911              LDR      r1,|L1.940|
000366  f8a10091          STRH     r0,[r1,#0x91]
;;;237    	varOperation.isStrenOilOK = 0; //todo:一旦进入自识别，就不能再进行动力提升
00036a  f8810099          STRB     r0,[r1,#0x99]
;;;238    	varOperation.pidRun       = 0; //todo:一旦进入自识别，将不再发出 PID 数据
00036e  f8810095          STRB     r0,[r1,#0x95]
;;;239    	if(temp == 200)
000372  2ec8              CMP      r6,#0xc8
000374  d106              BNE      |L1.900|
;;;240    	{
;;;241    		OSTimeDlyHMSM(0,0,5,0);
000376  2300              MOVS     r3,#0
000378  2205              MOVS     r2,#5
00037a  4619              MOV      r1,r3
00037c  4618              MOV      r0,r3
00037e  f7fffffe          BL       OSTimeDlyHMSM
;;;242    		goto TestStart;
000382  e645              B        |L1.16|
                  |L1.900|
;;;243    		
;;;244    	}
;;;245    	return;
;;;246    }
000384  e8bd81ff          POP      {r0-r8,pc}
;;;247    void ECU_ElecOff()//正常运行中，ECU掉电了
                          ENDP

                  |L1.904|
                          DCD      0x40006400
                  |L1.908|
                          DCD      canJ1939Q
                  |L1.912|
                          DCD      canDataConfig
                  |L1.916|
000394  0d0a3130          DCB      "\r\n10-Test Baud:%d;",0
000398  2d546573
00039c  74204261
0003a0  75643a25
0003a4  643b00  
0003a7  00                DCB      0
                  |L1.936|
                          DCD      canIdExt
                  |L1.940|
                          DCD      varOperation
                  |L1.944|
                          DCD      dataToSend
                  |L1.948|
                          DCD      CDMASendMutex
                  |L1.952|
                          DCD      cdmaDataToSend

                          AREA ||i.ECU_ElecOff||, CODE, READONLY, ALIGN=2

                  ECU_ElecOff PROC
;;;246    }
;;;247    void ECU_ElecOff()//正常运行中，ECU掉电了
000000  2000              MOVS     r0,#0
;;;248    {
;;;249    	varOperation.pidRun = 0;
000002  4902              LDR      r1,|L2.12|
000004  f8810095          STRB     r0,[r1,#0x95]
;;;250    }
000008  4770              BX       lr
;;;251    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      varOperation

                          AREA ||i.ElecUP||, CODE, READONLY, ALIGN=2

                  ElecUP PROC
;;;77     }
;;;78     void ElecUP(void)                       //卡路宝第一次上电或者升级后重启
000000  b53e              PUSH     {r1-r5,lr}
;;;79     {
;;;80     	uint8_t isCANOK = 1;
000002  2401              MOVS     r4,#1
;;;81     	CAN_InitTypeDef CAN_InitStructure;
;;;82     	varOperation.pidRun = 0;
000004  2000              MOVS     r0,#0
000006  493e              LDR      r1,|L3.256|
000008  f8810095          STRB     r0,[r1,#0x95]
;;;83     	
;;;84     	OSTimeDlyHMSM(0,0,1,0);
00000c  2300              MOVS     r3,#0
00000e  2201              MOVS     r2,#1
000010  4619              MOV      r1,r3
000012  4618              MOV      r0,r3
000014  f7fffffe          BL       OSTimeDlyHMSM
;;;85     	OSTimeDlyHMSM(0,0,3,0);
000018  2300              MOVS     r3,#0
00001a  2203              MOVS     r2,#3
00001c  4619              MOV      r1,r3
00001e  4618              MOV      r0,r3
000020  f7fffffe          BL       OSTimeDlyHMSM
;;;86     
;;;87     	if((varOperation.pidVersion == 0xFFFFFFFF )||(varOperation.pidNum == 0xFFFF)||(varOperation.busType == 0xFF))
000024  4836              LDR      r0,|L3.256|
000026  f8d0007a          LDR      r0,[r0,#0x7a]  ; varOperation
00002a  1c40              ADDS     r0,r0,#1
00002c  b158              CBZ      r0,|L3.70|
00002e  4834              LDR      r0,|L3.256|
000030  f8b00078          LDRH     r0,[r0,#0x78]  ; varOperation
000034  f64f71ff          MOV      r1,#0xffff
000038  4288              CMP      r0,r1
00003a  d004              BEQ      |L3.70|
00003c  4830              LDR      r0,|L3.256|
00003e  f8900086          LDRB     r0,[r0,#0x86]  ; varOperation
000042  28ff              CMP      r0,#0xff
000044  d105              BNE      |L3.82|
                  |L3.70|
;;;88     	{
;;;89     		LogReport("\r\n06-Unknown Equipment;");
000046  a02f              ADR      r0,|L3.260|
000048  f7fffffe          BL       LogReport
;;;90     		CANTestChannel();
00004c  f7fffffe          BL       CANTestChannel
                  |L3.80|
;;;91     		return;
;;;92     	}	
;;;93     	else if(varOperation.pidVersion == 0)
;;;94     	{
;;;95     		LogReport("\r\n07-ECUID don't Config:%d;",canDataConfig.pidVersion);
;;;96     		CANTestChannel();
;;;97     		return	;
;;;98     	}else
;;;99     	{
;;;100    		CAN_DeInit(CAN1);  
;;;101    		CAN_StructInit(&CAN_InitStructure);  
;;;102    		CAN1_BaudSet(canDataConfig.canBaud);  //先用flash中的CAN配置进行测试
;;;103    		CAN1_ClearFilter();  
;;;104    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
;;;105    	
;;;106    		dataToSend.ide   = canDataConfig.canIdType;
;;;107    		dataToSend.canId = canDataConfig.canTxId;
;;;108    abc:		
;;;109    		isCANOK = ReadECUVersion(canDataConfig.pidVerCmd);
;;;110    		if(isCANOK < 100)				//读取ECU版本号，读取不成功则不进行动力提升
;;;111    		{
;;;112    			freOBDLed = LEDSLOW;
;;;113    			varOperation.canTest = 1;
;;;114    			Get_Q_FromECU();            //读取喷油量的原始值，得到当前车辆系数
;;;115    			OSTimeDlyHMSM(0,0,10,0);    //标定结束后，需要等待 20s 读取故障码，若不等待的话，读出来都是拒绝应答
;;;116    			varOperation.pidRun = 1;    //可以开始数据流
;;;117    		}
;;;118    		else if(isCANOK == 200)         //读取版本号失败（ 配置文件有误 ）
;;;119    		{
;;;120    			IsCanCommunicationOK();     //进入测试状态
;;;121    			goto abc;
;;;122    		}
;;;123    			
;;;124    		else                            //版本号读取出来了，但是不能提升动力，那就正常跑吧
;;;125    		{
;;;126    			varOperation.canTest = 2;   
;;;127    			OSTimeDlyHMSM(0,0,2,0);     //读取故障码是需要时间的
;;;128    			varOperation.pidRun = 1;    //可以开始数据流
;;;129    		}		
;;;130    	}
;;;131    		
;;;132    
;;;133    	
;;;134    }
000050  bd3e              POP      {r1-r5,pc}
                  |L3.82|
000052  482b              LDR      r0,|L3.256|
000054  f8d0007a          LDR      r0,[r0,#0x7a]         ;93  ; varOperation
000058  b938              CBNZ     r0,|L3.106|
00005a  4830              LDR      r0,|L3.284|
00005c  6801              LDR      r1,[r0,#0]            ;95  ; canDataConfig
00005e  a030              ADR      r0,|L3.288|
000060  f7fffffe          BL       LogReport
000064  f7fffffe          BL       CANTestChannel
000068  e7f2              B        |L3.80|
                  |L3.106|
00006a  4834              LDR      r0,|L3.316|
00006c  f7fffffe          BL       CAN_DeInit
000070  4668              MOV      r0,sp                 ;101
000072  f7fffffe          BL       CAN_StructInit
000076  4929              LDR      r1,|L3.284|
000078  7c88              LDRB     r0,[r1,#0x12]         ;102  ; canDataConfig
00007a  f7fffffe          BL       CAN1_BaudSet
00007e  f7fffffe          BL       CAN1_ClearFilter
000082  2201              MOVS     r2,#1                 ;104
000084  2110              MOVS     r1,#0x10              ;104
000086  482d              LDR      r0,|L3.316|
000088  f7fffffe          BL       CAN_ITConfig
00008c  4823              LDR      r0,|L3.284|
00008e  7a40              LDRB     r0,[r0,#9]            ;106  ; canDataConfig
000090  492b              LDR      r1,|L3.320|
000092  6048              STR      r0,[r1,#4]            ;106  ; dataToSend
000094  4821              LDR      r0,|L3.284|
000096  f8d0000a          LDR      r0,[r0,#0xa]          ;107  ; canDataConfig
00009a  6008              STR      r0,[r1,#0]            ;107  ; dataToSend
00009c  bf00              NOP                            ;108
                  |L3.158|
00009e  481f              LDR      r0,|L3.284|
0000a0  3013              ADDS     r0,r0,#0x13           ;109
0000a2  f7fffffe          BL       ReadECUVersion
0000a6  4604              MOV      r4,r0                 ;109
0000a8  2c64              CMP      r4,#0x64              ;110
0000aa  da14              BGE      |L3.214|
0000ac  f44f707a          MOV      r0,#0x3e8             ;112
0000b0  4924              LDR      r1,|L3.324|
0000b2  8008              STRH     r0,[r1,#0]            ;112
0000b4  2001              MOVS     r0,#1                 ;113
0000b6  4912              LDR      r1,|L3.256|
0000b8  f8a10091          STRH     r0,[r1,#0x91]         ;113
0000bc  f7fffffe          BL       Get_Q_FromECU
0000c0  2300              MOVS     r3,#0                 ;115
0000c2  220a              MOVS     r2,#0xa               ;115
0000c4  4619              MOV      r1,r3                 ;115
0000c6  4618              MOV      r0,r3                 ;115
0000c8  f7fffffe          BL       OSTimeDlyHMSM
0000cc  2001              MOVS     r0,#1                 ;116
0000ce  490c              LDR      r1,|L3.256|
0000d0  f8810095          STRB     r0,[r1,#0x95]         ;116
0000d4  e012              B        |L3.252|
                  |L3.214|
0000d6  2cc8              CMP      r4,#0xc8              ;118
0000d8  d102              BNE      |L3.224|
0000da  f7fffffe          BL       IsCanCommunicationOK
0000de  e7de              B        |L3.158|
                  |L3.224|
0000e0  2002              MOVS     r0,#2                 ;126
0000e2  4907              LDR      r1,|L3.256|
0000e4  f8a10091          STRH     r0,[r1,#0x91]         ;126
0000e8  2300              MOVS     r3,#0                 ;127
0000ea  2202              MOVS     r2,#2                 ;127
0000ec  4619              MOV      r1,r3                 ;127
0000ee  4618              MOV      r0,r3                 ;127
0000f0  f7fffffe          BL       OSTimeDlyHMSM
0000f4  2001              MOVS     r0,#1                 ;128
0000f6  4902              LDR      r1,|L3.256|
0000f8  f8810095          STRB     r0,[r1,#0x95]         ;128
                  |L3.252|
0000fc  bf00              NOP      
0000fe  e7a7              B        |L3.80|
;;;135    extern const CmdVersion canIdExt[5];
                          ENDP

                  |L3.256|
                          DCD      varOperation
                  |L3.260|
000104  0d0a3036          DCB      "\r\n06-Unknown Equipment;",0
000108  2d556e6b
00010c  6e6f776e
000110  20457175
000114  69706d65
000118  6e743b00
                  |L3.284|
                          DCD      canDataConfig
                  |L3.288|
000120  0d0a3037          DCB      "\r\n07-ECUID don't Config:%d;",0
000124  2d454355
000128  49442064
00012c  6f6e2774
000130  20436f6e
000134  6669673a
000138  25643b00
                  |L3.316|
                          DCD      0x40006400
                  |L3.320|
                          DCD      dataToSend
                  |L3.324|
                          DCD      freOBDLed

                          AREA ||i.IsCanCommunicationOK||, CODE, READONLY, ALIGN=2

                  IsCanCommunicationOK PROC
;;;56     }
;;;57     void IsCanCommunicationOK(void)//用读取版本号的指令发送测试帧
000000  b538              PUSH     {r3-r5,lr}
;;;58     {
;;;59     	CanRxMsg* CAN1_RxMsg;
;;;60     	uint8_t err;
;;;61     	
;;;62     	dataToSend.canId = canDataConfig.canTxId;
000002  4817              LDR      r0,|L4.96|
000004  f8d0000a          LDR      r0,[r0,#0xa]  ; canDataConfig
000008  4916              LDR      r1,|L4.100|
00000a  6008              STR      r0,[r1,#0]  ; dataToSend
;;;63     	dataToSend.ide   = canDataConfig.canIdType;
00000c  4814              LDR      r0,|L4.96|
00000e  7a40              LDRB     r0,[r0,#9]  ; canDataConfig
000010  6048              STR      r0,[r1,#4]  ; dataToSend
;;;64     	dataToSend.pdat  = canDataConfig.pidVerCmd;    //用读取版本号的指令进行测试
000012  4813              LDR      r0,|L4.96|
000014  3013              ADDS     r0,r0,#0x13
000016  6088              STR      r0,[r1,#8]  ; dataToSend
;;;65     	varOperation.flagRecvOK = 0;
000018  2000              MOVS     r0,#0
00001a  4913              LDR      r1,|L4.104|
00001c  f88100a6          STRB     r0,[r1,#0xa6]
;;;66     	do{
000020  bf00              NOP      
                  |L4.34|
;;;67     		OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
000022  4b10              LDR      r3,|L4.100|
000024  689a              LDR      r2,[r3,#8]  ; dataToSend
000026  6859              LDR      r1,[r3,#4]  ; dataToSend
000028  6818              LDR      r0,[r3,#0]  ; dataToSend
00002a  f7fffffe          BL       OBD_CAN_SendData
;;;68     		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
00002e  466a              MOV      r2,sp
000030  f44f71fa          MOV      r1,#0x1f4
000034  480d              LDR      r0,|L4.108|
000036  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000038  f7fffffe          BL       OSQPend
00003c  4604              MOV      r4,r0
;;;69     		
;;;70     		LogReport("\r\nTest Mode!;");
00003e  a00c              ADR      r0,|L4.112|
000040  f7fffffe          BL       LogReport
;;;71     		
;;;72     		Mem_free(CAN1_RxMsg);
000044  4620              MOV      r0,r4
000046  f7fffffe          BL       Mem_free
;;;73     		OSTimeDlyHMSM(0,0,3,0);
00004a  2300              MOVS     r3,#0
00004c  2203              MOVS     r2,#3
00004e  4619              MOV      r1,r3
000050  4618              MOV      r0,r3
000052  f7fffffe          BL       OSTimeDlyHMSM
;;;74     			
;;;75     	}while(err != OS_ERR_NONE);
000056  f89d0000          LDRB     r0,[sp,#0]
00005a  2800              CMP      r0,#0
00005c  d1e1              BNE      |L4.34|
;;;76     	
;;;77     }
00005e  bd38              POP      {r3-r5,pc}
;;;78     void ElecUP(void)                       //卡路宝第一次上电或者升级后重启
                          ENDP

                  |L4.96|
                          DCD      canDataConfig
                  |L4.100|
                          DCD      dataToSend
                  |L4.104|
                          DCD      varOperation
                  |L4.108|
                          DCD      canRecieveQ
                  |L4.112|
000070  0d0a5465          DCB      "\r\nTest Mode!;",0
000074  7374204d
000078  6f646521
00007c  3b00    
00007e  00                DCB      0
00007f  00                DCB      0

                          AREA ||i.OBD_ON_OFFDeal||, CODE, READONLY, ALIGN=2

                  OBD_ON_OFFDeal PROC
;;;12     
;;;13     void OBD_ON_OFFDeal(void *pdata)
000000  b508              PUSH     {r3,lr}
;;;14     {
;;;15     	uint8_t err,temp;
;;;16     	uint8_t * can1_Txbuff;
;;;17     	
;;;18     	OSSemPend(LoginMes,0,&err);   //等待连上网络
000002  466a              MOV      r2,sp
000004  2100              MOVS     r1,#0
000006  483b              LDR      r0,|L5.244|
000008  6800              LDR      r0,[r0,#0]  ; LoginMes
00000a  f7fffffe          BL       OSSemPend
;;;19     	CAN1Config(); //配置CAN
00000e  f7fffffe          BL       CAN1Config
;;;20     	ElecUP();
000012  f7fffffe          BL       ElecUP
;;;21     	OSTimeDlyHMSM(0,0,5,0);
000016  2300              MOVS     r3,#0
000018  2205              MOVS     r2,#5
00001a  4619              MOV      r1,r3
00001c  4618              MOV      r0,r3
00001e  f7fffffe          BL       OSTimeDlyHMSM
;;;22     	while(1)
000022  e065              B        |L5.240|
                  |L5.36|
;;;23     	{
;;;24     		OSTimeDlyHMSM(0,0,2,0);
000024  2300              MOVS     r3,#0
000026  2202              MOVS     r2,#2
000028  4619              MOV      r1,r3
00002a  4618              MOV      r0,r3
00002c  f7fffffe          BL       OSTimeDlyHMSM
;;;25     		if(varOperation.flagCAN == 1||varOperation.canTest == 0)//数据流正常采集中 / 系统进入自识别
000030  4831              LDR      r0,|L5.248|
000032  f89000a4          LDRB     r0,[r0,#0xa4]  ; varOperation
000036  2801              CMP      r0,#1
000038  d003              BEQ      |L5.66|
00003a  482f              LDR      r0,|L5.248|
00003c  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
000040  b938              CBNZ     r0,|L5.82|
                  |L5.66|
;;;26     		{
;;;27     			if(varOperation.canTest == 0)
000042  482d              LDR      r0,|L5.248|
000044  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
000048  b910              CBNZ     r0,|L5.80|
;;;28     				LogReport("TestECU Fail;");
00004a  a02c              ADR      r0,|L5.252|
00004c  f7fffffe          BL       LogReport
                  |L5.80|
;;;29     			continue;
000050  e04e              B        |L5.240|
                  |L5.82|
;;;30     		}
;;;31     		if(varOperation.flagJ1939 == 0 && varOperation.flagCAN == 0)//ECU掉电
000052  4829              LDR      r0,|L5.248|
000054  f89000a5          LDRB     r0,[r0,#0xa5]  ; varOperation
000058  2800              CMP      r0,#0
00005a  d148              BNE      |L5.238|
00005c  4826              LDR      r0,|L5.248|
00005e  f89000a4          LDRB     r0,[r0,#0xa4]  ; varOperation
000062  2800              CMP      r0,#0
000064  d143              BNE      |L5.238|
;;;32     		{
;;;33     			do{
000066  bf00              NOP      
                  |L5.104|
;;;34     				can1_Txbuff = OSQAccept(canSendQ,&err);//清空消息队列里的消息
000068  4669              MOV      r1,sp
00006a  4828              LDR      r0,|L5.268|
00006c  6800              LDR      r0,[r0,#0]  ; canSendQ
00006e  f7fffffe          BL       OSQAccept
000072  4605              MOV      r5,r0
;;;35     				Mem_free(can1_Txbuff);
000074  4628              MOV      r0,r5
000076  f7fffffe          BL       Mem_free
;;;36     			}while(err == OS_ERR_NONE);
00007a  f89d0000          LDRB     r0,[sp,#0]
00007e  2800              CMP      r0,#0
000080  d0f2              BEQ      |L5.104|
;;;37     			CANr1=0;CANr2=0;CANr3=0;CANr4=0;CANr5=0;CANr6=0;CANr7=0;fCanOK=0;
000082  2000              MOVS     r0,#0
000084  4922              LDR      r1,|L5.272|
000086  7008              STRB     r0,[r1,#0]
000088  4922              LDR      r1,|L5.276|
00008a  7008              STRB     r0,[r1,#0]
00008c  4922              LDR      r1,|L5.280|
00008e  7008              STRB     r0,[r1,#0]
000090  4922              LDR      r1,|L5.284|
000092  7008              STRB     r0,[r1,#0]
000094  4922              LDR      r1,|L5.288|
000096  7008              STRB     r0,[r1,#0]
000098  4922              LDR      r1,|L5.292|
00009a  7008              STRB     r0,[r1,#0]
00009c  4922              LDR      r1,|L5.296|
00009e  7008              STRB     r0,[r1,#0]
0000a0  4922              LDR      r1,|L5.300|
0000a2  7008              STRB     r0,[r1,#0]
;;;38     			LogReport("\r\n08-ECU OFF!");
0000a4  a022              ADR      r0,|L5.304|
0000a6  f7fffffe          BL       LogReport
;;;39     	
;;;40     			IsCanCommunicationOK();
0000aa  f7fffffe          BL       IsCanCommunicationOK
;;;41     			if(varOperation.canTest == 1)
0000ae  4812              LDR      r0,|L5.248|
0000b0  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
0000b4  2801              CMP      r0,#1
0000b6  d109              BNE      |L5.204|
;;;42     			{
;;;43     				Get_Q_FromECU();                          //获取喷油量的值
0000b8  f7fffffe          BL       Get_Q_FromECU
;;;44     				varOperation.pidRun = 1;                  //启动PID数据发送
0000bc  2001              MOVS     r0,#1
0000be  490e              LDR      r1,|L5.248|
0000c0  f8810095          STRB     r0,[r1,#0x95]
;;;45     				varOperation.flagRecvOK = 0;
0000c4  2000              MOVS     r0,#0
0000c6  f88100a6          STRB     r0,[r1,#0xa6]
0000ca  e007              B        |L5.220|
                  |L5.204|
;;;46     			}	
;;;47     			else if(temp == 0)
0000cc  b934              CBNZ     r4,|L5.220|
;;;48     			{
;;;49     				varOperation.pidRun = 1;
0000ce  2001              MOVS     r0,#1
0000d0  4909              LDR      r1,|L5.248|
0000d2  f8810095          STRB     r0,[r1,#0x95]
;;;50     				varOperation.flagRecvOK = 0;
0000d6  2000              MOVS     r0,#0
0000d8  f88100a6          STRB     r0,[r1,#0xa6]
                  |L5.220|
;;;51     			}
;;;52     			LogReport("\r\nECU ON!");
0000dc  a018              ADR      r0,|L5.320|
0000de  f7fffffe          BL       LogReport
;;;53     			OSTimeDlyHMSM(0,0,15,0);
0000e2  2300              MOVS     r3,#0
0000e4  220f              MOVS     r2,#0xf
0000e6  4619              MOV      r1,r3
0000e8  4618              MOV      r0,r3
0000ea  f7fffffe          BL       OSTimeDlyHMSM
                  |L5.238|
0000ee  bf00              NOP                            ;29
                  |L5.240|
0000f0  e798              B        |L5.36|
;;;54     		}
;;;55     	}
;;;56     }
;;;57     void IsCanCommunicationOK(void)//用读取版本号的指令发送测试帧
                          ENDP

0000f2  0000              DCW      0x0000
                  |L5.244|
                          DCD      LoginMes
                  |L5.248|
                          DCD      varOperation
                  |L5.252|
0000fc  54657374          DCB      "TestECU Fail;",0
000100  45435520
000104  4661696c
000108  3b00    
00010a  00                DCB      0
00010b  00                DCB      0
                  |L5.268|
                          DCD      canSendQ
                  |L5.272|
                          DCD      CANr1
                  |L5.276|
                          DCD      CANr2
                  |L5.280|
                          DCD      CANr3
                  |L5.284|
                          DCD      CANr4
                  |L5.288|
                          DCD      CANr5
                  |L5.292|
                          DCD      CANr6
                  |L5.296|
                          DCD      CANr7
                  |L5.300|
                          DCD      fCanOK
                  |L5.304|
000130  0d0a3038          DCB      "\r\n08-ECU OFF!",0
000134  2d454355
000138  204f4646
00013c  2100    
00013e  00                DCB      0
00013f  00                DCB      0
                  |L5.320|
000140  0d0a4543          DCB      "\r\nECU ON!",0
000144  55204f4e
000148  2100    
00014a  00                DCB      0
00014b  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\OBD\\OBD_ON_OFF.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_OBD_ON_OFF_c_e8fa2ea3____REV16|
#line 465 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.2.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___12_OBD_ON_OFF_c_e8fa2ea3____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_OBD_ON_OFF_c_e8fa2ea3____REVSH|
#line 480
|__asm___12_OBD_ON_OFF_c_e8fa2ea3____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_OBD_ON_OFF_c_e8fa2ea3____RRX|
#line 667
|__asm___12_OBD_ON_OFF_c_e8fa2ea3____RRX| PROC
#line 668

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
