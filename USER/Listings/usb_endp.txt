; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\usb_endp.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\usb_endp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\usb_endp.crf ..\USB\CONFIG\usb_endp.c]
                          THUMB

                          AREA ||i.EP1_IN_Callback||, CODE, READONLY, ALIGN=2

                  EP1_IN_Callback PROC
;;;57     *******************************************************************************/
;;;58     void EP1_IN_Callback (void)
000000  b510              PUSH     {r4,lr}
;;;59     {
;;;60     
;;;61     	u16 USB_Tx_length; 
;;;62     	USB_Tx_length = CirQ_GetLength(sendUSB_Q);
000002  480f              LDR      r0,|L1.64|
000004  6800              LDR      r0,[r0,#0]  ; sendUSB_Q
000006  f7fffffe          BL       CirQ_GetLength
00000a  4604              MOV      r4,r0
;;;63     	if(USB_Tx_length <= 0)		//无任何数据要发送,直接退出
00000c  2c00              CMP      r4,#0
00000e  dc00              BGT      |L1.18|
                  |L1.16|
;;;64     		return;
;;;65     	
;;;66     	if(USB_Tx_length>VIRTUAL_COM_PORT_DATA_SIZE)	//超过64字节?
;;;67     		USB_Tx_length=VIRTUAL_COM_PORT_DATA_SIZE;	//此次发送数据量
;;;68     	
;;;69     	UserToPMABufferCopy(sendUSB_Q->data , ENDP1_TXADDR, USB_Tx_length);
;;;70     	SetEPTxCount(ENDP1, USB_Tx_length);
;;;71     	SetEPTxValid(ENDP1);
;;;72     	CirQ_Clear(sendUSB_Q);
;;;73     }
000010  bd10              POP      {r4,pc}
                  |L1.18|
000012  2c40              CMP      r4,#0x40              ;66
000014  dd00              BLE      |L1.24|
000016  2440              MOVS     r4,#0x40              ;67
                  |L1.24|
000018  4909              LDR      r1,|L1.64|
00001a  6809              LDR      r1,[r1,#0]            ;69  ; sendUSB_Q
00001c  4622              MOV      r2,r4                 ;69
00001e  6888              LDR      r0,[r1,#8]            ;69
000020  21c0              MOVS     r1,#0xc0              ;69
000022  f7fffffe          BL       UserToPMABufferCopy
000026  4621              MOV      r1,r4                 ;70
000028  2001              MOVS     r0,#1                 ;70
00002a  f7fffffe          BL       SetEPTxCount
00002e  2001              MOVS     r0,#1                 ;71
000030  f7fffffe          BL       SetEPTxValid
000034  4802              LDR      r0,|L1.64|
000036  6800              LDR      r0,[r0,#0]            ;72  ; sendUSB_Q
000038  f7fffffe          BL       CirQ_Clear
00003c  bf00              NOP      
00003e  e7e7              B        |L1.16|
;;;74     
                          ENDP

                  |L1.64|
                          DCD      sendUSB_Q

                          AREA ||i.EP3_OUT_Callback||, CODE, READONLY, ALIGN=2

                  EP3_OUT_Callback PROC
;;;81     *******************************************************************************/
;;;82     void EP3_OUT_Callback(void)
000000  b510              PUSH     {r4,lr}
;;;83     {
;;;84     	u16 USB_Rx_Cnt; 
;;;85     	USB_Rx_Cnt = USB_SIL_Read(EP3_OUT, USB_Rx_Buffer);	//得到USB接收到的数据及其长度  
000002  4906              LDR      r1,|L2.28|
000004  2003              MOVS     r0,#3
000006  f7fffffe          BL       USB_SIL_Read
00000a  b284              UXTH     r4,r0
;;;86     	USB_To_USART_Send_Data(USB_Rx_Buffer, USB_Rx_Cnt);	//处理数据（其实就是保存数据） 
00000c  b2e1              UXTB     r1,r4
00000e  4803              LDR      r0,|L2.28|
000010  f7fffffe          BL       USB_To_USART_Send_Data
;;;87     	SetEPRxValid(ENDP3);								//时能端点3的数据接收
000014  2003              MOVS     r0,#3
000016  f7fffffe          BL       SetEPRxValid
;;;88     }
00001a  bd10              POP      {r4,pc}
;;;89     
                          ENDP

                  |L2.28|
                          DCD      USB_Rx_Buffer

                          AREA ||i.SOF_Callback||, CODE, READONLY, ALIGN=2

                  SOF_Callback PROC
;;;98     extern SYS_OperationVar  varOperation;
;;;99     void SOF_Callback(void)
000000  b510              PUSH     {r4,lr}
;;;100    {
;;;101    	if(bDeviceState == CONFIGURED)
000002  4808              LDR      r0,|L3.36|
000004  6800              LDR      r0,[r0,#0]  ; bDeviceState
000006  2805              CMP      r0,#5
000008  d10a              BNE      |L3.32|
;;;102    	{
;;;103    		if (varOperation.isUSBSendDat == 1)//todo:
00000a  4807              LDR      r0,|L3.40|
00000c  f890009a          LDRB     r0,[r0,#0x9a]  ; varOperation
000010  2801              CMP      r0,#1
000012  d105              BNE      |L3.32|
;;;104    		{
;;;105    			/* Check the data to be sent through IN pipe */
;;;106    			EP1_IN_Callback();//通过EP1_IN_Callback函数实现TX数据发送给USB
000014  f7fffffe          BL       EP1_IN_Callback
;;;107    			//Handle_USBAsynchXfer();
;;;108    			varOperation.isUSBSendDat = 0;
000018  2000              MOVS     r0,#0
00001a  4903              LDR      r1,|L3.40|
00001c  f881009a          STRB     r0,[r1,#0x9a]
                  |L3.32|
;;;109    		}
;;;110    	}  
;;;111    }
000020  bd10              POP      {r4,pc}
;;;112    /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      bDeviceState
                  |L3.40|
                          DCD      varOperation

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  USB_Rx_Buffer
                          %        64

;*** Start embedded assembler ***

#line 1 "..\\USB\\CONFIG\\usb_endp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_usb_endp_c_f894ab9c____REV16|
#line 465 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.2.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_usb_endp_c_f894ab9c____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_usb_endp_c_f894ab9c____REVSH|
#line 480
|__asm___10_usb_endp_c_f894ab9c____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_usb_endp_c_f894ab9c____RRX|
#line 667
|__asm___10_usb_endp_c_f894ab9c____RRX| PROC
#line 668

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
