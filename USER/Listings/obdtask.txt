; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\obdtask.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\obdtask.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\obdtask.crf ..\OBD\OBDTask.c]
                          THUMB

                          AREA ||i.CANTestChannel||, CODE, READONLY, ALIGN=2

                  CANTestChannel PROC
;;;267    //服务器的配置文件出错，或者还没进行配置，系统进入自识别，识别成功则将信息上报
;;;268    void CANTestChannel(void)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;269    {
;;;270    	uint8_t   err,i,temp;
;;;271    	CanRxMsg* CAN1_RxMsg;
;;;272    	uint8_t*  ptrOK;
;;;273    	CAN_InitTypeDef CAN_InitStructure;
;;;274    	
;;;275    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能 CAN1 时钟
000004  2101              MOVS     r1,#1
000006  0648              LSLS     r0,r1,#25
000008  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;276    	varOperation.canTest = 0;
00000c  2000              MOVS     r0,#0
00000e  49db              LDR      r1,|L1.892|
000010  f8a10091          STRH     r0,[r1,#0x91]
;;;277    	for(i = 0;i<NUMOfCANBaud;i++)       //获得 CAN 的波特率
000014  2500              MOVS     r5,#0
000016  e02a              B        |L1.110|
                  |L1.24|
;;;278    	{
;;;279    		CAN_DeInit(CAN1);
000018  48d9              LDR      r0,|L1.896|
00001a  f7fffffe          BL       CAN_DeInit
;;;280    		CAN_StructInit(&CAN_InitStructure);
00001e  4668              MOV      r0,sp
000020  f7fffffe          BL       CAN_StructInit
;;;281    		CAN1_BaudSet(canBaudEnum[i]); 
000024  49d7              LDR      r1,|L1.900|
000026  5d48              LDRB     r0,[r1,r5]
000028  f7fffffe          BL       CAN1_BaudSet
;;;282    		CAN1_ClearFilter();
00002c  f7fffffe          BL       CAN1_ClearFilter
;;;283    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
000030  2201              MOVS     r2,#1
000032  2110              MOVS     r1,#0x10
000034  48d2              LDR      r0,|L1.896|
000036  f7fffffe          BL       CAN_ITConfig
;;;284    		
;;;285    		//只要此波特率下有数据，CAN波特率就确定了
;;;286    		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
00003a  aa03              ADD      r2,sp,#0xc
00003c  f44f71fa          MOV      r1,#0x1f4
000040  48d1              LDR      r0,|L1.904|
000042  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000044  f7fffffe          BL       OSQPend
000048  4607              MOV      r7,r0
;;;287    		if(err == OS_ERR_NONE)
00004a  f89d000c          LDRB     r0,[sp,#0xc]
00004e  b960              CBNZ     r0,|L1.106|
;;;288    		{
;;;289    			canDataConfig.canBaud = canBaudEnum[i];
000050  48cc              LDR      r0,|L1.900|
000052  5d40              LDRB     r0,[r0,r5]
000054  49cd              LDR      r1,|L1.908|
000056  7488              STRB     r0,[r1,#0x12]
;;;290    			Mem_free(CAN1_RxMsg);
000058  4638              MOV      r0,r7
00005a  f7fffffe          BL       Mem_free
;;;291    			LogReport("\r\n10-Test Baud:%d;",canDataConfig.canBaud);
00005e  48cb              LDR      r0,|L1.908|
000060  7c81              LDRB     r1,[r0,#0x12]  ; canDataConfig
000062  a0cb              ADR      r0,|L1.912|
000064  f7fffffe          BL       LogReport
;;;292    			break;
000068  e003              B        |L1.114|
                  |L1.106|
00006a  1c68              ADDS     r0,r5,#1              ;277
00006c  b2c5              UXTB     r5,r0                 ;277
                  |L1.110|
00006e  2d03              CMP      r5,#3                 ;277
000070  dbd2              BLT      |L1.24|
                  |L1.114|
000072  bf00              NOP      
;;;293    		}
;;;294    	}   //如果波特率没有确定就上报日志并退出
;;;295    	if((i >= NUMOfCANBaud) && (err != OS_ERR_NONE))
000074  2d03              CMP      r5,#3
000076  db3e              BLT      |L1.246|
000078  f89d000c          LDRB     r0,[sp,#0xc]
00007c  2800              CMP      r0,#0
00007e  d03a              BEQ      |L1.246|
;;;296    	{
;;;297    		LogReport("\r\n11-Baud Test Fail!");
000080  a0c8              ADR      r0,|L1.932|
000082  f7fffffe          BL       LogReport
;;;298    		
;;;299    		ptrOK = Mem_malloc(10);
000086  200a              MOVS     r0,#0xa
000088  f7fffffe          BL       Mem_malloc
00008c  4604              MOV      r4,r0
;;;300    		ptrOK[0] = 3;
00008e  2003              MOVS     r0,#3
000090  7020              STRB     r0,[r4,#0]
;;;301    		ptrOK[1] = 0x50;
000092  2050              MOVS     r0,#0x50
000094  7060              STRB     r0,[r4,#1]
;;;302    		ptrOK[2] = 0x20;
000096  2020              MOVS     r0,#0x20
000098  70a0              STRB     r0,[r4,#2]
;;;303    		
;;;304    		OSMutexPend(CDMASendMutex,0,&err);
00009a  aa03              ADD      r2,sp,#0xc
00009c  2100              MOVS     r1,#0
00009e  48c7              LDR      r0,|L1.956|
0000a0  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0000a2  f7fffffe          BL       OSMutexPend
;;;305    		memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrOK,ptrOK[0]);
0000a6  49c6              LDR      r1,|L1.960|
0000a8  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0000aa  684b              LDR      r3,[r1,#4]
0000ac  49b3              LDR      r1,|L1.892|
0000ae  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
0000b2  311b              ADDS     r1,r1,#0x1b
0000b4  1858              ADDS     r0,r3,r1
0000b6  7822              LDRB     r2,[r4,#0]
0000b8  4621              MOV      r1,r4
0000ba  f7fffffe          BL       __aeabi_memcpy
;;;306    		cdmaDataToSend->datLength += ptrOK[0];
0000be  48c0              LDR      r0,|L1.960|
0000c0  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0000c2  8800              LDRH     r0,[r0,#0]
0000c4  7821              LDRB     r1,[r4,#0]
0000c6  4408              ADD      r0,r0,r1
0000c8  49bd              LDR      r1,|L1.960|
0000ca  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0000cc  8008              STRH     r0,[r1,#0]
;;;307    		varOperation.datOKLeng    += ptrOK[0];
0000ce  48ab              LDR      r0,|L1.892|
0000d0  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
0000d4  7821              LDRB     r1,[r4,#0]
0000d6  4408              ADD      r0,r0,r1
0000d8  49a8              LDR      r1,|L1.892|
0000da  f8a10096          STRH     r0,[r1,#0x96]
;;;308    		OSMutexPost(CDMASendMutex);
0000de  48b7              LDR      r0,|L1.956|
0000e0  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0000e2  f7fffffe          BL       OSMutexPost
;;;309    		
;;;310    		Mem_free(ptrOK);
0000e6  4620              MOV      r0,r4
0000e8  f7fffffe          BL       Mem_free
;;;311    		varOperation.canTest = 0;
0000ec  2000              MOVS     r0,#0
0000ee  49a3              LDR      r1,|L1.892|
0000f0  f8a10091          STRH     r0,[r1,#0x91]
;;;312    		
;;;313    		goto idOK;
0000f4  e139              B        |L1.874|
                  |L1.246|
;;;314    	}
;;;315    	dataToSend.ide = CAN_ID_EXT;
0000f6  2004              MOVS     r0,#4
0000f8  49b2              LDR      r1,|L1.964|
0000fa  6048              STR      r0,[r1,#4]  ; dataToSend
;;;316    	for(i=0;i<NUMOfCANID_EXT;i++)
0000fc  2500              MOVS     r5,#0
0000fe  e0ee              B        |L1.734|
                  |L1.256|
;;;317    	{
;;;318    		varOperation.canRxId  =(canIdExt[i].canID >> 24) & 0x000000FF;
000100  eb050045          ADD      r0,r5,r5,LSL #1
000104  49b0              LDR      r1,|L1.968|
000106  f8510020          LDR      r0,[r1,r0,LSL #2]
00010a  0e00              LSRS     r0,r0,#24
00010c  499b              LDR      r1,|L1.892|
00010e  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;319    		varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i].canID >> 16) & 0x000000FF);
000112  eb050045          ADD      r0,r5,r5,LSL #1
000116  49ac              LDR      r1,|L1.968|
000118  f8510020          LDR      r0,[r1,r0,LSL #2]
00011c  f3c04007          UBFX     r0,r0,#16,#8
000120  4996              LDR      r1,|L1.892|
000122  f8d1108c          LDR      r1,[r1,#0x8c]  ; varOperation
000126  eb002001          ADD      r0,r0,r1,LSL #8
00012a  4994              LDR      r1,|L1.892|
00012c  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;320    		varOperation.canRxId  =(varOperation.canRxId  << 8)+(canIdExt[i].canID & 0x000000FF);
000130  4608              MOV      r0,r1
000132  f8d0108c          LDR      r1,[r0,#0x8c]  ; varOperation
000136  eb050045          ADD      r0,r5,r5,LSL #1
00013a  4aa3              LDR      r2,|L1.968|
00013c  f8520020          LDR      r0,[r2,r0,LSL #2]
000140  f361201f          BFI      r0,r1,#8,#24
000144  498d              LDR      r1,|L1.892|
000146  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;321    		varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i].canID >> 8) & 0x000000FF);
00014a  eb050045          ADD      r0,r5,r5,LSL #1
00014e  4611              MOV      r1,r2
000150  f8310020          LDRH     r0,[r1,r0,LSL #2]
000154  f3c02007          UBFX     r0,r0,#8,#8
000158  4988              LDR      r1,|L1.892|
00015a  f8d1108c          LDR      r1,[r1,#0x8c]  ; varOperation
00015e  eb002001          ADD      r0,r0,r1,LSL #8
000162  4986              LDR      r1,|L1.892|
000164  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;322    		
;;;323    		CAN_DeInit(CAN1);
000168  4885              LDR      r0,|L1.896|
00016a  f7fffffe          BL       CAN_DeInit
;;;324    		CAN_StructInit(&CAN_InitStructure);
00016e  4668              MOV      r0,sp
000170  f7fffffe          BL       CAN_StructInit
;;;325    		CAN1_BaudSet(canDataConfig.canBaud);
000174  4985              LDR      r1,|L1.908|
000176  7c88              LDRB     r0,[r1,#0x12]  ; canDataConfig
000178  f7fffffe          BL       CAN1_BaudSet
;;;326    		CAN1_SetFilter(varOperation.canRxId ,CAN_ID_EXT);
00017c  497f              LDR      r1,|L1.892|
00017e  f8d1008c          LDR      r0,[r1,#0x8c]  ; varOperation
000182  2104              MOVS     r1,#4
000184  f7fffffe          BL       CAN1_SetFilter
;;;327    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
000188  2201              MOVS     r2,#1
00018a  2110              MOVS     r1,#0x10
00018c  487c              LDR      r0,|L1.896|
00018e  f7fffffe          BL       CAN_ITConfig
;;;328    		
;;;329    		varOperation.canTest = 0;
000192  2000              MOVS     r0,#0
000194  4979              LDR      r1,|L1.892|
000196  f8a10091          STRH     r0,[r1,#0x91]
;;;330    		dataToSend.canId = canIdExt[i].canID;
00019a  eb050045          ADD      r0,r5,r5,LSL #1
00019e  498a              LDR      r1,|L1.968|
0001a0  f8510020          LDR      r0,[r1,r0,LSL #2]
0001a4  4987              LDR      r1,|L1.964|
0001a6  6008              STR      r0,[r1,#0]  ; dataToSend
;;;331    		dataToSend.ide     = CAN_ID_EXT;
0001a8  2004              MOVS     r0,#4
0001aa  6048              STR      r0,[r1,#4]  ; dataToSend
;;;332    		temp = ReadECUVersion((uint8_t *)canIdExt[i].pidVerCmd); 
0001ac  eb050145          ADD      r1,r5,r5,LSL #1
0001b0  4a85              LDR      r2,|L1.968|
0001b2  eb020181          ADD      r1,r2,r1,LSL #2
0001b6  1d08              ADDS     r0,r1,#4
0001b8  f7fffffe          BL       ReadECUVersion
0001bc  4606              MOV      r6,r0
;;;333    	    if(temp != 200)                       //版本号读取成功
0001be  2ec8              CMP      r6,#0xc8
0001c0  d07e              BEQ      |L1.704|
;;;334    		{
;;;335    			i=0;
0001c2  2500              MOVS     r5,#0
;;;336    			ptrOK = Mem_malloc(60);
0001c4  203c              MOVS     r0,#0x3c
0001c6  f7fffffe          BL       Mem_malloc
0001ca  4604              MOV      r4,r0
;;;337    			ptrOK[i++] = 32;
0001cc  2220              MOVS     r2,#0x20
0001ce  4629              MOV      r1,r5
0001d0  1c6d              ADDS     r5,r5,#1
0001d2  5462              STRB     r2,[r4,r1]
;;;338    			ptrOK[i++] = 0x50;
0001d4  2250              MOVS     r2,#0x50
0001d6  4629              MOV      r1,r5
0001d8  1c6d              ADDS     r5,r5,#1
0001da  5462              STRB     r2,[r4,r1]
;;;339    			ptrOK[i++] = 0x13;
0001dc  2213              MOVS     r2,#0x13
0001de  4629              MOV      r1,r5
0001e0  1c6d              ADDS     r5,r5,#1
0001e2  5462              STRB     r2,[r4,r1]
;;;340    			ptrOK[i++] = canDataConfig.canBaud;
0001e4  4869              LDR      r0,|L1.908|
0001e6  7c82              LDRB     r2,[r0,#0x12]  ; canDataConfig
0001e8  4629              MOV      r1,r5
0001ea  1c6d              ADDS     r5,r5,#1
0001ec  5462              STRB     r2,[r4,r1]
;;;341    			ptrOK[i++] = (varOperation.canRxId>>24) & 0x000000FF;ptrOK[i++] = (varOperation.canRxId>>16) & 0x000000FF;
0001ee  4863              LDR      r0,|L1.892|
0001f0  f8d0008c          LDR      r0,[r0,#0x8c]  ; varOperation
0001f4  0e01              LSRS     r1,r0,#24
0001f6  462a              MOV      r2,r5
0001f8  1c6d              ADDS     r5,r5,#1
0001fa  54a1              STRB     r1,[r4,r2]
0001fc  485f              LDR      r0,|L1.892|
0001fe  f8d0008c          LDR      r0,[r0,#0x8c]  ; varOperation
000202  f3c04207          UBFX     r2,r0,#16,#8
000206  4629              MOV      r1,r5
000208  1c6d              ADDS     r5,r5,#1
00020a  5462              STRB     r2,[r4,r1]
;;;342    			ptrOK[i++] = (varOperation.canRxId>>8) & 0x000000FF;ptrOK[i++] = (varOperation.canRxId>>0) & 0x000000FF;
00020c  485b              LDR      r0,|L1.892|
00020e  f8b0008c          LDRH     r0,[r0,#0x8c]  ; varOperation
000212  f3c02207          UBFX     r2,r0,#8,#8
000216  4629              MOV      r1,r5
000218  1c6d              ADDS     r5,r5,#1
00021a  5462              STRB     r2,[r4,r1]
00021c  4857              LDR      r0,|L1.892|
00021e  f890208c          LDRB     r2,[r0,#0x8c]  ; varOperation
000222  4628              MOV      r0,r5
000224  1c69              ADDS     r1,r5,#1
000226  b2cd              UXTB     r5,r1
000228  5422              STRB     r2,[r4,r0]
;;;343    			ptrOK[i++] = (dataToSend.canId>>24) & 0x000000FF;ptrOK[i++] = (dataToSend.canId>>16) & 0x000000FF;
00022a  4866              LDR      r0,|L1.964|
00022c  6800              LDR      r0,[r0,#0]  ; dataToSend
00022e  0e00              LSRS     r0,r0,#24
000230  4629              MOV      r1,r5
000232  1c6a              ADDS     r2,r5,#1
000234  b2d5              UXTB     r5,r2
000236  5460              STRB     r0,[r4,r1]
000238  4862              LDR      r0,|L1.964|
00023a  6800              LDR      r0,[r0,#0]  ; dataToSend
00023c  f3c04207          UBFX     r2,r0,#16,#8
000240  4628              MOV      r0,r5
000242  1c69              ADDS     r1,r5,#1
000244  b2cd              UXTB     r5,r1
000246  5422              STRB     r2,[r4,r0]
;;;344    			ptrOK[i++] = (dataToSend.canId>>8) & 0x000000FF;ptrOK[i++] = (dataToSend.canId>>0) & 0x000000FF;
000248  485e              LDR      r0,|L1.964|
00024a  8800              LDRH     r0,[r0,#0]  ; dataToSend
00024c  f3c02207          UBFX     r2,r0,#8,#8
000250  4628              MOV      r0,r5
000252  1c69              ADDS     r1,r5,#1
000254  b2cd              UXTB     r5,r1
000256  5422              STRB     r2,[r4,r0]
000258  485a              LDR      r0,|L1.964|
00025a  7802              LDRB     r2,[r0,#0]  ; dataToSend
00025c  4628              MOV      r0,r5
00025e  1c69              ADDS     r1,r5,#1
000260  b2cd              UXTB     r5,r1
000262  5422              STRB     r2,[r4,r0]
;;;345    			memcpy(&ptrOK[i],varOperation.ecuVersion,20);
000264  1960              ADDS     r0,r4,r5
000266  2214              MOVS     r2,#0x14
000268  4944              LDR      r1,|L1.892|
00026a  3164              ADDS     r1,r1,#0x64
00026c  f7fffffe          BL       __aeabi_memcpy
;;;346    			
;;;347    			OSMutexPend(CDMASendMutex,0,&err);
000270  aa03              ADD      r2,sp,#0xc
000272  2100              MOVS     r1,#0
000274  4851              LDR      r0,|L1.956|
000276  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000278  f7fffffe          BL       OSMutexPend
;;;348    			memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrOK,ptrOK[0]);
00027c  4950              LDR      r1,|L1.960|
00027e  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000280  684b              LDR      r3,[r1,#4]
000282  493e              LDR      r1,|L1.892|
000284  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
000288  311b              ADDS     r1,r1,#0x1b
00028a  1858              ADDS     r0,r3,r1
00028c  7822              LDRB     r2,[r4,#0]
00028e  4621              MOV      r1,r4
000290  f7fffffe          BL       __aeabi_memcpy
;;;349    			cdmaDataToSend->datLength += ptrOK[0];
000294  484a              LDR      r0,|L1.960|
000296  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000298  8800              LDRH     r0,[r0,#0]
00029a  7821              LDRB     r1,[r4,#0]
00029c  4408              ADD      r0,r0,r1
00029e  4948              LDR      r1,|L1.960|
0002a0  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0002a2  8008              STRH     r0,[r1,#0]
;;;350    			varOperation.datOKLeng += ptrOK[0];
0002a4  4835              LDR      r0,|L1.892|
0002a6  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
0002aa  7821              LDRB     r1,[r4,#0]
0002ac  4408              ADD      r0,r0,r1
0002ae  4933              LDR      r1,|L1.892|
0002b0  f8a10096          STRH     r0,[r1,#0x96]
;;;351    			OSMutexPost(CDMASendMutex);
0002b4  4841              LDR      r0,|L1.956|
0002b6  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0002b8  f7fffffe          BL       OSMutexPost
;;;352    			
;;;353    			Mem_free(ptrOK);
0002bc  4620              MOV      r0,r4
0002be  e000              B        |L1.706|
                  |L1.704|
0002c0  e00b              B        |L1.730|
                  |L1.706|
0002c2  f7fffffe          BL       Mem_free
;;;354    			memcpy(canDataConfig.pidVerCmd,canIdExt[i].pidVerCmd,4);//todo:保存当前读取版本号的指令
0002c6  eb050045          ADD      r0,r5,r5,LSL #1
0002ca  493f              LDR      r1,|L1.968|
0002cc  eb010180          ADD      r1,r1,r0,LSL #2
0002d0  482e              LDR      r0,|L1.908|
0002d2  6849              LDR      r1,[r1,#4]
0002d4  f8c01013          STR      r1,[r0,#0x13]  ; canDataConfig
;;;355    			break;
0002d8  e004              B        |L1.740|
                  |L1.730|
0002da  1c68              ADDS     r0,r5,#1              ;316
0002dc  b2c5              UXTB     r5,r0                 ;316
                  |L1.734|
0002de  2d0b              CMP      r5,#0xb               ;316
0002e0  f6ffaf0e          BLT      |L1.256|
                  |L1.740|
0002e4  bf00              NOP      
;;;356    		}
;;;357    	}
;;;358    	if(varOperation.canTest == 0)
0002e6  4825              LDR      r0,|L1.892|
0002e8  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
0002ec  2800              CMP      r0,#0
0002ee  d13b              BNE      |L1.872|
;;;359    	{
;;;360    		LogReport("\r\n12-CAN Test Fail!");
0002f0  a036              ADR      r0,|L1.972|
0002f2  f7fffffe          BL       LogReport
;;;361    		varOperation.isStrenOilOK = 0;
0002f6  2000              MOVS     r0,#0
0002f8  4920              LDR      r1,|L1.892|
0002fa  f8810099          STRB     r0,[r1,#0x99]
;;;362    		ptrOK = Mem_malloc(10);
0002fe  200a              MOVS     r0,#0xa
000300  f7fffffe          BL       Mem_malloc
000304  4604              MOV      r4,r0
;;;363    		ptrOK[0] = 3;
000306  2003              MOVS     r0,#3
000308  7020              STRB     r0,[r4,#0]
;;;364    		ptrOK[1] = 0x50;
00030a  2050              MOVS     r0,#0x50
00030c  7060              STRB     r0,[r4,#1]
;;;365    		ptrOK[2] = 0x20;
00030e  2020              MOVS     r0,#0x20
000310  70a0              STRB     r0,[r4,#2]
;;;366    		
;;;367    		OSMutexPend(CDMASendMutex,0,&err);
000312  aa03              ADD      r2,sp,#0xc
000314  2100              MOVS     r1,#0
000316  4829              LDR      r0,|L1.956|
000318  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00031a  f7fffffe          BL       OSMutexPend
;;;368    		memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrOK,ptrOK[0]);
00031e  4928              LDR      r1,|L1.960|
000320  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000322  684b              LDR      r3,[r1,#4]
000324  4915              LDR      r1,|L1.892|
000326  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
00032a  311b              ADDS     r1,r1,#0x1b
00032c  1858              ADDS     r0,r3,r1
00032e  7822              LDRB     r2,[r4,#0]
000330  4621              MOV      r1,r4
000332  f7fffffe          BL       __aeabi_memcpy
;;;369    		cdmaDataToSend->datLength += ptrOK[0];
000336  4822              LDR      r0,|L1.960|
000338  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00033a  8800              LDRH     r0,[r0,#0]
00033c  7821              LDRB     r1,[r4,#0]
00033e  4408              ADD      r0,r0,r1
000340  491f              LDR      r1,|L1.960|
000342  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000344  8008              STRH     r0,[r1,#0]
;;;370    		varOperation.datOKLeng    += ptrOK[0];
000346  480d              LDR      r0,|L1.892|
000348  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
00034c  7821              LDRB     r1,[r4,#0]
00034e  4408              ADD      r0,r0,r1
000350  490a              LDR      r1,|L1.892|
000352  f8a10096          STRH     r0,[r1,#0x96]
;;;371    		OSMutexPost(CDMASendMutex);
000356  4819              LDR      r0,|L1.956|
000358  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00035a  f7fffffe          BL       OSMutexPost
;;;372    		
;;;373    		Mem_free(ptrOK);
00035e  4620              MOV      r0,r4
000360  f7fffffe          BL       Mem_free
                  |L1.868|
;;;374    		return;
;;;375    	}
;;;376    idOK:
;;;377    	varOperation.canTest = 0;      //不再获取 PID 信息
;;;378    	varOperation.isStrenOilOK = 0; //一旦进入自识别，就不能再进行动力提升
;;;379    	
;;;380    	return;
;;;381    }
000364  e8bd81ff          POP      {r0-r8,pc}
                  |L1.872|
000368  bf00              NOP                            ;376
                  |L1.874|
00036a  2000              MOVS     r0,#0                 ;377
00036c  4903              LDR      r1,|L1.892|
00036e  f8a10091          STRH     r0,[r1,#0x91]         ;377
000372  f8810099          STRB     r0,[r1,#0x99]         ;378
000376  bf00              NOP                            ;380
000378  e7f4              B        |L1.868|
;;;382    extern VARConfig* ptrPIDVars;      //指向第二配置区
                          ENDP

00037a  0000              DCW      0x0000
                  |L1.892|
                          DCD      varOperation
                  |L1.896|
                          DCD      0x40006400
                  |L1.900|
                          DCD      canBaudEnum
                  |L1.904|
                          DCD      canRecieveQ
                  |L1.908|
                          DCD      canDataConfig
                  |L1.912|
000390  0d0a3130          DCB      "\r\n10-Test Baud:%d;",0
000394  2d546573
000398  74204261
00039c  75643a25
0003a0  643b00  
0003a3  00                DCB      0
                  |L1.932|
0003a4  0d0a3131          DCB      "\r\n11-Baud Test Fail!",0
0003a8  2d426175
0003ac  64205465
0003b0  73742046
0003b4  61696c21
0003b8  00      
0003b9  00                DCB      0
0003ba  00                DCB      0
0003bb  00                DCB      0
                  |L1.956|
                          DCD      CDMASendMutex
                  |L1.960|
                          DCD      cdmaDataToSend
                  |L1.964|
                          DCD      dataToSend
                  |L1.968|
                          DCD      canIdExt
                  |L1.972|
0003cc  0d0a3132          DCB      "\r\n12-CAN Test Fail!",0
0003d0  2d43414e
0003d4  20546573
0003d8  74204661
0003dc  696c2100

                          AREA ||i.OBDTask||, CODE, READONLY, ALIGN=2

                  OBDTask PROC
;;;13     
;;;14     void OBDTask(void *pdata)
000000  b086              SUB      sp,sp,#0x18
;;;15     {
;;;16     	INT8U     err;
;;;17     	uint8_t   i      = 0;
000002  2700              MOVS     r7,#0
;;;18     	uint8_t   cmdLen = 0;        //封包的时候要减去指令的长度
000004  46b8              MOV      r8,r7
;;;19     	uint8_t   cmdNum = 0;        //指令序号
000006  2600              MOVS     r6,#0
;;;20     	uint8_t   cmdManyPackNum = 0;//要接受的多包的数量
000008  46b2              MOV      r10,r6
;;;21     	CanRxMsg* CAN1_RxMsg;        //指向接收到的OBD信息
;;;22     	uint8_t * can1_Txbuff;       //指向要发送的OBD信息
;;;23     	uint8_t * ptrSaveBuff;       //
;;;24     	CAN1Config();                //CAN 配置
00000a  f7fffffe          BL       CAN1Config
;;;25     	OSTimeDlyHMSM(0,0,10,4);     
00000e  2304              MOVS     r3,#4
000010  220a              MOVS     r2,#0xa
000012  2100              MOVS     r1,#0
000014  4608              MOV      r0,r1
000016  f7fffffe          BL       OSTimeDlyHMSM
;;;26     	TestServer();                //测试服务器
00001a  f7fffffe          BL       TestServer
;;;27     	while(1)
00001e  e1ed              B        |L2.1020|
                  |L2.32|
;;;28     	{	
;;;29     		StrengthFuel();
000020  f7fffffe          BL       StrengthFuel
;;;30     		if((varOperation.canTest == 0)||(varOperation.pidTset == 1))      //配置文件不成功，则停止CAN，或者在测试PID指令
000024  48f6              LDR      r0,|L2.1024|
000026  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
00002a  b120              CBZ      r0,|L2.54|
00002c  48f4              LDR      r0,|L2.1024|
00002e  f8900093          LDRB     r0,[r0,#0x93]  ; varOperation
000032  2801              CMP      r0,#1
000034  d106              BNE      |L2.68|
                  |L2.54|
;;;31     		{
;;;32     			OSTimeDlyHMSM(0,0,1,0);	
000036  2300              MOVS     r3,#0
000038  2201              MOVS     r2,#1
00003a  4619              MOV      r1,r3
00003c  4618              MOV      r0,r3
00003e  f7fffffe          BL       OSTimeDlyHMSM
;;;33     			continue;
000042  e1db              B        |L2.1020|
                  |L2.68|
;;;34     		}	 
;;;35     		can1_Txbuff = OSQPend(canSendQ,1000,&err);                        //收到 PID 指令，进行发送
000044  aa05              ADD      r2,sp,#0x14
000046  f44f717a          MOV      r1,#0x3e8
00004a  48ee              LDR      r0,|L2.1028|
00004c  6800              LDR      r0,[r0,#0]  ; canSendQ
00004e  f7fffffe          BL       OSQPend
000052  4681              MOV      r9,r0
;;;36     		if(err != OS_ERR_NONE)
000054  f89d0014          LDRB     r0,[sp,#0x14]
000058  b100              CBZ      r0,|L2.92|
;;;37     			continue;
00005a  e1cf              B        |L2.1020|
                  |L2.92|
;;;38     		cmdNum = can1_Txbuff[0];  //记录PID指令序号
00005c  f8996000          LDRB     r6,[r9,#0]
;;;39     		cmdLen = can1_Txbuff[1];  //记录PID指令长度
000060  f8998001          LDRB     r8,[r9,#1]
;;;40     		
;;;41     		dataToSend.pdat = &can1_Txbuff[1];   
000064  f1090001          ADD      r0,r9,#1
000068  49e7              LDR      r1,|L2.1032|
00006a  6088              STR      r0,[r1,#8]  ; dataToSend
;;;42     		OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);//发送PID指令
00006c  460b              MOV      r3,r1
00006e  689a              LDR      r2,[r3,#8]  ; dataToSend
000070  6859              LDR      r1,[r3,#4]  ; dataToSend
000072  6818              LDR      r0,[r3,#0]  ; dataToSend
000074  f7fffffe          BL       OBD_CAN_SendData
;;;43     		
;;;44     		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err); // 接收到OBD回复
000078  aa05              ADD      r2,sp,#0x14
00007a  f44f71fa          MOV      r1,#0x1f4
00007e  48e3              LDR      r0,|L2.1036|
000080  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000082  f7fffffe          BL       OSQPend
000086  4604              MOV      r4,r0
;;;45     		if(err == OS_ERR_NONE)
000088  f89d0014          LDRB     r0,[sp,#0x14]
00008c  2800              CMP      r0,#0
00008e  d17d              BNE      |L2.396|
;;;46     		{
;;;47     			freOBDLed = LEDSLOW;                    // OBD 初始化成功
000090  f44f707a          MOV      r0,#0x3e8
000094  49de              LDR      r1,|L2.1040|
000096  8008              STRH     r0,[r1,#0]
;;;48     			if(CAN1_RxMsg->Data[0] == 0x10)         // 多包处理
000098  7ae0              LDRB     r0,[r4,#0xb]
00009a  2810              CMP      r0,#0x10
00009c  d177              BNE      |L2.398|
;;;49     			{
;;;50     				ptrSaveBuff = Mem_malloc(CAN1_RxMsg->Data[1] + 10);       //申请的内存块足够长
00009e  7b21              LDRB     r1,[r4,#0xc]
0000a0  f101000a          ADD      r0,r1,#0xa
0000a4  f7fffffe          BL       Mem_malloc
0000a8  4605              MOV      r5,r0
;;;51     				if(ptrSaveBuff != NULL)
0000aa  2d00              CMP      r5,#0
0000ac  d070              BEQ      |L2.400|
;;;52     				{
;;;53     					ptrSaveBuff[0] = CAN1_RxMsg -> Data[1] + 4;
0000ae  7b20              LDRB     r0,[r4,#0xc]
0000b0  1d00              ADDS     r0,r0,#4
0000b2  7028              STRB     r0,[r5,#0]
;;;54     					ptrSaveBuff[1] = 0x60;
0000b4  2060              MOVS     r0,#0x60
0000b6  7068              STRB     r0,[r5,#1]
;;;55     					ptrSaveBuff[2] = cmdNum;
0000b8  70ae              STRB     r6,[r5,#2]
;;;56     					ptrSaveBuff[3] = CAN1_RxMsg -> Data[1];              //故障码长度
0000ba  7b20              LDRB     r0,[r4,#0xc]
0000bc  70e8              STRB     r0,[r5,#3]
;;;57     					
;;;58     					memcpy(&ptrSaveBuff[4],&CAN1_RxMsg->Data[2],6);
0000be  f8d4100d          LDR      r1,[r4,#0xd]
0000c2  6069              STR      r1,[r5,#4]
0000c4  f8b40011          LDRH     r0,[r4,#0x11]
0000c8  8128              STRH     r0,[r5,#8]
;;;59     					cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6) % 7 == 0 ? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
0000ca  7b20              LDRB     r0,[r4,#0xc]
0000cc  1f80              SUBS     r0,r0,#6
0000ce  2107              MOVS     r1,#7
0000d0  fb90f2f1          SDIV     r2,r0,r1
0000d4  fb010012          MLS      r0,r1,r2,r0
0000d8  b920              CBNZ     r0,|L2.228|
0000da  7b20              LDRB     r0,[r4,#0xc]
0000dc  1f80              SUBS     r0,r0,#6
0000de  fb90f0f1          SDIV     r0,r0,r1
0000e2  e005              B        |L2.240|
                  |L2.228|
0000e4  7b20              LDRB     r0,[r4,#0xc]
0000e6  1f80              SUBS     r0,r0,#6
0000e8  2107              MOVS     r1,#7
0000ea  fb90f0f1          SDIV     r0,r0,r1
0000ee  1c40              ADDS     r0,r0,#1
                  |L2.240|
0000f0  f0000aff          AND      r10,r0,#0xff
;;;60     					Mem_free(CAN1_RxMsg);
0000f4  4620              MOV      r0,r4
0000f6  f7fffffe          BL       Mem_free
;;;61     					
;;;62     					dataToSend.pdat = pidManyBag;                    //发送 0x30 请求接下来的多包
0000fa  48c6              LDR      r0,|L2.1044|
0000fc  49c2              LDR      r1,|L2.1032|
0000fe  6088              STR      r0,[r1,#8]  ; dataToSend
;;;63     					OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
000100  460b              MOV      r3,r1
000102  689a              LDR      r2,[r3,#8]  ; dataToSend
000104  6859              LDR      r1,[r3,#4]  ; dataToSend
000106  6818              LDR      r0,[r3,#0]  ; dataToSend
000108  f7fffffe          BL       OBD_CAN_SendData
;;;64     					
;;;65     					for(i = 0;i < cmdManyPackNum;i++)
00010c  2700              MOVS     r7,#0
00010e  e01a              B        |L2.326|
                  |L2.272|
;;;66     					{
;;;67     						CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);   //接收多包
000110  aa05              ADD      r2,sp,#0x14
000112  2119              MOVS     r1,#0x19
000114  48bd              LDR      r0,|L2.1036|
000116  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000118  f7fffffe          BL       OSQPend
00011c  4604              MOV      r4,r0
;;;68     						if(err == OS_ERR_NONE)
00011e  f89d0014          LDRB     r0,[sp,#0x14]
000122  b968              CBNZ     r0,|L2.320|
;;;69     						{
;;;70     							memcpy(&ptrSaveBuff[7*i + 10],&CAN1_RxMsg->Data[1],7);
000124  ebc700c7          RSB      r0,r7,r7,LSL #3
000128  300a              ADDS     r0,r0,#0xa
00012a  1941              ADDS     r1,r0,r5
00012c  68e2              LDR      r2,[r4,#0xc]
00012e  600a              STR      r2,[r1,#0]
000130  8a22              LDRH     r2,[r4,#0x10]
000132  808a              STRH     r2,[r1,#4]
000134  7ca0              LDRB     r0,[r4,#0x12]
000136  7188              STRB     r0,[r1,#6]
;;;71     							Mem_free(CAN1_RxMsg);
000138  4620              MOV      r0,r4
00013a  f7fffffe          BL       Mem_free
00013e  e000              B        |L2.322|
                  |L2.320|
;;;72     						}
;;;73     						else 
;;;74     							break;
000140  e003              B        |L2.330|
                  |L2.322|
000142  1c78              ADDS     r0,r7,#1              ;65
000144  b2c7              UXTB     r7,r0                 ;65
                  |L2.326|
000146  4557              CMP      r7,r10                ;65
000148  dbe2              BLT      |L2.272|
                  |L2.330|
00014a  bf00              NOP      
;;;75     					} 
;;;76     					if(i == cmdManyPackNum)
00014c  4557              CMP      r7,r10
00014e  d129              BNE      |L2.420|
;;;77     					{
;;;78     						OSMutexPend(CDMASendMutex,0,&err);
000150  aa05              ADD      r2,sp,#0x14
000152  2100              MOVS     r1,#0
000154  48b0              LDR      r0,|L2.1048|
000156  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000158  f7fffffe          BL       OSMutexPend
;;;79     						
;;;80     						memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrSaveBuff,ptrSaveBuff[0]);
00015c  49af              LDR      r1,|L2.1052|
00015e  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000160  684b              LDR      r3,[r1,#4]
000162  49a7              LDR      r1,|L2.1024|
000164  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
000168  311b              ADDS     r1,r1,#0x1b
00016a  1858              ADDS     r0,r3,r1
00016c  782a              LDRB     r2,[r5,#0]
00016e  4629              MOV      r1,r5
000170  f7fffffe          BL       __aeabi_memcpy
;;;81     						cdmaDataToSend->datLength += ptrSaveBuff[0];
000174  48a9              LDR      r0,|L2.1052|
000176  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000178  8800              LDRH     r0,[r0,#0]
00017a  7829              LDRB     r1,[r5,#0]
00017c  4408              ADD      r0,r0,r1
00017e  49a7              LDR      r1,|L2.1052|
000180  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000182  8008              STRH     r0,[r1,#0]
;;;82     						varOperation.datOKLeng += ptrSaveBuff[0];    //记录不可拆卸的包长度
000184  489e              LDR      r0,|L2.1024|
000186  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
00018a  e002              B        |L2.402|
                  |L2.396|
00018c  e12b              B        |L2.998|
                  |L2.398|
00018e  e00d              B        |L2.428|
                  |L2.400|
000190  e130              B        |L2.1012|
                  |L2.402|
000192  7829              LDRB     r1,[r5,#0]
000194  4408              ADD      r0,r0,r1
000196  499a              LDR      r1,|L2.1024|
000198  f8a10096          STRH     r0,[r1,#0x96]
;;;83     						
;;;84     						OSMutexPost(CDMASendMutex);
00019c  489e              LDR      r0,|L2.1048|
00019e  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0001a0  f7fffffe          BL       OSMutexPost
                  |L2.420|
;;;85     					}
;;;86     //					PIDVarGet(cmdNum,&ptrSaveBuff[3]);
;;;87     					Mem_free(ptrSaveBuff);
0001a4  4628              MOV      r0,r5
0001a6  f7fffffe          BL       Mem_free
0001aa  e123              B        |L2.1012|
                  |L2.428|
;;;88     				}
;;;89     			}
;;;90     			else  //单包处理
;;;91     			{
;;;92     				if(CAN1_RxMsg->Data[0] > cmdLen)
0001ac  7ae0              LDRB     r0,[r4,#0xb]
0001ae  4540              CMP      r0,r8
0001b0  dd55              BLE      |L2.606|
;;;93     				{
;;;94     					OSMutexPend(CDMASendMutex,0,&err);
0001b2  aa05              ADD      r2,sp,#0x14
0001b4  2100              MOVS     r1,#0
0001b6  4898              LDR      r0,|L2.1048|
0001b8  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0001ba  f7fffffe          BL       OSMutexPend
;;;95     					// todo: 限制数据长度，不能越界
;;;96     					pPid[cmdNum - 1][3]  = CAN1_RxMsg->Data[0] - cmdLen;
0001be  7ae0              LDRB     r0,[r4,#0xb]
0001c0  eba00008          SUB      r0,r0,r8
0001c4  b2c1              UXTB     r1,r0
0001c6  1e70              SUBS     r0,r6,#1
0001c8  4a95              LDR      r2,|L2.1056|
0001ca  f8520020          LDR      r0,[r2,r0,LSL #2]
0001ce  70c1              STRB     r1,[r0,#3]
;;;97     					if((cmdNum<12&&pPid[cmdNum - 1][0]<58)||(cmdNum>11&&pPid[cmdNum - 1][0]<30))
0001d0  2e0c              CMP      r6,#0xc
0001d2  da06              BGE      |L2.482|
0001d4  1e70              SUBS     r0,r6,#1
0001d6  4611              MOV      r1,r2
0001d8  f8510020          LDR      r0,[r1,r0,LSL #2]
0001dc  7800              LDRB     r0,[r0,#0]
0001de  283a              CMP      r0,#0x3a
0001e0  db08              BLT      |L2.500|
                  |L2.482|
0001e2  2e0b              CMP      r6,#0xb
0001e4  dd36              BLE      |L2.596|
0001e6  1e70              SUBS     r0,r6,#1
0001e8  498d              LDR      r1,|L2.1056|
0001ea  f8510020          LDR      r0,[r1,r0,LSL #2]
0001ee  7800              LDRB     r0,[r0,#0]
0001f0  281e              CMP      r0,#0x1e
0001f2  da2f              BGE      |L2.596|
                  |L2.500|
;;;98     					{
;;;99     						memcpy(&pPid[cmdNum - 1][pPid[cmdNum - 1][0]],&CAN1_RxMsg->Data[cmdLen + 1],(CAN1_RxMsg->Data[0] - cmdLen));
0001f4  1e73              SUBS     r3,r6,#1
0001f6  f8dfc228          LDR      r12,|L2.1056|
0001fa  f85cc023          LDR      r12,[r12,r3,LSL #2]
0001fe  f8dfb220          LDR      r11,|L2.1056|
000202  f85b3023          LDR      r3,[r11,r3,LSL #2]
000206  781b              LDRB     r3,[r3,#0]
000208  eb0c0003          ADD      r0,r12,r3
00020c  7ae3              LDRB     r3,[r4,#0xb]
00020e  eba30208          SUB      r2,r3,r8
000212  f104030b          ADD      r3,r4,#0xb
000216  f1080c01          ADD      r12,r8,#1
00021a  eb03010c          ADD      r1,r3,r12
00021e  f7fffffe          BL       __aeabi_memcpy
;;;100    						pPid[cmdNum - 1][0] += CAN1_RxMsg->Data[0] - cmdLen;
000222  1e70              SUBS     r0,r6,#1
000224  4659              MOV      r1,r11
000226  f8510020          LDR      r0,[r1,r0,LSL #2]
00022a  7800              LDRB     r0,[r0,#0]
00022c  7ae1              LDRB     r1,[r4,#0xb]
00022e  eba10108          SUB      r1,r1,r8
000232  4408              ADD      r0,r0,r1
000234  b2c1              UXTB     r1,r0
000236  1e70              SUBS     r0,r6,#1
000238  465a              MOV      r2,r11
00023a  f8520020          LDR      r0,[r2,r0,LSL #2]
00023e  7001              STRB     r1,[r0,#0]
;;;101    						cdmaDataToSend->datLength += CAN1_RxMsg->Data[0] - cmdLen;
000240  4876              LDR      r0,|L2.1052|
000242  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000244  8800              LDRH     r0,[r0,#0]
000246  7ae1              LDRB     r1,[r4,#0xb]
000248  eba10108          SUB      r1,r1,r8
00024c  4408              ADD      r0,r0,r1
00024e  4973              LDR      r1,|L2.1052|
000250  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000252  8008              STRH     r0,[r1,#0]
                  |L2.596|
;;;102    					}
;;;103    					OSMutexPost(CDMASendMutex);
000254  4870              LDR      r0,|L2.1048|
000256  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000258  f7fffffe          BL       OSMutexPost
                  |L2.604|
00025c  e0bf              B        |L2.990|
                  |L2.606|
;;;104    //					PIDVarGet(cmdNum,&CAN1_RxMsg->Data[cmdLen + 1]);
;;;105    				}
;;;106    				else if((CAN1_RxMsg->Data[0]==0x03)&&(CAN1_RxMsg->Data[1]==0x7F))
00025e  7ae0              LDRB     r0,[r4,#0xb]
000260  2803              CMP      r0,#3
000262  d1fb              BNE      |L2.604|
000264  7b20              LDRB     r0,[r4,#0xc]
000266  287f              CMP      r0,#0x7f
000268  d1f8              BNE      |L2.604|
;;;107    				{
;;;108    					if(cmdNum != 10)
00026a  2e0a              CMP      r6,#0xa
00026c  d00e              BEQ      |L2.652|
;;;109    						LogReport("\r\n05-ECU report:03 7F;PID:%d err:%d,%d,%d,%d,%d,%d;",cmdNum,
00026e  7ca0              LDRB     r0,[r4,#0x12]
000270  7c62              LDRB     r2,[r4,#0x11]
000272  7c21              LDRB     r1,[r4,#0x10]
000274  7be3              LDRB     r3,[r4,#0xf]
000276  e9cd3100          STRD     r3,r1,[sp,#0]
00027a  e9cd2002          STRD     r2,r0,[sp,#8]
00027e  7ba3              LDRB     r3,[r4,#0xe]
000280  7b62              LDRB     r2,[r4,#0xd]
000282  4631              MOV      r1,r6
000284  a067              ADR      r0,|L2.1060|
000286  f7fffffe          BL       LogReport
00028a  e0a8              B        |L2.990|
                  |L2.652|
;;;110    							CAN1_RxMsg->Data[2],CAN1_RxMsg -> Data[3],CAN1_RxMsg->Data[4],CAN1_RxMsg->Data[5],
;;;111    							CAN1_RxMsg->Data[6],CAN1_RxMsg -> Data[7]);
;;;112    					else if(cmdNum == 10 && strengthFuelFlash.modeOrder == 2)//重汽故障码读取  03 7F 78
00028c  2e0a              CMP      r6,#0xa
00028e  d1e5              BNE      |L2.604|
000290  4871              LDR      r0,|L2.1112|
000292  f890003a          LDRB     r0,[r0,#0x3a]  ; strengthFuelFlash
000296  2802              CMP      r0,#2
000298  d1e0              BNE      |L2.604|
;;;113    					{
;;;114    						Mem_free(CAN1_RxMsg);
00029a  4620              MOV      r0,r4
00029c  f7fffffe          BL       Mem_free
;;;115    						varOperation.pidRun = 0;//停止发送PID指令
0002a0  2000              MOVS     r0,#0
0002a2  4957              LDR      r1,|L2.1024|
0002a4  f8810095          STRB     r0,[r1,#0x95]
;;;116    						CAN1_RxMsg = OSQPend(canRecieveQ,2000,&err); // 接收到OBD回复
0002a8  aa05              ADD      r2,sp,#0x14
0002aa  f44f61fa          MOV      r1,#0x7d0
0002ae  4857              LDR      r0,|L2.1036|
0002b0  6800              LDR      r0,[r0,#0]  ; canRecieveQ
0002b2  f7fffffe          BL       OSQPend
0002b6  4604              MOV      r4,r0
;;;117    						if(err == OS_ERR_NONE)
0002b8  f89d0014          LDRB     r0,[sp,#0x14]
0002bc  2800              CMP      r0,#0
                  |L2.702|
0002be  d17c              BNE      |L2.954|
;;;118    							if(CAN1_RxMsg->Data[0] == 0x10)          // 多包处理
0002c0  7ae0              LDRB     r0,[r4,#0xb]
0002c2  2810              CMP      r0,#0x10
0002c4  d1fb              BNE      |L2.702|
;;;119    							{
;;;120    								ptrSaveBuff = Mem_malloc(CAN1_RxMsg->Data[1] + 10);      //申请的内存块足够长
0002c6  7b21              LDRB     r1,[r4,#0xc]
0002c8  f101000a          ADD      r0,r1,#0xa
0002cc  f7fffffe          BL       Mem_malloc
0002d0  4605              MOV      r5,r0
;;;121    								if(ptrSaveBuff != NULL)
0002d2  2d00              CMP      r5,#0
0002d4  d07f              BEQ      |L2.982|
;;;122    								{
;;;123    									ptrSaveBuff[0] = CAN1_RxMsg -> Data[1] + 4;
0002d6  7b20              LDRB     r0,[r4,#0xc]
0002d8  1d00              ADDS     r0,r0,#4
0002da  7028              STRB     r0,[r5,#0]
;;;124    									ptrSaveBuff[1] = 0x60;
0002dc  2060              MOVS     r0,#0x60
0002de  7068              STRB     r0,[r5,#1]
;;;125    									ptrSaveBuff[2] = cmdNum;
0002e0  70ae              STRB     r6,[r5,#2]
;;;126    									ptrSaveBuff[3] = CAN1_RxMsg -> Data[1];              //故障码长度
0002e2  7b20              LDRB     r0,[r4,#0xc]
0002e4  70e8              STRB     r0,[r5,#3]
;;;127    									
;;;128    									memcpy(&ptrSaveBuff[4],&CAN1_RxMsg->Data[2],6);
0002e6  f8d4100d          LDR      r1,[r4,#0xd]
0002ea  6069              STR      r1,[r5,#4]
0002ec  f8b40011          LDRH     r0,[r4,#0x11]
0002f0  8128              STRH     r0,[r5,#8]
;;;129    									cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6) % 7 == 0 ? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
0002f2  7b20              LDRB     r0,[r4,#0xc]
0002f4  1f80              SUBS     r0,r0,#6
0002f6  2107              MOVS     r1,#7
0002f8  fb90f2f1          SDIV     r2,r0,r1
0002fc  fb010012          MLS      r0,r1,r2,r0
000300  b920              CBNZ     r0,|L2.780|
000302  7b20              LDRB     r0,[r4,#0xc]
000304  1f80              SUBS     r0,r0,#6
000306  fb90f0f1          SDIV     r0,r0,r1
00030a  e005              B        |L2.792|
                  |L2.780|
00030c  7b20              LDRB     r0,[r4,#0xc]
00030e  1f80              SUBS     r0,r0,#6
000310  2107              MOVS     r1,#7
000312  fb90f0f1          SDIV     r0,r0,r1
000316  1c40              ADDS     r0,r0,#1
                  |L2.792|
000318  f0000aff          AND      r10,r0,#0xff
;;;130    									Mem_free(CAN1_RxMsg);
00031c  4620              MOV      r0,r4
00031e  f7fffffe          BL       Mem_free
;;;131    									
;;;132    									dataToSend.pdat = pidManyBag;                        //发送 0x30 请求接下来的多包
000322  483c              LDR      r0,|L2.1044|
000324  4938              LDR      r1,|L2.1032|
000326  6088              STR      r0,[r1,#8]  ; dataToSend
;;;133    									OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
000328  460b              MOV      r3,r1
00032a  689a              LDR      r2,[r3,#8]  ; dataToSend
00032c  6859              LDR      r1,[r3,#4]  ; dataToSend
00032e  6818              LDR      r0,[r3,#0]  ; dataToSend
000330  f7fffffe          BL       OBD_CAN_SendData
;;;134    									
;;;135    									for(i = 0;i < cmdManyPackNum;i++)
000334  2700              MOVS     r7,#0
000336  e01a              B        |L2.878|
                  |L2.824|
;;;136    									{
;;;137    										CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);       //接收多包
000338  aa05              ADD      r2,sp,#0x14
00033a  2119              MOVS     r1,#0x19
00033c  4833              LDR      r0,|L2.1036|
00033e  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000340  f7fffffe          BL       OSQPend
000344  4604              MOV      r4,r0
;;;138    										if(err == OS_ERR_NONE)
000346  f89d0014          LDRB     r0,[sp,#0x14]
00034a  b968              CBNZ     r0,|L2.872|
;;;139    										{
;;;140    											memcpy(&ptrSaveBuff[7*i + 10],&CAN1_RxMsg->Data[1],7);
00034c  ebc700c7          RSB      r0,r7,r7,LSL #3
000350  300a              ADDS     r0,r0,#0xa
000352  1941              ADDS     r1,r0,r5
000354  68e2              LDR      r2,[r4,#0xc]
000356  600a              STR      r2,[r1,#0]
000358  8a22              LDRH     r2,[r4,#0x10]
00035a  808a              STRH     r2,[r1,#4]
00035c  7ca0              LDRB     r0,[r4,#0x12]
00035e  7188              STRB     r0,[r1,#6]
;;;141    											Mem_free(CAN1_RxMsg);
000360  4620              MOV      r0,r4
000362  f7fffffe          BL       Mem_free
000366  e000              B        |L2.874|
                  |L2.872|
;;;142    										}
;;;143    										else 
;;;144    											break;
000368  e003              B        |L2.882|
                  |L2.874|
00036a  1c78              ADDS     r0,r7,#1              ;135
00036c  b2c7              UXTB     r7,r0                 ;135
                  |L2.878|
00036e  4557              CMP      r7,r10                ;135
000370  dbe2              BLT      |L2.824|
                  |L2.882|
000372  bf00              NOP      
;;;145    									} 
;;;146    									if(i == cmdManyPackNum)
000374  4557              CMP      r7,r10
000376  d127              BNE      |L2.968|
;;;147    									{
;;;148    										OSMutexPend(CDMASendMutex,0,&err);
000378  aa05              ADD      r2,sp,#0x14
00037a  2100              MOVS     r1,#0
00037c  4826              LDR      r0,|L2.1048|
00037e  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000380  f7fffffe          BL       OSMutexPend
;;;149    										
;;;150    										memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrSaveBuff,ptrSaveBuff[0]);
000384  4925              LDR      r1,|L2.1052|
000386  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000388  684b              LDR      r3,[r1,#4]
00038a  491d              LDR      r1,|L2.1024|
00038c  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
000390  311b              ADDS     r1,r1,#0x1b
000392  1858              ADDS     r0,r3,r1
000394  782a              LDRB     r2,[r5,#0]
000396  4629              MOV      r1,r5
000398  f7fffffe          BL       __aeabi_memcpy
;;;151    										cdmaDataToSend->datLength += ptrSaveBuff[0];
00039c  481f              LDR      r0,|L2.1052|
00039e  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0003a0  8800              LDRH     r0,[r0,#0]
0003a2  7829              LDRB     r1,[r5,#0]
0003a4  4408              ADD      r0,r0,r1
0003a6  491d              LDR      r1,|L2.1052|
0003a8  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0003aa  8008              STRH     r0,[r1,#0]
;;;152    										varOperation.datOKLeng += ptrSaveBuff[0];    //记录不可拆卸的包长度
0003ac  4814              LDR      r0,|L2.1024|
0003ae  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
0003b2  7829              LDRB     r1,[r5,#0]
0003b4  4408              ADD      r0,r0,r1
0003b6  4912              LDR      r1,|L2.1024|
0003b8  e000              B        |L2.956|
                  |L2.954|
0003ba  e00c              B        |L2.982|
                  |L2.956|
0003bc  f8a10096          STRH     r0,[r1,#0x96]
;;;153    										
;;;154    										OSMutexPost(CDMASendMutex);
0003c0  4815              LDR      r0,|L2.1048|
0003c2  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0003c4  f7fffffe          BL       OSMutexPost
                  |L2.968|
;;;155    									}
;;;156    									PIDVarGet(cmdNum,&ptrSaveBuff[3]);
0003c8  1ce9              ADDS     r1,r5,#3
0003ca  4630              MOV      r0,r6
0003cc  f7fffffe          BL       PIDVarGet
;;;157    									Mem_free(ptrSaveBuff);
0003d0  4628              MOV      r0,r5
0003d2  f7fffffe          BL       Mem_free
                  |L2.982|
;;;158    								}
;;;159    							}
;;;160    						varOperation.pidRun = 1;   //启动 PID 向 OBD 发送指令
0003d6  2001              MOVS     r0,#1
0003d8  4909              LDR      r1,|L2.1024|
0003da  f8810095          STRB     r0,[r1,#0x95]
                  |L2.990|
;;;161    					}
;;;162    				}
;;;163    				Mem_free(CAN1_RxMsg);
0003de  4620              MOV      r0,r4
0003e0  f7fffffe          BL       Mem_free
0003e4  e006              B        |L2.1012|
                  |L2.998|
;;;164    			}
;;;165    		}
;;;166    		else
;;;167    		{
;;;168    			freOBDLed = LEDFAST; 
0003e6  20c8              MOVS     r0,#0xc8
0003e8  4909              LDR      r1,|L2.1040|
0003ea  8008              STRH     r0,[r1,#0]
;;;169    			LogReport("\r\n04 - PIDcmd don't report:%d;",cmdNum);//发送 PID 指令，ECU 不回复
0003ec  4631              MOV      r1,r6
0003ee  a01b              ADR      r0,|L2.1116|
0003f0  f7fffffe          BL       LogReport
                  |L2.1012|
;;;170    		}
;;;171    		Mem_free(can1_Txbuff);      //释放内存块
0003f4  4648              MOV      r0,r9
0003f6  f7fffffe          BL       Mem_free
0003fa  bf00              NOP                            ;33
                  |L2.1020|
0003fc  e610              B        |L2.32|
;;;172    	}
;;;173    }
;;;174    
                          ENDP

0003fe  0000              DCW      0x0000
                  |L2.1024|
                          DCD      varOperation
                  |L2.1028|
                          DCD      canSendQ
                  |L2.1032|
                          DCD      dataToSend
                  |L2.1036|
                          DCD      canRecieveQ
                  |L2.1040|
                          DCD      freOBDLed
                  |L2.1044|
                          DCD      pidManyBag
                  |L2.1048|
                          DCD      CDMASendMutex
                  |L2.1052|
                          DCD      cdmaDataToSend
                  |L2.1056|
                          DCD      pPid
                  |L2.1060|
000424  0d0a3035          DCB      "\r\n05-ECU report:03 7F;PID:%d err:%d,%d,%d,%d,%d,%d;",0
000428  2d454355
00042c  20726570
000430  6f72743a
000434  30332037
000438  463b5049
00043c  443a2564
000440  20657272
000444  3a25642c
000448  25642c25
00044c  642c2564
000450  2c25642c
000454  25643b00
                  |L2.1112|
                          DCD      strengthFuelFlash
                  |L2.1116|
00045c  0d0a3034          DCB      "\r\n04 - PIDcmd don't report:%d;",0
000460  202d2050
000464  4944636d
000468  6420646f
00046c  6e277420
000470  7265706f
000474  72743a25
000478  643b00  
00047b  00                DCB      0

                          AREA ||i.PIDVarGet||, CODE, READONLY, ALIGN=2

                  PIDVarGet PROC
;;;383    
;;;384    void PIDVarGet(uint8_t cmdId,uint8_t ptrData[])
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;385    {
000004  b089              SUB      sp,sp,#0x24
000006  468a              MOV      r10,r1
;;;386    	uint8_t  i,j,err;	
;;;387    	uint64_t saveDate;
;;;388    	uint8_t  byteNum = 0;
000008  f04f0900          MOV      r9,#0
;;;389    	uint8_t  temp = 0;
00000c  2700              MOVS     r7,#0
;;;390    	uint16_t temp1 = 0;
00000e  2000              MOVS     r0,#0
000010  9003              STR      r0,[sp,#0xc]
;;;391    	uint8_t* ptr;
;;;392    	static uint8_t  curFuelTimes = 0;     //四次一计算
;;;393    	static uint32_t allFuelCom   = 0;     //累加喷油量
;;;394    	for(i = 0;i < varOperation.pidVarNum;i ++)
000012  2400              MOVS     r4,#0
000014  e3fc              B        |L3.2064|
                  |L3.22|
;;;395    	{
;;;396    		if((ptrPIDVars + i)->pidId != cmdId)
000016  ebc400c4          RSB      r0,r4,r4,LSL #3
00001a  49fe              LDR      r1,|L3.1044|
00001c  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00001e  eb010040          ADD      r0,r1,r0,LSL #1
000022  7841              LDRB     r1,[r0,#1]
000024  9809              LDR      r0,[sp,#0x24]
000026  4281              CMP      r1,r0
000028  d000              BEQ      |L3.44|
;;;397    			continue;
00002a  e3f2              B        |L3.2066|
                  |L3.44|
;;;398    		//获得字节数
;;;399    		byteNum = ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)%8 ==0?       \
00002c  ebc403c4          RSB      r3,r4,r4,LSL #3
000030  f8dfc3e0          LDR      r12,|L3.1044|
000034  f8dcc000          LDR      r12,[r12,#0]  ; ptrPIDVars
000038  eb0c0343          ADD      r3,r12,r3,LSL #1
00003c  795b              LDRB     r3,[r3,#5]
00003e  ebc40cc4          RSB      r12,r4,r4,LSL #3
000042  f8dfe3d0          LDR      lr,|L3.1044|
000046  f8dee000          LDR      lr,[lr,#0]  ; ptrPIDVars
00004a  eb0e0c4c          ADD      r12,lr,r12,LSL #1
00004e  f89cc004          LDRB     r12,[r12,#4]
000052  eb03020c          ADD      r2,r3,r12
000056  17d3              ASRS     r3,r2,#31
000058  eb027353          ADD      r3,r2,r3,LSR #29
00005c  10db              ASRS     r3,r3,#3
00005e  eba203c3          SUB      r3,r2,r3,LSL #3
000062  b9cb              CBNZ     r3,|L3.152|
;;;400    						((ptrPIDVars + i)->bitLen + (ptrPIDVars + i)->startBit) / 8 : \
000064  ebc403c4          RSB      r3,r4,r4,LSL #3
000068  f8dfc3a8          LDR      r12,|L3.1044|
00006c  f8dcc000          LDR      r12,[r12,#0]  ; ptrPIDVars
000070  eb0c0343          ADD      r3,r12,r3,LSL #1
000074  795b              LDRB     r3,[r3,#5]
000076  ebc40cc4          RSB      r12,r4,r4,LSL #3
00007a  f8dfe398          LDR      lr,|L3.1044|
00007e  f8dee000          LDR      lr,[lr,#0]  ; ptrPIDVars
000082  eb0e0c4c          ADD      r12,lr,r12,LSL #1
000086  f89cc004          LDRB     r12,[r12,#4]
00008a  eb03010c          ADD      r1,r3,r12
00008e  17cb              ASRS     r3,r1,#31
000090  eb017353          ADD      r3,r1,r3,LSR #29
000094  10db              ASRS     r3,r3,#3
000096  e019              B        |L3.204|
                  |L3.152|
;;;401    						((ptrPIDVars + i)->bitLen + (ptrPIDVars + i)->startBit) / 8 + 1;
000098  ebc403c4          RSB      r3,r4,r4,LSL #3
00009c  f8dfc374          LDR      r12,|L3.1044|
0000a0  f8dcc000          LDR      r12,[r12,#0]  ; ptrPIDVars
0000a4  eb0c0343          ADD      r3,r12,r3,LSL #1
0000a8  795b              LDRB     r3,[r3,#5]
0000aa  ebc40cc4          RSB      r12,r4,r4,LSL #3
0000ae  f8dfe364          LDR      lr,|L3.1044|
0000b2  f8dee000          LDR      lr,[lr,#0]  ; ptrPIDVars
0000b6  eb0e0c4c          ADD      r12,lr,r12,LSL #1
0000ba  f89cc004          LDRB     r12,[r12,#4]
0000be  eb03000c          ADD      r0,r3,r12
0000c2  17c3              ASRS     r3,r0,#31
0000c4  eb007353          ADD      r3,r0,r3,LSR #29
0000c8  10db              ASRS     r3,r3,#3
0000ca  1c5b              ADDS     r3,r3,#1
                  |L3.204|
0000cc  f00309ff          AND      r9,r3,#0xff
;;;402    		if((ptrPIDVars + i)->dataHL == 1)     //大端在前
0000d0  ebc400c4          RSB      r0,r4,r4,LSL #3
0000d4  49cf              LDR      r1,|L3.1044|
0000d6  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0000d8  f8110010          LDRB     r0,[r1,r0,LSL #1]
0000dc  2801              CMP      r0,#1
0000de  d17d              BNE      |L3.476|
;;;403    		{
;;;404    			j = 0;
0000e0  f04f0800          MOV      r8,#0
;;;405    			do{
0000e4  bf00              NOP      
                  |L3.230|
;;;406    				if(j == 0)
0000e6  f1b80f00          CMP      r8,#0
0000ea  d140              BNE      |L3.366|
;;;407    				{
;;;408    					temp = ptrData[ptrPIDVars->startByte + j];
0000ec  48c9              LDR      r0,|L3.1044|
0000ee  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0000f0  78c0              LDRB     r0,[r0,#3]
0000f2  4440              ADD      r0,r0,r8
0000f4  f81a7000          LDRB     r7,[r10,r0]
;;;409    					if(((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)<8)
0000f8  ebc400c4          RSB      r0,r4,r4,LSL #3
0000fc  49c5              LDR      r1,|L3.1044|
0000fe  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000100  eb010040          ADD      r0,r1,r0,LSL #1
000104  7940              LDRB     r0,[r0,#5]
000106  ebc401c4          RSB      r1,r4,r4,LSL #3
00010a  4ac2              LDR      r2,|L3.1044|
00010c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00010e  eb020141          ADD      r1,r2,r1,LSL #1
000112  7909              LDRB     r1,[r1,#4]
000114  4408              ADD      r0,r0,r1
000116  2808              CMP      r0,#8
000118  da1e              BGE      |L3.344|
;;;410    					{
;;;411    						temp &= (0xff>>(8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)));
00011a  ebc400c4          RSB      r0,r4,r4,LSL #3
00011e  49bd              LDR      r1,|L3.1044|
000120  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000122  eb010040          ADD      r0,r1,r0,LSL #1
000126  7940              LDRB     r0,[r0,#5]
000128  ebc401c4          RSB      r1,r4,r4,LSL #3
00012c  4ab9              LDR      r2,|L3.1044|
00012e  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000130  eb020141          ADD      r1,r2,r1,LSL #1
000134  7909              LDRB     r1,[r1,#4]
000136  4408              ADD      r0,r0,r1
000138  f1c00108          RSB      r1,r0,#8
00013c  20ff              MOVS     r0,#0xff
00013e  4108              ASRS     r0,r0,r1
000140  4007              ANDS     r7,r7,r0
;;;412    						temp >>= (ptrPIDVars + i)->startBit;
000142  ebc400c4          RSB      r0,r4,r4,LSL #3
000146  49b3              LDR      r1,|L3.1044|
000148  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00014a  eb010040          ADD      r0,r1,r0,LSL #1
00014e  7900              LDRB     r0,[r0,#4]
000150  4107              ASRS     r7,r7,r0
;;;413    						saveDate = temp;
000152  2600              MOVS     r6,#0
000154  463d              MOV      r5,r7
;;;414    						break;
000156  e05c              B        |L3.530|
                  |L3.344|
;;;415    					}
;;;416    					temp >>= (ptrPIDVars + i) -> startBit;
000158  ebc400c4          RSB      r0,r4,r4,LSL #3
00015c  49ad              LDR      r1,|L3.1044|
00015e  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000160  eb010040          ADD      r0,r1,r0,LSL #1
000164  7900              LDRB     r0,[r0,#4]
000166  4107              ASRS     r7,r7,r0
;;;417    					saveDate = temp;
000168  2600              MOVS     r6,#0
00016a  463d              MOV      r5,r7
00016c  e04a              B        |L3.516|
                  |L3.366|
;;;418    				}else if(j == (byteNum - 1))
00016e  f1a90001          SUB      r0,r9,#1
000172  4540              CMP      r0,r8
000174  d139              BNE      |L3.490|
;;;419    				{
;;;420    					saveDate <<= (((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit + 8) - byteNum * 8);
000176  ebc400c4          RSB      r0,r4,r4,LSL #3
00017a  49a6              LDR      r1,|L3.1044|
00017c  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00017e  eb010040          ADD      r0,r1,r0,LSL #1
000182  7940              LDRB     r0,[r0,#5]
000184  ebc401c4          RSB      r1,r4,r4,LSL #3
000188  4aa2              LDR      r2,|L3.1044|
00018a  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00018c  eb020141          ADD      r1,r2,r1,LSL #1
000190  7909              LDRB     r1,[r1,#4]
000192  4408              ADD      r0,r0,r1
000194  3008              ADDS     r0,r0,#8
000196  eba002c9          SUB      r2,r0,r9,LSL #3
00019a  4628              MOV      r0,r5
00019c  4631              MOV      r1,r6
00019e  e9cd6505          STRD     r6,r5,[sp,#0x14]
0001a2  f7fffffe          BL       __aeabi_llsl
0001a6  4605              MOV      r5,r0
0001a8  460e              MOV      r6,r1
;;;421    					temp = ptrData[ptrPIDVars->startByte + j];
0001aa  489a              LDR      r0,|L3.1044|
0001ac  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0001ae  78c0              LDRB     r0,[r0,#3]
0001b0  4440              ADD      r0,r0,r8
0001b2  f81a7000          LDRB     r7,[r10,r0]
;;;422    					temp &= 0xff>>(byteNum * 8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit));
0001b6  ebc400c4          RSB      r0,r4,r4,LSL #3
0001ba  4996              LDR      r1,|L3.1044|
0001bc  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0001be  eb010040          ADD      r0,r1,r0,LSL #1
0001c2  7940              LDRB     r0,[r0,#5]
0001c4  ebc401c4          RSB      r1,r4,r4,LSL #3
0001c8  4a92              LDR      r2,|L3.1044|
0001ca  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0001cc  eb020141          ADD      r1,r2,r1,LSL #1
0001d0  7909              LDRB     r1,[r1,#4]
0001d2  4408              ADD      r0,r0,r1
0001d4  ebc001c9          RSB      r1,r0,r9,LSL #3
0001d8  20ff              MOVS     r0,#0xff
0001da  e000              B        |L3.478|
                  |L3.476|
0001dc  e01a              B        |L3.532|
                  |L3.478|
0001de  4108              ASRS     r0,r0,r1
0001e0  4007              ANDS     r7,r7,r0
;;;423    					saveDate += temp;
0001e2  19ed              ADDS     r5,r5,r7
0001e4  f1460600          ADC      r6,r6,#0
0001e8  e00c              B        |L3.516|
                  |L3.490|
;;;424    				}else
;;;425    				{
;;;426    					saveDate <<= 8;
0001ea  0230              LSLS     r0,r6,#8
0001ec  ea406615          ORR      r6,r0,r5,LSR #24
0001f0  022d              LSLS     r5,r5,#8
;;;427    					temp = ptrData[ptrPIDVars -> startByte + j];
0001f2  4888              LDR      r0,|L3.1044|
0001f4  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0001f6  78c0              LDRB     r0,[r0,#3]
0001f8  4440              ADD      r0,r0,r8
0001fa  f81a7000          LDRB     r7,[r10,r0]
;;;428    					saveDate += temp;
0001fe  19ed              ADDS     r5,r5,r7
000200  f1460600          ADC      r6,r6,#0
                  |L3.516|
;;;429    				}
;;;430    				j++;
000204  f1080001          ADD      r0,r8,#1
000208  f00008ff          AND      r8,r0,#0xff
;;;431    			}while(j < byteNum);	
00020c  45c8              CMP      r8,r9
00020e  f6ffaf6a          BLT      |L3.230|
                  |L3.530|
000212  e09a              B        |L3.842|
                  |L3.532|
;;;432    		}else if((ptrPIDVars + i)->dataHL == 2)      //小端在前
000214  ebc400c4          RSB      r0,r4,r4,LSL #3
000218  497e              LDR      r1,|L3.1044|
00021a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00021c  f8110010          LDRB     r0,[r1,r0,LSL #1]
000220  2802              CMP      r0,#2
000222  d1f6              BNE      |L3.530|
;;;433    		{
;;;434    			j = byteNum - 1;
000224  f1a90001          SUB      r0,r9,#1
000228  f00008ff          AND      r8,r0,#0xff
;;;435    			do{
00022c  bf00              NOP      
                  |L3.558|
;;;436    				if(j ==( byteNum - 1))
00022e  f1a90001          SUB      r0,r9,#1
000232  4540              CMP      r0,r8
000234  d14c              BNE      |L3.720|
;;;437    				{
;;;438    					temp = ptrData[ptrPIDVars->startByte + j];
000236  4877              LDR      r0,|L3.1044|
000238  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
00023a  78c0              LDRB     r0,[r0,#3]
00023c  4440              ADD      r0,r0,r8
00023e  f81a7000          LDRB     r7,[r10,r0]
;;;439    					if(((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)<8)
000242  ebc400c4          RSB      r0,r4,r4,LSL #3
000246  4973              LDR      r1,|L3.1044|
000248  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00024a  eb010040          ADD      r0,r1,r0,LSL #1
00024e  7940              LDRB     r0,[r0,#5]
000250  ebc401c4          RSB      r1,r4,r4,LSL #3
000254  4a6f              LDR      r2,|L3.1044|
000256  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000258  eb020141          ADD      r1,r2,r1,LSL #1
00025c  7909              LDRB     r1,[r1,#4]
00025e  4408              ADD      r0,r0,r1
000260  2808              CMP      r0,#8
000262  da1e              BGE      |L3.674|
;;;440    					{
;;;441    						temp &= (0xff>>(8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)));
000264  ebc400c4          RSB      r0,r4,r4,LSL #3
000268  496a              LDR      r1,|L3.1044|
00026a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00026c  eb010040          ADD      r0,r1,r0,LSL #1
000270  7940              LDRB     r0,[r0,#5]
000272  ebc401c4          RSB      r1,r4,r4,LSL #3
000276  4a67              LDR      r2,|L3.1044|
000278  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00027a  eb020141          ADD      r1,r2,r1,LSL #1
00027e  7909              LDRB     r1,[r1,#4]
000280  4408              ADD      r0,r0,r1
000282  f1c00108          RSB      r1,r0,#8
000286  20ff              MOVS     r0,#0xff
000288  4108              ASRS     r0,r0,r1
00028a  4007              ANDS     r7,r7,r0
;;;442    						temp >>= (ptrPIDVars + i)->startBit;
00028c  ebc400c4          RSB      r0,r4,r4,LSL #3
000290  4960              LDR      r1,|L3.1044|
000292  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000294  eb010040          ADD      r0,r1,r0,LSL #1
000298  7900              LDRB     r0,[r0,#4]
00029a  4107              ASRS     r7,r7,r0
;;;443    						saveDate = temp;
00029c  2600              MOVS     r6,#0
00029e  463d              MOV      r5,r7
;;;444    						break;
0002a0  e052              B        |L3.840|
                  |L3.674|
;;;445    					}
;;;446    					temp &= (0xff>>(byteNum*8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)));
0002a2  ebc400c4          RSB      r0,r4,r4,LSL #3
0002a6  495b              LDR      r1,|L3.1044|
0002a8  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0002aa  eb010040          ADD      r0,r1,r0,LSL #1
0002ae  7940              LDRB     r0,[r0,#5]
0002b0  ebc401c4          RSB      r1,r4,r4,LSL #3
0002b4  4a57              LDR      r2,|L3.1044|
0002b6  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0002b8  eb020141          ADD      r1,r2,r1,LSL #1
0002bc  7909              LDRB     r1,[r1,#4]
0002be  4408              ADD      r0,r0,r1
0002c0  ebc001c9          RSB      r1,r0,r9,LSL #3
0002c4  20ff              MOVS     r0,#0xff
0002c6  4108              ASRS     r0,r0,r1
0002c8  4007              ANDS     r7,r7,r0
;;;447    					saveDate = temp;
0002ca  463d              MOV      r5,r7
0002cc  2600              MOVS     r6,#0
0002ce  e032              B        |L3.822|
                  |L3.720|
;;;448    				}else if(j == 0)
0002d0  f1b80f00          CMP      r8,#0
0002d4  d122              BNE      |L3.796|
;;;449    				{
;;;450    					saveDate <<= (8 - (ptrPIDVars + i)->startBit);
0002d6  ebc400c4          RSB      r0,r4,r4,LSL #3
0002da  494e              LDR      r1,|L3.1044|
0002dc  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0002de  eb010040          ADD      r0,r1,r0,LSL #1
0002e2  7900              LDRB     r0,[r0,#4]
0002e4  f1c00208          RSB      r2,r0,#8
0002e8  4628              MOV      r0,r5
0002ea  4631              MOV      r1,r6
0002ec  e9cd6507          STRD     r6,r5,[sp,#0x1c]
0002f0  f7fffffe          BL       __aeabi_llsl
0002f4  4605              MOV      r5,r0
0002f6  460e              MOV      r6,r1
;;;451    					temp = ptrData[ptrPIDVars->startByte + j];
0002f8  4846              LDR      r0,|L3.1044|
0002fa  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0002fc  78c0              LDRB     r0,[r0,#3]
0002fe  4440              ADD      r0,r0,r8
000300  f81a7000          LDRB     r7,[r10,r0]
;;;452    					temp >>= (ptrPIDVars + i)->startBit;
000304  ebc400c4          RSB      r0,r4,r4,LSL #3
000308  4942              LDR      r1,|L3.1044|
00030a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00030c  eb010040          ADD      r0,r1,r0,LSL #1
000310  7900              LDRB     r0,[r0,#4]
000312  4107              ASRS     r7,r7,r0
;;;453    					saveDate += temp;
000314  19ed              ADDS     r5,r5,r7
000316  f1460600          ADC      r6,r6,#0
00031a  e00c              B        |L3.822|
                  |L3.796|
;;;454    				}else
;;;455    				{
;;;456    					saveDate <<= 8;
00031c  0230              LSLS     r0,r6,#8
00031e  ea406615          ORR      r6,r0,r5,LSR #24
000322  022d              LSLS     r5,r5,#8
;;;457    					temp = ptrData[ptrPIDVars->startByte + j];
000324  483b              LDR      r0,|L3.1044|
000326  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
000328  78c0              LDRB     r0,[r0,#3]
00032a  4440              ADD      r0,r0,r8
00032c  f81a7000          LDRB     r7,[r10,r0]
;;;458    					saveDate += temp;
000330  19ed              ADDS     r5,r5,r7
000332  f1460600          ADC      r6,r6,#0
                  |L3.822|
;;;459    				}
;;;460    				if(j == 0)
000336  f1b80f00          CMP      r8,#0
00033a  d100              BNE      |L3.830|
;;;461    				{
;;;462    					break;
00033c  e004              B        |L3.840|
                  |L3.830|
;;;463    				}
;;;464    				j--;
00033e  f1a80001          SUB      r0,r8,#1
000342  f00008ff          AND      r8,r0,#0xff
;;;465    			}while(1);	
000346  e772              B        |L3.558|
                  |L3.840|
000348  bf00              NOP                            ;444
                  |L3.842|
;;;466    		}
;;;467    		switch((ptrPIDVars + i)->varId)
00034a  ebc400c4          RSB      r0,r4,r4,LSL #3
00034e  4931              LDR      r1,|L3.1044|
000350  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000352  eb010040          ADD      r0,r1,r0,LSL #1
000356  7880              LDRB     r0,[r0,#2]
000358  280c              CMP      r0,#0xc
00035a  d27c              BCS      |L3.1110|
00035c  e8dff000          TBB      [pc,r0]
000360  7b062e64          DCB      0x7b,0x06,0x2e,0x64
000364  96bef5f3          DCB      0x96,0xbe,0xf5,0xf3
000368  f2f17bf0          DCB      0xf2,0xf1,0x7b,0xf0
;;;468    		{
;;;469    			case 1://计算车速
;;;470    				if(carAllRecord.carSpeedTemp != 1)
00036c  482a              LDR      r0,|L3.1048|
00036e  f8900031          LDRB     r0,[r0,#0x31]  ; carAllRecord
000372  2801              CMP      r0,#1
000374  d021              BEQ      |L3.954|
;;;471    					carAllRecord.carSpeed = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000376  4628              MOV      r0,r5
000378  4631              MOV      r1,r6
00037a  f7fffffe          BL       __aeabi_ul2f
00037e  9000              STR      r0,[sp,#0]
000380  ebc400c4          RSB      r0,r4,r4,LSL #3
000384  4a23              LDR      r2,|L3.1044|
000386  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000388  eb020040          ADD      r0,r2,r0,LSL #1
00038c  f8d01006          LDR      r1,[r0,#6]
000390  9800              LDR      r0,[sp,#0]
000392  f7fffffe          BL       __aeabi_fmul
000396  9001              STR      r0,[sp,#4]
000398  ebc400c4          RSB      r0,r4,r4,LSL #3
00039c  4a1d              LDR      r2,|L3.1044|
00039e  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0003a0  eb020040          ADD      r0,r2,r0,LSL #1
0003a4  f8d0100a          LDR      r1,[r0,#0xa]
0003a8  9801              LDR      r0,[sp,#4]
0003aa  f7fffffe          BL       __aeabi_fadd
0003ae  9002              STR      r0,[sp,#8]
0003b0  f7fffffe          BL       __aeabi_f2uiz
0003b4  4918              LDR      r1,|L3.1048|
0003b6  f8a1002f          STRH     r0,[r1,#0x2f]
                  |L3.954|
;;;472    				break;
0003ba  e256              B        |L3.2154|
;;;473    			case 2://转速
;;;474    				if(carAllRecord.engineSpeedTemp != 1)
0003bc  4816              LDR      r0,|L3.1048|
0003be  f8900034          LDRB     r0,[r0,#0x34]  ; carAllRecord
0003c2  2801              CMP      r0,#1
0003c4  d020              BEQ      |L3.1032|
;;;475    					carAllRecord.engineSpeed = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0003c6  4628              MOV      r0,r5
0003c8  4631              MOV      r1,r6
0003ca  f7fffffe          BL       __aeabi_ul2f
0003ce  9000              STR      r0,[sp,#0]
0003d0  ebc400c4          RSB      r0,r4,r4,LSL #3
0003d4  4a0f              LDR      r2,|L3.1044|
0003d6  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0003d8  eb020040          ADD      r0,r2,r0,LSL #1
0003dc  f8d01006          LDR      r1,[r0,#6]
0003e0  9800              LDR      r0,[sp,#0]
0003e2  f7fffffe          BL       __aeabi_fmul
0003e6  9001              STR      r0,[sp,#4]
0003e8  ebc400c4          RSB      r0,r4,r4,LSL #3
0003ec  4a09              LDR      r2,|L3.1044|
0003ee  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0003f0  eb020040          ADD      r0,r2,r0,LSL #1
0003f4  f8d0100a          LDR      r1,[r0,#0xa]
0003f8  9801              LDR      r0,[sp,#4]
0003fa  f7fffffe          BL       __aeabi_fadd
0003fe  9002              STR      r0,[sp,#8]
000400  f7fffffe          BL       __aeabi_f2uiz
000404  4904              LDR      r1,|L3.1048|
000406  8648              STRH     r0,[r1,#0x32]
                  |L3.1032|
;;;476    				if(carAllRecord.engineSpeed > carAllRecord.engineSpeedMax)//获得发动机最高转速
000408  4803              LDR      r0,|L3.1048|
00040a  8e40              LDRH     r0,[r0,#0x32]  ; carAllRecord
00040c  4902              LDR      r1,|L3.1048|
00040e  8c49              LDRH     r1,[r1,#0x22]  ; carAllRecord
000410  4288              CMP      r0,r1
000412  e003              B        |L3.1052|
                  |L3.1044|
                          DCD      ptrPIDVars
                  |L3.1048|
                          DCD      carAllRecord
                  |L3.1052|
00041c  dd03              BLE      |L3.1062|
;;;477    					carAllRecord.engineSpeedMax = carAllRecord.engineSpeed;
00041e  48fe              LDR      r0,|L3.2072|
000420  8e40              LDRH     r0,[r0,#0x32]  ; carAllRecord
000422  49fd              LDR      r1,|L3.2072|
000424  8448              STRH     r0,[r1,#0x22]
                  |L3.1062|
;;;478    				break;
000426  e220              B        |L3.2154|
;;;479    			case 3://总喷油量
;;;480    				if(carAllRecord.allFuelTemp != 1)
000428  48fb              LDR      r0,|L3.2072|
00042a  f8900039          LDRB     r0,[r0,#0x39]  ; carAllRecord
00042e  2801              CMP      r0,#1
000430  d02b              BEQ      |L3.1162|
;;;481    				{
;;;482    					carAllRecord.allFuel = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000432  4628              MOV      r0,r5
000434  4631              MOV      r1,r6
000436  f7fffffe          BL       __aeabi_ul2f
00043a  9000              STR      r0,[sp,#0]
00043c  ebc400c4          RSB      r0,r4,r4,LSL #3
000440  4af6              LDR      r2,|L3.2076|
000442  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000444  eb020040          ADD      r0,r2,r0,LSL #1
000448  f8d01006          LDR      r1,[r0,#6]
00044c  9800              LDR      r0,[sp,#0]
00044e  f7fffffe          BL       __aeabi_fmul
000452  9001              STR      r0,[sp,#4]
000454  e000              B        |L3.1112|
                  |L3.1110|
000456  e207              B        |L3.2152|
                  |L3.1112|
000458  ebc400c4          RSB      r0,r4,r4,LSL #3
00045c  4aef              LDR      r2,|L3.2076|
00045e  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000460  eb020040          ADD      r0,r2,r0,LSL #1
000464  f8d0100a          LDR      r1,[r0,#0xa]
000468  9801              LDR      r0,[sp,#4]
00046a  f7fffffe          BL       __aeabi_fadd
00046e  9002              STR      r0,[sp,#8]
000470  f7fffffe          BL       __aeabi_f2uiz
000474  b280              UXTH     r0,r0
000476  49e8              LDR      r1,|L3.2072|
000478  f8c10035          STR      r0,[r1,#0x35]  ; carAllRecord
;;;483    					carAllRecord.totalFuel += carAllRecord.allFuel;
00047c  4608              MOV      r0,r1
00047e  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000480  f8d11035          LDR      r1,[r1,#0x35]  ; carAllRecord
000484  4408              ADD      r0,r0,r1
000486  49e4              LDR      r1,|L3.2072|
000488  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
                  |L3.1162|
;;;484    				}break;
00048a  e1ee              B        |L3.2154|
;;;485    			case 4://主喷油量
;;;486    				carAllRecord.primaryFuel = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
00048c  4628              MOV      r0,r5
00048e  4631              MOV      r1,r6
000490  f7fffffe          BL       __aeabi_ul2f
000494  9000              STR      r0,[sp,#0]
000496  ebc400c4          RSB      r0,r4,r4,LSL #3
00049a  4ae0              LDR      r2,|L3.2076|
00049c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00049e  eb020040          ADD      r0,r2,r0,LSL #1
0004a2  f8d01006          LDR      r1,[r0,#6]
0004a6  9800              LDR      r0,[sp,#0]
0004a8  f7fffffe          BL       __aeabi_fmul
0004ac  9001              STR      r0,[sp,#4]
0004ae  ebc400c4          RSB      r0,r4,r4,LSL #3
0004b2  4ada              LDR      r2,|L3.2076|
0004b4  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0004b6  eb020040          ADD      r0,r2,r0,LSL #1
0004ba  f8d0100a          LDR      r1,[r0,#0xa]
0004be  9801              LDR      r0,[sp,#4]
0004c0  f7fffffe          BL       __aeabi_fadd
0004c4  9002              STR      r0,[sp,#8]
0004c6  f7fffffe          BL       __aeabi_f2uiz
0004ca  49d3              LDR      r1,|L3.2072|
0004cc  8748              STRH     r0,[r1,#0x3a]
;;;487    				carAllRecord.totalFuel += carAllRecord.primaryFuel;
0004ce  4608              MOV      r0,r1
0004d0  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
0004d2  8f49              LDRH     r1,[r1,#0x3a]  ; carAllRecord
0004d4  4408              ADD      r0,r0,r1
0004d6  49d0              LDR      r1,|L3.2072|
0004d8  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;488    				break;
0004da  e1c6              B        |L3.2154|
;;;489    			case 5://预喷油量 1
;;;490    				carAllRecord.beforeFuel1 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0004dc  4628              MOV      r0,r5
0004de  4631              MOV      r1,r6
0004e0  f7fffffe          BL       __aeabi_ul2f
0004e4  9000              STR      r0,[sp,#0]
0004e6  ebc400c4          RSB      r0,r4,r4,LSL #3
0004ea  4acc              LDR      r2,|L3.2076|
0004ec  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0004ee  eb020040          ADD      r0,r2,r0,LSL #1
0004f2  f8d01006          LDR      r1,[r0,#6]
0004f6  9800              LDR      r0,[sp,#0]
0004f8  f7fffffe          BL       __aeabi_fmul
0004fc  9001              STR      r0,[sp,#4]
0004fe  ebc400c4          RSB      r0,r4,r4,LSL #3
000502  4ac6              LDR      r2,|L3.2076|
000504  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000506  eb020040          ADD      r0,r2,r0,LSL #1
00050a  f8d0100a          LDR      r1,[r0,#0xa]
00050e  9801              LDR      r0,[sp,#4]
000510  f7fffffe          BL       __aeabi_fadd
000514  9002              STR      r0,[sp,#8]
000516  f7fffffe          BL       __aeabi_f2uiz
00051a  49bf              LDR      r1,|L3.2072|
00051c  f8a1003f          STRH     r0,[r1,#0x3f]
;;;491    				carAllRecord.totalFuel += carAllRecord.beforeFuel1;
000520  4608              MOV      r0,r1
000522  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000524  f8b1103f          LDRH     r1,[r1,#0x3f]  ; carAllRecord
000528  4408              ADD      r0,r0,r1
00052a  49bb              LDR      r1,|L3.2072|
00052c  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;492    				allFuelCom             += carAllRecord.beforeFuel1;
00052e  4608              MOV      r0,r1
000530  f8b0003f          LDRH     r0,[r0,#0x3f]  ; carAllRecord
000534  49ba              LDR      r1,|L3.2080|
000536  6809              LDR      r1,[r1,#0]  ; allFuelCom
000538  4408              ADD      r0,r0,r1
00053a  49b9              LDR      r1,|L3.2080|
00053c  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;493    				break;
00053e  e194              B        |L3.2154|
000540  e0bb              B        |L3.1722|
000542  e090              B        |L3.1638|
000544  e065              B        |L3.1554|
000546  e032              B        |L3.1454|
000548  e7ff              B        |L3.1354|
                  |L3.1354|
;;;494    			case 6://预喷油量 2
;;;495    				carAllRecord.beforeFuel2 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
00054a  4628              MOV      r0,r5
00054c  4631              MOV      r1,r6
00054e  f7fffffe          BL       __aeabi_ul2f
000552  9000              STR      r0,[sp,#0]
000554  ebc400c4          RSB      r0,r4,r4,LSL #3
000558  4ab0              LDR      r2,|L3.2076|
00055a  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00055c  eb020040          ADD      r0,r2,r0,LSL #1
000560  f8d01006          LDR      r1,[r0,#6]
000564  9800              LDR      r0,[sp,#0]
000566  f7fffffe          BL       __aeabi_fmul
00056a  9001              STR      r0,[sp,#4]
00056c  ebc400c4          RSB      r0,r4,r4,LSL #3
000570  4aaa              LDR      r2,|L3.2076|
000572  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000574  eb020040          ADD      r0,r2,r0,LSL #1
000578  f8d0100a          LDR      r1,[r0,#0xa]
00057c  9801              LDR      r0,[sp,#4]
00057e  f7fffffe          BL       __aeabi_fadd
000582  9002              STR      r0,[sp,#8]
000584  f7fffffe          BL       __aeabi_f2uiz
000588  49a3              LDR      r1,|L3.2072|
00058a  f8a10041          STRH     r0,[r1,#0x41]
;;;496    				carAllRecord.totalFuel += carAllRecord.beforeFuel2;
00058e  4608              MOV      r0,r1
000590  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000592  f8b11041          LDRH     r1,[r1,#0x41]  ; carAllRecord
000596  4408              ADD      r0,r0,r1
000598  499f              LDR      r1,|L3.2072|
00059a  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;497    				allFuelCom += carAllRecord.beforeFuel2;
00059c  4608              MOV      r0,r1
00059e  f8b00041          LDRH     r0,[r0,#0x41]  ; carAllRecord
0005a2  499f              LDR      r1,|L3.2080|
0005a4  6809              LDR      r1,[r1,#0]  ; allFuelCom
0005a6  4408              ADD      r0,r0,r1
0005a8  499d              LDR      r1,|L3.2080|
0005aa  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;498    				break;
0005ac  e15d              B        |L3.2154|
                  |L3.1454|
;;;499    			case 7://预喷油量 3
;;;500    				carAllRecord.beforeFuel3 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0005ae  4628              MOV      r0,r5
0005b0  4631              MOV      r1,r6
0005b2  f7fffffe          BL       __aeabi_ul2f
0005b6  9000              STR      r0,[sp,#0]
0005b8  ebc400c4          RSB      r0,r4,r4,LSL #3
0005bc  4a97              LDR      r2,|L3.2076|
0005be  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0005c0  eb020040          ADD      r0,r2,r0,LSL #1
0005c4  f8d01006          LDR      r1,[r0,#6]
0005c8  9800              LDR      r0,[sp,#0]
0005ca  f7fffffe          BL       __aeabi_fmul
0005ce  9001              STR      r0,[sp,#4]
0005d0  ebc400c4          RSB      r0,r4,r4,LSL #3
0005d4  4a91              LDR      r2,|L3.2076|
0005d6  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0005d8  eb020040          ADD      r0,r2,r0,LSL #1
0005dc  f8d0100a          LDR      r1,[r0,#0xa]
0005e0  9801              LDR      r0,[sp,#4]
0005e2  f7fffffe          BL       __aeabi_fadd
0005e6  9002              STR      r0,[sp,#8]
0005e8  f7fffffe          BL       __aeabi_f2uiz
0005ec  498a              LDR      r1,|L3.2072|
0005ee  f8a10043          STRH     r0,[r1,#0x43]
;;;501    				carAllRecord.totalFuel += carAllRecord.beforeFuel3;
0005f2  4608              MOV      r0,r1
0005f4  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
0005f6  f8b11043          LDRH     r1,[r1,#0x43]  ; carAllRecord
0005fa  4408              ADD      r0,r0,r1
0005fc  4986              LDR      r1,|L3.2072|
0005fe  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;502    				allFuelCom += carAllRecord.beforeFuel3;
000600  4608              MOV      r0,r1
000602  f8b00043          LDRH     r0,[r0,#0x43]  ; carAllRecord
000606  4986              LDR      r1,|L3.2080|
000608  6809              LDR      r1,[r1,#0]  ; allFuelCom
00060a  4408              ADD      r0,r0,r1
00060c  4984              LDR      r1,|L3.2080|
00060e  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;503    				break;
000610  e12b              B        |L3.2154|
                  |L3.1554|
;;;504    			case 8://后喷油量 1
;;;505    				carAllRecord.afterFuel1 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000612  4628              MOV      r0,r5
000614  4631              MOV      r1,r6
000616  f7fffffe          BL       __aeabi_ul2f
00061a  9000              STR      r0,[sp,#0]
00061c  ebc400c4          RSB      r0,r4,r4,LSL #3
000620  4a7e              LDR      r2,|L3.2076|
000622  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000624  eb020040          ADD      r0,r2,r0,LSL #1
000628  f8d01006          LDR      r1,[r0,#6]
00062c  9800              LDR      r0,[sp,#0]
00062e  f7fffffe          BL       __aeabi_fmul
000632  9001              STR      r0,[sp,#4]
000634  ebc400c4          RSB      r0,r4,r4,LSL #3
000638  4a78              LDR      r2,|L3.2076|
00063a  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00063c  eb020040          ADD      r0,r2,r0,LSL #1
000640  f8d0100a          LDR      r1,[r0,#0xa]
000644  9801              LDR      r0,[sp,#4]
000646  f7fffffe          BL       __aeabi_fadd
00064a  9002              STR      r0,[sp,#8]
00064c  f7fffffe          BL       __aeabi_f2uiz
000650  4971              LDR      r1,|L3.2072|
000652  f8a10048          STRH     r0,[r1,#0x48]
;;;506    				carAllRecord.totalFuel += carAllRecord.afterFuel1;
000656  4608              MOV      r0,r1
000658  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
00065a  f8b11048          LDRH     r1,[r1,#0x48]  ; carAllRecord
00065e  4408              ADD      r0,r0,r1
000660  496d              LDR      r1,|L3.2072|
000662  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;507    				break;
000664  e101              B        |L3.2154|
                  |L3.1638|
;;;508    			case 9://后喷油量 2
;;;509    				carAllRecord.afterFuel2 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000666  4628              MOV      r0,r5
000668  4631              MOV      r1,r6
00066a  f7fffffe          BL       __aeabi_ul2f
00066e  9000              STR      r0,[sp,#0]
000670  ebc400c4          RSB      r0,r4,r4,LSL #3
000674  4a69              LDR      r2,|L3.2076|
000676  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000678  eb020040          ADD      r0,r2,r0,LSL #1
00067c  f8d01006          LDR      r1,[r0,#6]
000680  9800              LDR      r0,[sp,#0]
000682  f7fffffe          BL       __aeabi_fmul
000686  9001              STR      r0,[sp,#4]
000688  ebc400c4          RSB      r0,r4,r4,LSL #3
00068c  4a63              LDR      r2,|L3.2076|
00068e  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000690  eb020040          ADD      r0,r2,r0,LSL #1
000694  f8d0100a          LDR      r1,[r0,#0xa]
000698  9801              LDR      r0,[sp,#4]
00069a  f7fffffe          BL       __aeabi_fadd
00069e  9002              STR      r0,[sp,#8]
0006a0  f7fffffe          BL       __aeabi_f2uiz
0006a4  495c              LDR      r1,|L3.2072|
0006a6  f8a1004a          STRH     r0,[r1,#0x4a]
;;;510    				carAllRecord.totalFuel += carAllRecord.afterFuel2;
0006aa  4608              MOV      r0,r1
0006ac  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
0006ae  f8b1104a          LDRH     r1,[r1,#0x4a]  ; carAllRecord
0006b2  4408              ADD      r0,r0,r1
0006b4  4958              LDR      r1,|L3.2072|
0006b6  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;511    				break;
0006b8  e0d7              B        |L3.2154|
                  |L3.1722|
;;;512    //			case 10://后喷油量3
;;;513    //				carAllRecord.afterFuel3 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
;;;514    //				carAllRecord.totalFuel += carAllRecord.afterFuel3;
;;;515    //				break;
;;;516    			case 11://当前喷油量
;;;517    				carAllRecord.curFuel    = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0006ba  4628              MOV      r0,r5
0006bc  4631              MOV      r1,r6
0006be  f7fffffe          BL       __aeabi_ul2f
0006c2  9000              STR      r0,[sp,#0]
0006c4  ebc400c4          RSB      r0,r4,r4,LSL #3
0006c8  4a54              LDR      r2,|L3.2076|
0006ca  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0006cc  eb020040          ADD      r0,r2,r0,LSL #1
0006d0  f8d01006          LDR      r1,[r0,#6]
0006d4  9800              LDR      r0,[sp,#0]
0006d6  f7fffffe          BL       __aeabi_fmul
0006da  9001              STR      r0,[sp,#4]
0006dc  ebc400c4          RSB      r0,r4,r4,LSL #3
0006e0  4a4e              LDR      r2,|L3.2076|
0006e2  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0006e4  eb020040          ADD      r0,r2,r0,LSL #1
0006e8  f8d0100a          LDR      r1,[r0,#0xa]
0006ec  9801              LDR      r0,[sp,#4]
0006ee  f7fffffe          BL       __aeabi_fadd
0006f2  9002              STR      r0,[sp,#8]
0006f4  f7fffffe          BL       __aeabi_f2uiz
0006f8  4947              LDR      r1,|L3.2072|
0006fa  f8a1004f          STRH     r0,[r1,#0x4f]
;;;518    				carAllRecord.totalFuel += carAllRecord.curFuel;
0006fe  4608              MOV      r0,r1
000700  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000702  f8b1104f          LDRH     r1,[r1,#0x4f]  ; carAllRecord
000706  4408              ADD      r0,r0,r1
000708  4943              LDR      r1,|L3.2072|
00070a  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;519    				allFuelCom             += carAllRecord.curFuel;
00070c  4608              MOV      r0,r1
00070e  f8b0004f          LDRH     r0,[r0,#0x4f]  ; carAllRecord
000712  4943              LDR      r1,|L3.2080|
000714  6809              LDR      r1,[r1,#0]  ; allFuelCom
000716  4408              ADD      r0,r0,r1
000718  4941              LDR      r1,|L3.2080|
00071a  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;520    				curFuelTimes ++;
00071c  4841              LDR      r0,|L3.2084|
00071e  7800              LDRB     r0,[r0,#0]  ; curFuelTimes
000720  1c40              ADDS     r0,r0,#1
000722  4940              LDR      r1,|L3.2084|
000724  7008              STRB     r0,[r1,#0]
;;;521    				if(curFuelTimes >= 4)//计算瞬时油耗  1s 的
000726  4608              MOV      r0,r1
000728  7800              LDRB     r0,[r0,#0]  ; curFuelTimes
00072a  2804              CMP      r0,#4
00072c  db72              BLT      |L3.2068|
;;;522    				{
;;;523    					carAllRecord.instantFuel = allFuelCom * carAllRecord.engineSpeed / 7;
00072e  483a              LDR      r0,|L3.2072|
000730  8e40              LDRH     r0,[r0,#0x32]  ; carAllRecord
000732  493b              LDR      r1,|L3.2080|
000734  6809              LDR      r1,[r1,#0]  ; allFuelCom
000736  4348              MULS     r0,r1,r0
000738  2107              MOVS     r1,#7
00073a  fbb0f0f1          UDIV     r0,r0,r1
00073e  4936              LDR      r1,|L3.2072|
000740  f8a10052          STRH     r0,[r1,#0x52]
;;;524    					LogReport("\r\n60-oil:%d,r:%d;",allFuelCom,carAllRecord.engineSpeed);
000744  4608              MOV      r0,r1
000746  8e42              LDRH     r2,[r0,#0x32]  ; carAllRecord
000748  4835              LDR      r0,|L3.2080|
00074a  6801              LDR      r1,[r0,#0]  ; allFuelCom
00074c  a036              ADR      r0,|L3.2088|
00074e  f7fffffe          BL       LogReport
;;;525    					ptr = Mem_malloc(6);
000752  2006              MOVS     r0,#6
000754  f7fffffe          BL       Mem_malloc
000758  4683              MOV      r11,r0
;;;526    					
;;;527    					memset(ptr,0,6);
00075a  2000              MOVS     r0,#0
00075c  f8cb0000          STR      r0,[r11,#0]
000760  f8ab0004          STRH     r0,[r11,#4]
;;;528    					
;;;529    					temp1 = t_htons(carAllRecord.instantFuel);	 
000764  492c              LDR      r1,|L3.2072|
000766  f8b10052          LDRH     r0,[r1,#0x52]  ; carAllRecord
00076a  f7fffffe          BL       t_htons
00076e  9003              STR      r0,[sp,#0xc]
;;;530    					memcpy(&ptr[0],&temp1,2);
000770  f8bd000c          LDRH     r0,[sp,#0xc]
000774  f8ab0000          STRH     r0,[r11,#0]
;;;531    					if(carAllRecord.carSpeed > 0)    //todo:需要确认单位
000778  4827              LDR      r0,|L3.2072|
00077a  f8b0002f          LDRH     r0,[r0,#0x2f]  ; carAllRecord
00077e  2800              CMP      r0,#0
000780  dd06              BLE      |L3.1936|
;;;532    						temp1 = t_htons(carAllRecord.carSpeed);
000782  4925              LDR      r1,|L3.2072|
000784  f8b1002f          LDRH     r0,[r1,#0x2f]  ; carAllRecord
000788  f7fffffe          BL       t_htons
00078c  9003              STR      r0,[sp,#0xc]
00078e  e005              B        |L3.1948|
                  |L3.1936|
;;;533    					else 
;;;534    						temp1 = t_htons(gpsMC.speed);
000790  492a              LDR      r1,|L3.2108|
000792  f8b10069          LDRH     r0,[r1,#0x69]  ; gpsMC
000796  f7fffffe          BL       t_htons
00079a  9003              STR      r0,[sp,#0xc]
                  |L3.1948|
;;;535    					memcpy(&ptr[2],&temp1,2);        //当前车速
00079c  f8bd000c          LDRH     r0,[sp,#0xc]
0007a0  f8ab0002          STRH     r0,[r11,#2]
;;;536    					
;;;537    					temp1 = t_htons(carAllRecord.engineSpeed);
0007a4  491c              LDR      r1,|L3.2072|
0007a6  8e48              LDRH     r0,[r1,#0x32]  ; carAllRecord
0007a8  f7fffffe          BL       t_htons
0007ac  9003              STR      r0,[sp,#0xc]
;;;538    					memcpy(&ptr[4],&temp1,2);        //当前转速
0007ae  f8bd000c          LDRH     r0,[sp,#0xc]
0007b2  f8ab0004          STRH     r0,[r11,#4]
;;;539    					
;;;540    					OSMutexPend(CDMASendMutex,0,&err);
0007b6  aa04              ADD      r2,sp,#0x10
0007b8  2100              MOVS     r1,#0
0007ba  4821              LDR      r0,|L3.2112|
0007bc  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0007be  f7fffffe          BL       OSMutexPend
;;;541    					
;;;542    					memcpy(&pPid[50][pPid[50][0]],ptr,6);
0007c2  4820              LDR      r0,|L3.2116|
0007c4  f8d000c8          LDR      r0,[r0,#0xc8]  ; pPid
0007c8  491e              LDR      r1,|L3.2116|
0007ca  f8d110c8          LDR      r1,[r1,#0xc8]  ; pPid
0007ce  7809              LDRB     r1,[r1,#0]
0007d0  4408              ADD      r0,r0,r1
0007d2  f8db1000          LDR      r1,[r11,#0]
0007d6  6001              STR      r1,[r0,#0]
0007d8  f8bb1004          LDRH     r1,[r11,#4]
0007dc  8081              STRH     r1,[r0,#4]
;;;543    					pPid[50][0] += 6;
0007de  4819              LDR      r0,|L3.2116|
0007e0  f8d000c8          LDR      r0,[r0,#0xc8]  ; pPid
0007e4  7800              LDRB     r0,[r0,#0]
0007e6  1d80              ADDS     r0,r0,#6
0007e8  4916              LDR      r1,|L3.2116|
0007ea  f8d110c8          LDR      r1,[r1,#0xc8]  ; pPid
0007ee  7008              STRB     r0,[r1,#0]
;;;544    					cdmaDataToSend->datLength += 6;
0007f0  4815              LDR      r0,|L3.2120|
0007f2  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0007f4  8800              LDRH     r0,[r0,#0]
0007f6  1d80              ADDS     r0,r0,#6
0007f8  4913              LDR      r1,|L3.2120|
0007fa  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0007fc  8008              STRH     r0,[r1,#0]
;;;545    					
;;;546    					OSMutexPost(CDMASendMutex);
0007fe  4810              LDR      r0,|L3.2112|
000800  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000802  f7fffffe          BL       OSMutexPost
;;;547    					
;;;548    					Mem_free(ptr);
000806  4658              MOV      r0,r11
000808  f7fffffe          BL       Mem_free
;;;549    					
;;;550    					carAllRecord.totalFuel += carAllRecord.instantFuel;
00080c  4802              LDR      r0,|L3.2072|
00080e  e01d              B        |L3.2124|
                  |L3.2064|
000810  e02f              B        |L3.2162|
                  |L3.2066|
000812  e02c              B        |L3.2158|
                  |L3.2068|
000814  e027              B        |L3.2150|
000816  0000              DCW      0x0000
                  |L3.2072|
                          DCD      carAllRecord
                  |L3.2076|
                          DCD      ptrPIDVars
                  |L3.2080|
                          DCD      allFuelCom
                  |L3.2084|
                          DCD      curFuelTimes
                  |L3.2088|
000828  0d0a3630          DCB      "\r\n60-oil:%d,r:%d;",0
00082c  2d6f696c
000830  3a25642c
000834  723a2564
000838  3b00    
00083a  00                DCB      0
00083b  00                DCB      0
                  |L3.2108|
                          DCD      gpsMC
                  |L3.2112|
                          DCD      CDMASendMutex
                  |L3.2116|
                          DCD      pPid
                  |L3.2120|
                          DCD      cdmaDataToSend
                  |L3.2124|
00084c  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
00084e  490d              LDR      r1,|L3.2180|
000850  f8b11052          LDRH     r1,[r1,#0x52]  ; carAllRecord
000854  4408              ADD      r0,r0,r1
000856  490b              LDR      r1,|L3.2180|
000858  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;551    					temp         = 0;
00085a  2700              MOVS     r7,#0
;;;552    					allFuelCom   = 0;
00085c  2000              MOVS     r0,#0
00085e  490a              LDR      r1,|L3.2184|
000860  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;553    					curFuelTimes = 0;
000862  490a              LDR      r1,|L3.2188|
000864  7008              STRB     r0,[r1,#0]
                  |L3.2150|
;;;554    				}
;;;555    				break;
000866  e000              B        |L3.2154|
                  |L3.2152|
;;;556    			default:break;
000868  bf00              NOP      
                  |L3.2154|
00086a  bf00              NOP                            ;472
00086c  bf00              NOP                            ;397
                  |L3.2158|
00086e  1c60              ADDS     r0,r4,#1              ;394
000870  b2c4              UXTB     r4,r0                 ;394
                  |L3.2162|
000872  4807              LDR      r0,|L3.2192|
000874  f8b00084          LDRH     r0,[r0,#0x84]         ;394  ; varOperation
000878  42a0              CMP      r0,r4                 ;394
00087a  f73fabcc          BGT      |L3.22|
;;;557    		}
;;;558    	}
;;;559    }
00087e  b00b              ADD      sp,sp,#0x2c
000880  e8bd8ff0          POP      {r4-r11,pc}
;;;560    
                          ENDP

                  |L3.2180|
                          DCD      carAllRecord
                  |L3.2184|
                          DCD      allFuelCom
                  |L3.2188|
                          DCD      curFuelTimes
                  |L3.2192|
                          DCD      varOperation

                          AREA ||i.TestServer||, CODE, READONLY, ALIGN=2

                  TestServer PROC
;;;176    
;;;177    void TestServer(void)               //用服务器下发的 ID、Baud 等等进行 CAN 配置
000000  b57f              PUSH     {r0-r6,lr}
;;;178    {
;;;179    	uint8_t   err,temp;
;;;180    	CanRxMsg* CAN1_RxMsg;
;;;181    	CAN_InitTypeDef CAN_InitStructure;
;;;182    	varOperation.pidRun = 0;
000002  2000              MOVS     r0,#0
000004  4970              LDR      r1,|L4.456|
000006  f8810095          STRB     r0,[r1,#0x95]
;;;183    	OSSemPend(LoginMes,0,&err);     //1394606080
00000a  aa03              ADD      r2,sp,#0xc
00000c  2100              MOVS     r1,#0
00000e  486f              LDR      r0,|L4.460|
000010  6800              LDR      r0,[r0,#0]  ; LoginMes
000012  f7fffffe          BL       OSSemPend
;;;184    	if((varOperation.pidVersion == 0xFFFFFFFF )||(varOperation.pidNum == 0xFFFF)||(varOperation.busType == 0xFF))
000016  486c              LDR      r0,|L4.456|
000018  f8d0007a          LDR      r0,[r0,#0x7a]  ; varOperation
00001c  1c40              ADDS     r0,r0,#1
00001e  b158              CBZ      r0,|L4.56|
000020  4869              LDR      r0,|L4.456|
000022  f8b00078          LDRH     r0,[r0,#0x78]  ; varOperation
000026  f64f71ff          MOV      r1,#0xffff
00002a  4288              CMP      r0,r1
00002c  d004              BEQ      |L4.56|
00002e  4866              LDR      r0,|L4.456|
000030  f8900086          LDRB     r0,[r0,#0x86]  ; varOperation
000034  28ff              CMP      r0,#0xff
000036  d109              BNE      |L4.76|
                  |L4.56|
;;;185    	{
;;;186    		varOperation.canTest = 0;
000038  2000              MOVS     r0,#0
00003a  4963              LDR      r1,|L4.456|
00003c  f8a10091          STRH     r0,[r1,#0x91]
;;;187    		LogReport("\r\n06-Unknown Equipment;");
000040  a063              ADR      r0,|L4.464|
000042  f7fffffe          BL       LogReport
;;;188    		CANTestChannel();
000046  f7fffffe          BL       CANTestChannel
                  |L4.74|
;;;189    		return;
;;;190    	}	
;;;191    	
;;;192    	if(varOperation.pidVersion == 0)
;;;193    	{
;;;194    		LogReport("\r\n07-ECUID don't Config:%d;",canDataConfig.pidVersion);
;;;195    		CANTestChannel();
;;;196    		return	;
;;;197    	}
;;;198    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能CAN1时钟
;;;199    	
;;;200    	varOperation.canTest = 2;             //Flash中的CAN配置成功
;;;201    	
;;;202    	CAN_DeInit(CAN1);  
;;;203    	CAN_StructInit(&CAN_InitStructure);  
;;;204    	CAN1_BaudSet(canDataConfig.canBaud);  //先用flash中的CAN配置进行测试
;;;205    	CAN1_SetFilter(varOperation.canRxId ,CAN_ID_EXT); 
;;;206    	CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
;;;207    	
;;;208    	dataToSend.canId = canDataConfig.canTxId;
;;;209    	dataToSend.ide   = canDataConfig.canIdType;
;;;210    	dataToSend.pdat  = &configData[9];    //CAN PID 的第一包数据
;;;211    	
;;;212    	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
;;;213    	
;;;214    	CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
;;;215    	if(err == OS_ERR_NONE)
;;;216    	{
;;;217    		Mem_free(CAN1_RxMsg);
;;;218    		LogReport("\r\n08-ECUID Right:%d;",canDataConfig.pidVersion);    //ECU有回应，配置文件正确
;;;219    		
;;;220    		dataToSend.ide   = canDataConfig.canIdType;
;;;221    		dataToSend.canId = canDataConfig.canTxId;
;;;222    		
;;;223    		temp = ReadECUVersion(canDataConfig.pidVerCmd);
;;;224    		if(temp < 100)                  //读取ECU版本号，读取不成功则不进行动力提升
;;;225    		{
;;;226    			Get_Q_FromECU();            //读取喷油量的原始值，得到当前车辆系数
;;;227    		
;;;228    			CAN_DeInit(CAN1);
;;;229    			CAN_StructInit(&CAN_InitStructure);
;;;230    			CAN1_BaudSet(canDataConfig.canBaud);  
;;;231    			CAN1_SetFilter(varOperation.canRxId ,CAN_ID_EXT);
;;;232    			CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
;;;233    			OSTimeDlyHMSM(0,0,5,0);    //标定结束后，需要等待 20s 读取故障码，若不等待的话，读出来都是拒绝应答
;;;234    			
;;;235    			CAN_DeInit(CAN1);  
;;;236    			CAN_StructInit(&CAN_InitStructure);
;;;237    			CAN1_BaudSet(canDataConfig.canBaud);   
;;;238    			CAN1_ClearFilter();                    
;;;239    			CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
;;;240    			varOperation.canTest = 2;  //启动CAN，开始与ECU进行数据交互
;;;241    		}
;;;242    		else if(temp == 200)           //读取版本号失败（ 配置文件有误 ）
;;;243    		{
;;;244    			CAN_DeInit(CAN1);  
;;;245    			CAN_StructInit(&CAN_InitStructure);
;;;246    			CAN1_BaudSet(canDataConfig.canBaud);   
;;;247    			CAN1_ClearFilter();                    
;;;248    			CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
;;;249    			varOperation.canTest = 2; 
;;;250    			CANTestChannel();
;;;251    		}
;;;252    		else     //版本号读取出来了，但是不能提升动力，那就正常跑吧
;;;253    		{
;;;254    			OSTimeDlyHMSM(0,0,20,0);   //读取故障码是需要时间的
;;;255    		}
;;;256    	}
;;;257    	else
;;;258    	{
;;;259    		LogReport("\r\n09-ECUID Error:%d!",canDataConfig.pidVersion);
;;;260    		CANTestChannel();
;;;261    	}
;;;262        varOperation.pidRun = 1;
;;;263    } 
00004a  bd7f              POP      {r0-r6,pc}
                  |L4.76|
00004c  485e              LDR      r0,|L4.456|
00004e  f8d0007a          LDR      r0,[r0,#0x7a]         ;192  ; varOperation
000052  b938              CBNZ     r0,|L4.100|
000054  4864              LDR      r0,|L4.488|
000056  6801              LDR      r1,[r0,#0]            ;194  ; canDataConfig
000058  a064              ADR      r0,|L4.492|
00005a  f7fffffe          BL       LogReport
00005e  f7fffffe          BL       CANTestChannel
000062  e7f2              B        |L4.74|
                  |L4.100|
000064  2101              MOVS     r1,#1                 ;198
000066  0648              LSLS     r0,r1,#25             ;198
000068  f7fffffe          BL       RCC_APB1PeriphClockCmd
00006c  2002              MOVS     r0,#2                 ;200
00006e  4956              LDR      r1,|L4.456|
000070  f8a10091          STRH     r0,[r1,#0x91]         ;200
000074  4864              LDR      r0,|L4.520|
000076  f7fffffe          BL       CAN_DeInit
00007a  4668              MOV      r0,sp                 ;203
00007c  f7fffffe          BL       CAN_StructInit
000080  4959              LDR      r1,|L4.488|
000082  7c88              LDRB     r0,[r1,#0x12]         ;204  ; canDataConfig
000084  f7fffffe          BL       CAN1_BaudSet
000088  494f              LDR      r1,|L4.456|
00008a  f8d1008c          LDR      r0,[r1,#0x8c]         ;205  ; varOperation
00008e  2104              MOVS     r1,#4                 ;205
000090  f7fffffe          BL       CAN1_SetFilter
000094  2201              MOVS     r2,#1                 ;206
000096  2110              MOVS     r1,#0x10              ;206
000098  485b              LDR      r0,|L4.520|
00009a  f7fffffe          BL       CAN_ITConfig
00009e  4852              LDR      r0,|L4.488|
0000a0  f8d0000a          LDR      r0,[r0,#0xa]          ;208  ; canDataConfig
0000a4  4959              LDR      r1,|L4.524|
0000a6  6008              STR      r0,[r1,#0]            ;208  ; dataToSend
0000a8  484f              LDR      r0,|L4.488|
0000aa  7a40              LDRB     r0,[r0,#9]            ;209  ; canDataConfig
0000ac  6048              STR      r0,[r1,#4]            ;209  ; dataToSend
0000ae  4858              LDR      r0,|L4.528|
0000b0  6088              STR      r0,[r1,#8]            ;210  ; dataToSend
0000b2  460b              MOV      r3,r1                 ;212
0000b4  689a              LDR      r2,[r3,#8]            ;212  ; dataToSend
0000b6  6859              LDR      r1,[r3,#4]            ;212  ; dataToSend
0000b8  6818              LDR      r0,[r3,#0]            ;212  ; dataToSend
0000ba  f7fffffe          BL       OBD_CAN_SendData
0000be  aa03              ADD      r2,sp,#0xc            ;214
0000c0  f44f71fa          MOV      r1,#0x1f4             ;214
0000c4  4853              LDR      r0,|L4.532|
0000c6  6800              LDR      r0,[r0,#0]            ;214  ; canRecieveQ
0000c8  f7fffffe          BL       OSQPend
0000cc  4605              MOV      r5,r0                 ;214
0000ce  f89d000c          LDRB     r0,[sp,#0xc]          ;215
0000d2  2800              CMP      r0,#0                 ;215
0000d4  d16a              BNE      |L4.428|
0000d6  4628              MOV      r0,r5                 ;217
0000d8  f7fffffe          BL       Mem_free
0000dc  4842              LDR      r0,|L4.488|
0000de  6801              LDR      r1,[r0,#0]            ;218  ; canDataConfig
0000e0  a04d              ADR      r0,|L4.536|
0000e2  f7fffffe          BL       LogReport
0000e6  4840              LDR      r0,|L4.488|
0000e8  7a40              LDRB     r0,[r0,#9]            ;220  ; canDataConfig
0000ea  4948              LDR      r1,|L4.524|
0000ec  6048              STR      r0,[r1,#4]            ;220  ; dataToSend
0000ee  483e              LDR      r0,|L4.488|
0000f0  f8d0000a          LDR      r0,[r0,#0xa]          ;221  ; canDataConfig
0000f4  6008              STR      r0,[r1,#0]            ;221  ; dataToSend
0000f6  483c              LDR      r0,|L4.488|
0000f8  3013              ADDS     r0,r0,#0x13           ;223
0000fa  f7fffffe          BL       ReadECUVersion
0000fe  4604              MOV      r4,r0                 ;223
000100  2c64              CMP      r4,#0x64              ;224
000102  da32              BGE      |L4.362|
000104  f7fffffe          BL       Get_Q_FromECU
000108  483f              LDR      r0,|L4.520|
00010a  f7fffffe          BL       CAN_DeInit
00010e  4668              MOV      r0,sp                 ;229
000110  f7fffffe          BL       CAN_StructInit
000114  4934              LDR      r1,|L4.488|
000116  7c88              LDRB     r0,[r1,#0x12]         ;230  ; canDataConfig
000118  f7fffffe          BL       CAN1_BaudSet
00011c  492a              LDR      r1,|L4.456|
00011e  f8d1008c          LDR      r0,[r1,#0x8c]         ;231  ; varOperation
000122  2104              MOVS     r1,#4                 ;231
000124  f7fffffe          BL       CAN1_SetFilter
000128  2201              MOVS     r2,#1                 ;232
00012a  2110              MOVS     r1,#0x10              ;232
00012c  4836              LDR      r0,|L4.520|
00012e  f7fffffe          BL       CAN_ITConfig
000132  2300              MOVS     r3,#0                 ;233
000134  2205              MOVS     r2,#5                 ;233
000136  4619              MOV      r1,r3                 ;233
000138  4618              MOV      r0,r3                 ;233
00013a  f7fffffe          BL       OSTimeDlyHMSM
00013e  4832              LDR      r0,|L4.520|
000140  f7fffffe          BL       CAN_DeInit
000144  4668              MOV      r0,sp                 ;236
000146  f7fffffe          BL       CAN_StructInit
00014a  4927              LDR      r1,|L4.488|
00014c  7c88              LDRB     r0,[r1,#0x12]         ;237  ; canDataConfig
00014e  f7fffffe          BL       CAN1_BaudSet
000152  f7fffffe          BL       CAN1_ClearFilter
000156  2201              MOVS     r2,#1                 ;239
000158  2110              MOVS     r1,#0x10              ;239
00015a  482b              LDR      r0,|L4.520|
00015c  f7fffffe          BL       CAN_ITConfig
000160  2002              MOVS     r0,#2                 ;240
000162  4919              LDR      r1,|L4.456|
000164  f8a10091          STRH     r0,[r1,#0x91]         ;240
000168  e027              B        |L4.442|
                  |L4.362|
00016a  2cc8              CMP      r4,#0xc8              ;242
00016c  d117              BNE      |L4.414|
00016e  4826              LDR      r0,|L4.520|
000170  f7fffffe          BL       CAN_DeInit
000174  4668              MOV      r0,sp                 ;245
000176  f7fffffe          BL       CAN_StructInit
00017a  491b              LDR      r1,|L4.488|
00017c  7c88              LDRB     r0,[r1,#0x12]         ;246  ; canDataConfig
00017e  f7fffffe          BL       CAN1_BaudSet
000182  f7fffffe          BL       CAN1_ClearFilter
000186  2201              MOVS     r2,#1                 ;248
000188  2110              MOVS     r1,#0x10              ;248
00018a  481f              LDR      r0,|L4.520|
00018c  f7fffffe          BL       CAN_ITConfig
000190  2002              MOVS     r0,#2                 ;249
000192  490d              LDR      r1,|L4.456|
000194  f8a10091          STRH     r0,[r1,#0x91]         ;249
000198  f7fffffe          BL       CANTestChannel
00019c  e00d              B        |L4.442|
                  |L4.414|
00019e  2300              MOVS     r3,#0                 ;254
0001a0  2214              MOVS     r2,#0x14              ;254
0001a2  4619              MOV      r1,r3                 ;254
0001a4  4618              MOV      r0,r3                 ;254
0001a6  f7fffffe          BL       OSTimeDlyHMSM
0001aa  e006              B        |L4.442|
                  |L4.428|
0001ac  480e              LDR      r0,|L4.488|
0001ae  6801              LDR      r1,[r0,#0]            ;259  ; canDataConfig
0001b0  a01f              ADR      r0,|L4.560|
0001b2  f7fffffe          BL       LogReport
0001b6  f7fffffe          BL       CANTestChannel
                  |L4.442|
0001ba  2001              MOVS     r0,#1                 ;262
0001bc  4902              LDR      r1,|L4.456|
0001be  f8810095          STRB     r0,[r1,#0x95]         ;262
0001c2  bf00              NOP      
0001c4  e741              B        |L4.74|
;;;264    
                          ENDP

0001c6  0000              DCW      0x0000
                  |L4.456|
                          DCD      varOperation
                  |L4.460|
                          DCD      LoginMes
                  |L4.464|
0001d0  0d0a3036          DCB      "\r\n06-Unknown Equipment;",0
0001d4  2d556e6b
0001d8  6e6f776e
0001dc  20457175
0001e0  69706d65
0001e4  6e743b00
                  |L4.488|
                          DCD      canDataConfig
                  |L4.492|
0001ec  0d0a3037          DCB      "\r\n07-ECUID don't Config:%d;",0
0001f0  2d454355
0001f4  49442064
0001f8  6f6e2774
0001fc  20436f6e
000200  6669673a
000204  25643b00
                  |L4.520|
                          DCD      0x40006400
                  |L4.524|
                          DCD      dataToSend
                  |L4.528|
                          DCD      configData+0x9
                  |L4.532|
                          DCD      canRecieveQ
                  |L4.536|
000218  0d0a3038          DCB      "\r\n08-ECUID Right:%d;",0
00021c  2d454355
000220  49442052
000224  69676874
000228  3a25643b
00022c  00      
00022d  00                DCB      0
00022e  00                DCB      0
00022f  00                DCB      0
                  |L4.560|
000230  0d0a3039          DCB      "\r\n09-ECUID Error:%d!",0
000234  2d454355
000238  49442045
00023c  72726f72
000240  3a256421
000244  00      
000245  00                DCB      0
000246  00                DCB      0
000247  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  dataToSend
                          %        12

                          AREA ||.data||, DATA, ALIGN=2

                  pidManyBag
000000  30000000          DCB      0x30,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  curFuelTimes
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  allFuelCom
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\OBD\\OBDTask.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REV16|
#line 465 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.2.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_OBDTask_c_bbcd6d9f____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REVSH|
#line 480
|__asm___9_OBDTask_c_bbcd6d9f____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____RRX|
#line 667
|__asm___9_OBDTask_c_bbcd6d9f____RRX| PROC
#line 668

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
