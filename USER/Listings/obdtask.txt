; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\obdtask.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\obdtask.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\obdtask.crf ..\OBD\OBDTask.c]
                          THUMB

                          AREA ||i.CANTestChannel||, CODE, READONLY, ALIGN=2

                  CANTestChannel PROC
;;;126    
;;;127    void CANTestChannel(void )
000000  b5f8              PUSH     {r3-r7,lr}
;;;128    {
;;;129    	uint8_t err,i;
;;;130    	CanRxMsg* CAN1_RxMsg;
;;;131    	uint32_t canRxID;
;;;132    
;;;133    	varOperation.canTest = 0;
000002  2000              MOVS     r0,#0
000004  4934              LDR      r1,|L1.216|
000006  f8a1007c          STRH     r0,[r1,#0x7c]
;;;134    	for(i = 0;i<NUMOfCANBaud;i++)       //获得CAN的波特率
00000a  2400              MOVS     r4,#0
00000c  e014              B        |L1.56|
                  |L1.14|
;;;135    	{
;;;136    		CAN1_BaudSet(canBaudEnum[i]); 
00000e  4933              LDR      r1,|L1.220|
000010  5d08              LDRB     r0,[r1,r4]
000012  f7fffffe          BL       CAN1_BaudSet
;;;137    		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
000016  466a              MOV      r2,sp
000018  f44f71fa          MOV      r1,#0x1f4
00001c  4830              LDR      r0,|L1.224|
00001e  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000020  f7fffffe          BL       OSQPend
000024  4606              MOV      r6,r0
;;;138    		if(err == OS_ERR_NONE)
000026  f89d0000          LDRB     r0,[sp,#0]
00002a  b918              CBNZ     r0,|L1.52|
;;;139    		{
;;;140    			Mem_free(CAN1_RxMsg);
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       Mem_free
;;;141    			break;
000032  e003              B        |L1.60|
                  |L1.52|
000034  1c60              ADDS     r0,r4,#1              ;134
000036  b2c4              UXTB     r4,r0                 ;134
                  |L1.56|
000038  2c03              CMP      r4,#3                 ;134
00003a  dbe8              BLT      |L1.14|
                  |L1.60|
00003c  bf00              NOP      
;;;142    		}
;;;143    	}dataToSend.ide = CAN_ID_EXT;
00003e  2004              MOVS     r0,#4
000040  4928              LDR      r1,|L1.228|
000042  6048              STR      r0,[r1,#4]  ; dataToSend
;;;144    	for(i=0;i<NUMOfCANID_EXT;i++)
000044  2400              MOVS     r4,#0
000046  e03e              B        |L1.198|
                  |L1.72|
;;;145    	{
;;;146    		canRxID =(canIdExt[i]>>24) &0x000000FF;
000048  4827              LDR      r0,|L1.232|
00004a  f8500024          LDR      r0,[r0,r4,LSL #2]
00004e  0e05              LSRS     r5,r0,#24
;;;147    		canRxID =(canRxID << 8)+((canIdExt[i]>>16) &0x000000FF);
000050  4825              LDR      r0,|L1.232|
000052  f8500024          LDR      r0,[r0,r4,LSL #2]
000056  f3c04007          UBFX     r0,r0,#16,#8
00005a  eb002505          ADD      r5,r0,r5,LSL #8
;;;148    		canRxID =(canRxID << 8)+(canIdExt[i]&0x000000FF);
00005e  4822              LDR      r0,|L1.232|
000060  f8500024          LDR      r0,[r0,r4,LSL #2]
000064  f365201f          BFI      r0,r5,#8,#24
000068  4605              MOV      r5,r0
;;;149    		canRxID =(canRxID << 8)+((canIdExt[i]>>8) &0x000000FF);
00006a  481f              LDR      r0,|L1.232|
00006c  f8300024          LDRH     r0,[r0,r4,LSL #2]
000070  f3c02007          UBFX     r0,r0,#8,#8
000074  eb002505          ADD      r5,r0,r5,LSL #8
;;;150    		CAN1_SetFilter(canRxID,CAN_ID_EXT);
000078  2104              MOVS     r1,#4
00007a  4628              MOV      r0,r5
00007c  f7fffffe          BL       CAN1_SetFilter
;;;151    		dataToSend.canId = canIdExt[i];
000080  4819              LDR      r0,|L1.232|
000082  f8500024          LDR      r0,[r0,r4,LSL #2]
000086  4917              LDR      r1,|L1.228|
000088  6008              STR      r0,[r1,#0]  ; dataToSend
;;;152    		
;;;153    		CAN1_TxMsg.IDE     = CAN_ID_EXT;
00008a  2004              MOVS     r0,#4
00008c  4917              LDR      r1,|L1.236|
00008e  7208              STRB     r0,[r1,#8]
;;;154    		CAN1_TxMsg.StdId   = dataToSend.canId;
000090  4814              LDR      r0,|L1.228|
000092  6800              LDR      r0,[r0,#0]  ; dataToSend
000094  6008              STR      r0,[r1,#0]  ; CAN1_TxMsg
;;;155    		CAN1_TxMsg.ExtId   = dataToSend.canId;
000096  4813              LDR      r0,|L1.228|
000098  6800              LDR      r0,[r0,#0]  ; dataToSend
00009a  6048              STR      r0,[r1,#4]  ; CAN1_TxMsg
;;;156    		CAN1_TxMsg.DLC     = 0x08;
00009c  2008              MOVS     r0,#8
00009e  7288              STRB     r0,[r1,#0xa]
;;;157    		
;;;158    		CAN1_TxMsg.Data[0] = 0x02;
0000a0  2002              MOVS     r0,#2
0000a2  72c8              STRB     r0,[r1,#0xb]
;;;159    		CAN1_TxMsg.Data[1] = 0x1A;
0000a4  211a              MOVS     r1,#0x1a
0000a6  4811              LDR      r0,|L1.236|
0000a8  7301              STRB     r1,[r0,#0xc]
;;;160    		CAN1_TxMsg.Data[2] = 0x94;
0000aa  2194              MOVS     r1,#0x94
0000ac  7341              STRB     r1,[r0,#0xd]
;;;161    		CAN1_TxMsg.Data[3] = 0x00;
0000ae  2100              MOVS     r1,#0
0000b0  7381              STRB     r1,[r0,#0xe]
;;;162    		CAN1_TxMsg.Data[4] = 0x00;
0000b2  73c1              STRB     r1,[r0,#0xf]
;;;163    		CAN1_TxMsg.Data[5] = 0x00;
0000b4  7401              STRB     r1,[r0,#0x10]
;;;164    		CAN1_TxMsg.Data[6] = 0x00;
0000b6  7441              STRB     r1,[r0,#0x11]
;;;165    		CAN1_TxMsg.Data[7] = 0x00;
0000b8  7481              STRB     r1,[r0,#0x12]
;;;166    		
;;;167    		CAN_Transmit(CAN1,&CAN1_TxMsg);
0000ba  4601              MOV      r1,r0
0000bc  480c              LDR      r0,|L1.240|
0000be  f7fffffe          BL       CAN_Transmit
0000c2  1c60              ADDS     r0,r4,#1              ;144
0000c4  b2c4              UXTB     r4,r0                 ;144
                  |L1.198|
0000c6  2c05              CMP      r4,#5                 ;144
0000c8  dbbe              BLT      |L1.72|
;;;168    		
;;;169    	}
;;;170    	for(i=0;i<NUMOfCANID_EXT;i++)
0000ca  2400              MOVS     r4,#0
0000cc  e001              B        |L1.210|
                  |L1.206|
0000ce  1c60              ADDS     r0,r4,#1
0000d0  b2c4              UXTB     r4,r0
                  |L1.210|
0000d2  2c05              CMP      r4,#5
0000d4  dbfb              BLT      |L1.206|
;;;171    	{
;;;172    	
;;;173    		
;;;174    	}
;;;175    }
0000d6  bdf8              POP      {r3-r7,pc}
;;;176    extern VARConfig    *ptrPIDVars;      //指向第二配置区
                          ENDP

                  |L1.216|
                          DCD      varOperation
                  |L1.220|
                          DCD      canBaudEnum
                  |L1.224|
                          DCD      canRecieveQ
                  |L1.228|
                          DCD      dataToSend
                  |L1.232|
                          DCD      canIdExt
                  |L1.236|
                          DCD      CAN1_TxMsg
                  |L1.240|
                          DCD      0x40006400

                          AREA ||i.OBDTask||, CODE, READONLY, ALIGN=2

                  OBDTask PROC
;;;21     extern SYS_OperationVar  varOperation;
;;;22     void OBDTask(void *pdata)
000000  b508              PUSH     {r3,lr}
;;;23     {
;;;24     	INT8U     err;
;;;25     	uint8_t   i      = 0;
000002  f04f0800          MOV      r8,#0
;;;26     	uint8_t   cmdLen = 0;        //封包的时候要减去指令的长度
000006  2600              MOVS     r6,#0
;;;27     	uint8_t   cmdNum = 0;        //指令序号
000008  46b1              MOV      r9,r6
;;;28     	uint8_t   cmdManyPackNum = 0;//要接受的多包的数量
00000a  46b2              MOV      r10,r6
;;;29     	
;;;30     	CanRxMsg* CAN1_RxMsg;        //指向接收到的OBD信息
;;;31     	uint8_t * can1_Txbuff;       //指向要发送的OBD信息
;;;32     	uint8_t * ptrSaveBuff;
;;;33     	
;;;34     	CAN1Config();                //CAN 配置
00000c  f7fffffe          BL       CAN1Config
;;;35     	
;;;36     	canSendQ    = OSQCreate(&canSendBuf[0],CANSENDBUF_SIZE);//卡路宝向ECU发送指令的消息队列
000010  2150              MOVS     r1,#0x50
000012  488c              LDR      r0,|L2.580|
000014  f7fffffe          BL       OSQCreate
000018  498b              LDR      r1,|L2.584|
00001a  6008              STR      r0,[r1,#0]  ; canSendQ
;;;37     	canRecieveQ = OSQCreate(&canRecBuf[0],CANRECBUF_SIZE);  //卡路宝从ECU接收指令的循环队列
00001c  2114              MOVS     r1,#0x14
00001e  488b              LDR      r0,|L2.588|
000020  f7fffffe          BL       OSQCreate
000024  498a              LDR      r1,|L2.592|
000026  6008              STR      r0,[r1,#0]  ; canRecieveQ
;;;38     	
;;;39     //	CANTestChannel();//完成CAN的ID、波特率设定，并且读取出ECU的版本号
;;;40     	
;;;41     //	dataToSend.canId = 0x7E0;
;;;42     //	dataToSend.ide   = CAN_ID_STD;
;;;43     //	dataToSend.testIsOK = 1; 
;;;44     	
;;;45     //	dataToSend.canId = varOperation.canTxId;//潍柴：0x18DA10FB   渣土车：0x18DA00FA
;;;46     //	dataToSend.ide   = varOperation.canIdType;
;;;47     	
;;;48     	while(1)
000028  e10a              B        |L2.576|
                  |L2.42|
;;;49     	{	
;;;50     		can1_Txbuff = OSQPend(canSendQ,0,&err);//收到PID指令，进行发送
00002a  466a              MOV      r2,sp
00002c  2100              MOVS     r1,#0
00002e  4886              LDR      r0,|L2.584|
000030  6800              LDR      r0,[r0,#0]  ; canSendQ
000032  f7fffffe          BL       OSQPend
000036  4607              MOV      r7,r0
;;;51     		
;;;52     		cmdNum = can1_Txbuff[0];               //记录PID指令序号
000038  f8979000          LDRB     r9,[r7,#0]
;;;53     		cmdLen = can1_Txbuff[1];               //记录PID指令长度
00003c  787e              LDRB     r6,[r7,#1]
;;;54     		
;;;55     		dataToSend.pdat = &can1_Txbuff[1];     
00003e  1c78              ADDS     r0,r7,#1
000040  4984              LDR      r1,|L2.596|
000042  6088              STR      r0,[r1,#8]  ; dataToSend
;;;56     		OBD_CAN_SendData(dataToSend);          //发送PID指令
000044  4608              MOV      r0,r1
000046  c807              LDM      r0,{r0-r2}
000048  f7fffffe          BL       OBD_CAN_SendData
;;;57     		
;;;58     
;;;59     		CAN1_RxMsg = OSQPend(canRecieveQ,25,&err); //接收到OBD回复
00004c  466a              MOV      r2,sp
00004e  2119              MOVS     r1,#0x19
000050  487f              LDR      r0,|L2.592|
000052  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000054  f7fffffe          BL       OSQPend
000058  4604              MOV      r4,r0
;;;60     		if(err == OS_ERR_NONE)
00005a  f89d0000          LDRB     r0,[sp,#0]
00005e  2800              CMP      r0,#0
000060  d17e              BNE      |L2.352|
;;;61     		{
;;;62     			freOBDLed = 300;                    //OBD 初始化成功
000062  f44f7096          MOV      r0,#0x12c
000066  497c              LDR      r1,|L2.600|
000068  8008              STRH     r0,[r1,#0]
;;;63     			if(CAN1_RxMsg->Data[0] == 0x10)     //多包处理
00006a  7ae0              LDRB     r0,[r4,#0xb]
00006c  2810              CMP      r0,#0x10
00006e  d178              BNE      |L2.354|
;;;64     			{
;;;65     				ptrSaveBuff = Mem_malloc(CAN1_RxMsg->Data[1]+10);//申请的内存块足够长
000070  7b21              LDRB     r1,[r4,#0xc]
000072  f101000a          ADD      r0,r1,#0xa
000076  f7fffffe          BL       Mem_malloc
00007a  4605              MOV      r5,r0
;;;66     				if(ptrSaveBuff != NULL)
00007c  2d00              CMP      r5,#0
00007e  d071              BEQ      |L2.356|
;;;67     				{
;;;68     					ptrSaveBuff[0] = CAN1_RxMsg->Data[1] - cmdLen + 3;
000080  7b20              LDRB     r0,[r4,#0xc]
000082  1b80              SUBS     r0,r0,r6
000084  1cc0              ADDS     r0,r0,#3
000086  7028              STRB     r0,[r5,#0]
;;;69     					ptrSaveBuff[1] = 0x60;
000088  2060              MOVS     r0,#0x60
00008a  7068              STRB     r0,[r5,#1]
;;;70     					ptrSaveBuff[2] = cmdNum;
00008c  f8859002          STRB     r9,[r5,#2]
;;;71     					memcpy(&ptrSaveBuff[3],&CAN1_RxMsg->Data[cmdLen + 2],(6 - cmdLen));
000090  f1c60206          RSB      r2,r6,#6
000094  f104000b          ADD      r0,r4,#0xb
000098  1cb3              ADDS     r3,r6,#2
00009a  18c1              ADDS     r1,r0,r3
00009c  1ce8              ADDS     r0,r5,#3
00009e  f7fffffe          BL       __aeabi_memcpy
;;;72     					cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6)%7 == 0? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
0000a2  7b20              LDRB     r0,[r4,#0xc]
0000a4  1f80              SUBS     r0,r0,#6
0000a6  2107              MOVS     r1,#7
0000a8  fb90f2f1          SDIV     r2,r0,r1
0000ac  fb010012          MLS      r0,r1,r2,r0
0000b0  b920              CBNZ     r0,|L2.188|
0000b2  7b20              LDRB     r0,[r4,#0xc]
0000b4  1f80              SUBS     r0,r0,#6
0000b6  fb90f0f1          SDIV     r0,r0,r1
0000ba  e005              B        |L2.200|
                  |L2.188|
0000bc  7b20              LDRB     r0,[r4,#0xc]
0000be  1f80              SUBS     r0,r0,#6
0000c0  2107              MOVS     r1,#7
0000c2  fb90f0f1          SDIV     r0,r0,r1
0000c6  1c40              ADDS     r0,r0,#1
                  |L2.200|
0000c8  f0000aff          AND      r10,r0,#0xff
;;;73     					Mem_free(CAN1_RxMsg);
0000cc  4620              MOV      r0,r4
0000ce  f7fffffe          BL       Mem_free
;;;74     					
;;;75     					dataToSend.pdat = pidManyBag;//发送0x30 请求接下来的多包
0000d2  4862              LDR      r0,|L2.604|
0000d4  495f              LDR      r1,|L2.596|
0000d6  6088              STR      r0,[r1,#8]  ; dataToSend
;;;76     					OBD_CAN_SendData(dataToSend);
0000d8  4608              MOV      r0,r1
0000da  c807              LDM      r0,{r0-r2}
0000dc  f7fffffe          BL       OBD_CAN_SendData
;;;77     					
;;;78     					for(i=0;i<cmdManyPackNum;i++)
0000e0  f04f0800          MOV      r8,#0
0000e4  e01d              B        |L2.290|
                  |L2.230|
;;;79     					{
;;;80     						CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);//接收多包
0000e6  466a              MOV      r2,sp
0000e8  2119              MOVS     r1,#0x19
0000ea  4859              LDR      r0,|L2.592|
0000ec  6800              LDR      r0,[r0,#0]  ; canRecieveQ
0000ee  f7fffffe          BL       OSQPend
0000f2  4604              MOV      r4,r0
;;;81     						if(err == OS_ERR_NONE)
0000f4  f89d0000          LDRB     r0,[sp,#0]
0000f8  b970              CBNZ     r0,|L2.280|
;;;82     						{
;;;83     							memcpy(&ptrSaveBuff[7*i + 9 - cmdLen],&CAN1_RxMsg->Data[1],7);
0000fa  ebc800c8          RSB      r0,r8,r8,LSL #3
0000fe  3009              ADDS     r0,r0,#9
000100  1b80              SUBS     r0,r0,r6
000102  1941              ADDS     r1,r0,r5
000104  68e2              LDR      r2,[r4,#0xc]
000106  600a              STR      r2,[r1,#0]
000108  8a22              LDRH     r2,[r4,#0x10]
00010a  808a              STRH     r2,[r1,#4]
00010c  7ca0              LDRB     r0,[r4,#0x12]
00010e  7188              STRB     r0,[r1,#6]
;;;84     							Mem_free(CAN1_RxMsg);
000110  4620              MOV      r0,r4
000112  f7fffffe          BL       Mem_free
000116  e000              B        |L2.282|
                  |L2.280|
;;;85     						}
;;;86     						else break;
000118  e005              B        |L2.294|
                  |L2.282|
00011a  f1080001          ADD      r0,r8,#1              ;78
00011e  f00008ff          AND      r8,r0,#0xff           ;78
                  |L2.290|
000122  45d0              CMP      r8,r10                ;78
000124  dbdf              BLT      |L2.230|
                  |L2.294|
000126  bf00              NOP      
;;;87     					}
;;;88     					if(i == cmdManyPackNum)
000128  45d0              CMP      r8,r10
00012a  d120              BNE      |L2.366|
;;;89     					{
;;;90     						OSMutexPend(CDMASendMutex,0,&err);
00012c  466a              MOV      r2,sp
00012e  2100              MOVS     r1,#0
000130  484b              LDR      r0,|L2.608|
000132  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000134  f7fffffe          BL       OSMutexPend
;;;91     						
;;;92     						memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],ptrSaveBuff,ptrSaveBuff[0]);
000138  494a              LDR      r1,|L2.612|
00013a  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00013c  6849              LDR      r1,[r1,#4]
00013e  4b49              LDR      r3,|L2.612|
000140  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
000142  881b              LDRH     r3,[r3,#0]
000144  18c8              ADDS     r0,r1,r3
000146  782a              LDRB     r2,[r5,#0]
000148  4629              MOV      r1,r5
00014a  f7fffffe          BL       __aeabi_memcpy
;;;93     						cdmaDataToSend->datLength += ptrSaveBuff[0];
00014e  4845              LDR      r0,|L2.612|
000150  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000152  8800              LDRH     r0,[r0,#0]
000154  7829              LDRB     r1,[r5,#0]
000156  4408              ADD      r0,r0,r1
000158  4942              LDR      r1,|L2.612|
00015a  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00015c  8008              STRH     r0,[r1,#0]
;;;94     						
;;;95     						OSMutexPost(CDMASendMutex);
00015e  e002              B        |L2.358|
                  |L2.352|
000160  e065              B        |L2.558|
                  |L2.354|
000162  e008              B        |L2.374|
                  |L2.356|
000164  e069              B        |L2.570|
                  |L2.358|
000166  483e              LDR      r0,|L2.608|
000168  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00016a  f7fffffe          BL       OSMutexPost
                  |L2.366|
;;;96     					}
;;;97     					Mem_free(ptrSaveBuff);
00016e  4628              MOV      r0,r5
000170  f7fffffe          BL       Mem_free
000174  e061              B        |L2.570|
                  |L2.374|
;;;98     				}
;;;99     			}
;;;100    			else  //单包处理
;;;101    			{
;;;102    				OSMutexPend(CDMASendMutex,0,&err);
000176  466a              MOV      r2,sp
000178  2100              MOVS     r1,#0
00017a  4839              LDR      r0,|L2.608|
00017c  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00017e  f7fffffe          BL       OSMutexPend
;;;103    				
;;;104    				cdmaDataToSend->data[cdmaDataToSend->datLength++] = CAN1_RxMsg->Data[0] - cmdLen + 3;
000182  7ae0              LDRB     r0,[r4,#0xb]
000184  1b80              SUBS     r0,r0,r6
000186  1cc0              ADDS     r0,r0,#3
000188  b2c1              UXTB     r1,r0
00018a  4836              LDR      r0,|L2.612|
00018c  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00018e  8802              LDRH     r2,[r0,#0]
000190  4834              LDR      r0,|L2.612|
000192  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000194  8800              LDRH     r0,[r0,#0]
000196  1c40              ADDS     r0,r0,#1
000198  4b32              LDR      r3,|L2.612|
00019a  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
00019c  8018              STRH     r0,[r3,#0]
00019e  4831              LDR      r0,|L2.612|
0001a0  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001a2  6840              LDR      r0,[r0,#4]
0001a4  5481              STRB     r1,[r0,r2]
;;;105    				cdmaDataToSend->data[cdmaDataToSend->datLength++] = 0x60;
0001a6  2160              MOVS     r1,#0x60
0001a8  482e              LDR      r0,|L2.612|
0001aa  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001ac  8802              LDRH     r2,[r0,#0]
0001ae  482d              LDR      r0,|L2.612|
0001b0  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001b2  8800              LDRH     r0,[r0,#0]
0001b4  1c40              ADDS     r0,r0,#1
0001b6  4b2b              LDR      r3,|L2.612|
0001b8  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0001ba  8018              STRH     r0,[r3,#0]
0001bc  4829              LDR      r0,|L2.612|
0001be  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001c0  6840              LDR      r0,[r0,#4]
0001c2  5481              STRB     r1,[r0,r2]
;;;106    				cdmaDataToSend->data[cdmaDataToSend->datLength++] = cmdNum;
0001c4  4827              LDR      r0,|L2.612|
0001c6  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001c8  8801              LDRH     r1,[r0,#0]
0001ca  4826              LDR      r0,|L2.612|
0001cc  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001ce  8800              LDRH     r0,[r0,#0]
0001d0  1c40              ADDS     r0,r0,#1
0001d2  4a24              LDR      r2,|L2.612|
0001d4  6812              LDR      r2,[r2,#0]  ; cdmaDataToSend
0001d6  8010              STRH     r0,[r2,#0]
0001d8  4822              LDR      r0,|L2.612|
0001da  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001dc  6840              LDR      r0,[r0,#4]
0001de  f8009001          STRB     r9,[r0,r1]
;;;107    				memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],&CAN1_RxMsg->Data[cmdLen+1],(CAN1_RxMsg->Data[0] - cmdLen));
0001e2  4b20              LDR      r3,|L2.612|
0001e4  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0001e6  685b              LDR      r3,[r3,#4]
0001e8  f8dfc078          LDR      r12,|L2.612|
0001ec  f8dcc000          LDR      r12,[r12,#0]  ; cdmaDataToSend
0001f0  f8bcc000          LDRH     r12,[r12,#0]
0001f4  eb03000c          ADD      r0,r3,r12
0001f8  7ae3              LDRB     r3,[r4,#0xb]
0001fa  1b9a              SUBS     r2,r3,r6
0001fc  f104030b          ADD      r3,r4,#0xb
000200  f1060c01          ADD      r12,r6,#1
000204  eb03010c          ADD      r1,r3,r12
000208  f7fffffe          BL       __aeabi_memcpy
;;;108    				cdmaDataToSend->datLength += CAN1_RxMsg->Data[0] - cmdLen;
00020c  4815              LDR      r0,|L2.612|
00020e  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000210  8800              LDRH     r0,[r0,#0]
000212  7ae1              LDRB     r1,[r4,#0xb]
000214  1b89              SUBS     r1,r1,r6
000216  4408              ADD      r0,r0,r1
000218  4912              LDR      r1,|L2.612|
00021a  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00021c  8008              STRH     r0,[r1,#0]
;;;109    	
;;;110    				OSMutexPost(CDMASendMutex);
00021e  4810              LDR      r0,|L2.608|
000220  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000222  f7fffffe          BL       OSMutexPost
;;;111    				
;;;112    				Mem_free(CAN1_RxMsg);
000226  4620              MOV      r0,r4
000228  f7fffffe          BL       Mem_free
00022c  e005              B        |L2.570|
                  |L2.558|
;;;113    			}
;;;114    		}
;;;115    		else
;;;116    		{
;;;117    			OSTimeDlyHMSM(0,0,0,4);
00022e  2304              MOVS     r3,#4
000230  2200              MOVS     r2,#0
000232  4611              MOV      r1,r2
000234  4610              MOV      r0,r2
000236  f7fffffe          BL       OSTimeDlyHMSM
                  |L2.570|
;;;118    		}
;;;119    		
;;;120    		Mem_free(can1_Txbuff);                 //释放内存块
00023a  4638              MOV      r0,r7
00023c  f7fffffe          BL       Mem_free
                  |L2.576|
000240  e6f3              B        |L2.42|
;;;121    	}
;;;122    }
;;;123    
                          ENDP

000242  0000              DCW      0x0000
                  |L2.580|
                          DCD      canSendBuf
                  |L2.584|
                          DCD      canSendQ
                  |L2.588|
                          DCD      canRecBuf
                  |L2.592|
                          DCD      canRecieveQ
                  |L2.596|
                          DCD      dataToSend
                  |L2.600|
                          DCD      freOBDLed
                  |L2.604|
                          DCD      pidManyBag
                  |L2.608|
                          DCD      CDMASendMutex
                  |L2.612|
                          DCD      cdmaDataToSend

                          AREA ||i.PIDVarGet||, CODE, READONLY, ALIGN=2

                  PIDVarGet PROC
;;;184    
;;;185    void PIDVarGet(uint8_t cmdId,uint8_t *ptrData)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;186    {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;187    	uint8_t i; 
;;;188    	for(i = 0;i < varOperation.pidVarNum;i ++)
000008  2600              MOVS     r6,#0
00000a  e064              B        |L3.214|
                  |L3.12|
;;;189    	{
;;;190    		if(ptrPIDVars->pidId != cmdId)
00000c  4835              LDR      r0,|L3.228|
00000e  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
000010  7800              LDRB     r0,[r0,#0]
000012  42a8              CMP      r0,r5
000014  d000              BEQ      |L3.24|
;;;191    			continue;
000016  e05c              B        |L3.210|
                  |L3.24|
;;;192    		//1-车速 2-转速 3-总喷油量 4-主喷油量 5-预喷油量 6-后喷油量 7-当前喷油量
;;;193    		switch(ptrPIDVars->varId)
000018  4832              LDR      r0,|L3.228|
00001a  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
00001c  7840              LDRB     r0,[r0,#1]
00001e  2808              CMP      r0,#8
000020  d254              BCS      |L3.204|
000022  e8dff000          TBB      [pc,r0]
000026  5304              DCB      0x53,0x04
000028  4d4e4f50          DCB      0x4d,0x4e,0x4f,0x50
00002c  5152              DCB      0x51,0x52
;;;194    		{
;;;195    			case 1://计算车速
;;;196    				if(ptrPIDVars->bitLen == 8)
00002e  482d              LDR      r0,|L3.228|
000030  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
000032  7900              LDRB     r0,[r0,#4]
000034  2808              CMP      r0,#8
000036  d11b              BNE      |L3.112|
;;;197    					carSpeed = ptrData[ptrPIDVars->startByte]*ptrPIDVars->ceo + ptrPIDVars->offset;
000038  492a              LDR      r1,|L3.228|
00003a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00003c  f8d10009          LDR      r0,[r1,#9]
000040  f7fffffe          BL       __aeabi_i2f
000044  4680              MOV      r8,r0
000046  4927              LDR      r1,|L3.228|
000048  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00004a  7889              LDRB     r1,[r1,#2]
00004c  5c60              LDRB     r0,[r4,r1]
00004e  f7fffffe          BL       __aeabi_ui2f
000052  4681              MOV      r9,r0
000054  4823              LDR      r0,|L3.228|
000056  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
000058  f8d01005          LDR      r1,[r0,#5]
00005c  4648              MOV      r0,r9
00005e  f7fffffe          BL       __aeabi_fmul
000062  4607              MOV      r7,r0
000064  4641              MOV      r1,r8
000066  f7fffffe          BL       __aeabi_fadd
00006a  491f              LDR      r1,|L3.232|
00006c  6008              STR      r0,[r1,#0]  ; carSpeed
00006e  e026              B        |L3.190|
                  |L3.112|
;;;198    				else if(ptrPIDVars->bitLen == 16)
000070  481c              LDR      r0,|L3.228|
000072  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
000074  7900              LDRB     r0,[r0,#4]
000076  2810              CMP      r0,#0x10
000078  d121              BNE      |L3.190|
;;;199    					carSpeed =(ptrData[ptrPIDVars->startByte]*256 + ptrData[ptrPIDVars->startByte+1])*ptrPIDVars->ceo + ptrPIDVars->offset;
00007a  491a              LDR      r1,|L3.228|
00007c  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00007e  f8d10009          LDR      r0,[r1,#9]
000082  f7fffffe          BL       __aeabi_i2f
000086  4680              MOV      r8,r0
000088  4916              LDR      r1,|L3.228|
00008a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00008c  7889              LDRB     r1,[r1,#2]
00008e  1c49              ADDS     r1,r1,#1
000090  5c62              LDRB     r2,[r4,r1]
000092  4914              LDR      r1,|L3.228|
000094  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000096  7889              LDRB     r1,[r1,#2]
000098  5c61              LDRB     r1,[r4,r1]
00009a  eb022001          ADD      r0,r2,r1,LSL #8
00009e  f7fffffe          BL       __aeabi_i2f
0000a2  4681              MOV      r9,r0
0000a4  480f              LDR      r0,|L3.228|
0000a6  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0000a8  f8d01005          LDR      r1,[r0,#5]
0000ac  4648              MOV      r0,r9
0000ae  f7fffffe          BL       __aeabi_fmul
0000b2  4607              MOV      r7,r0
0000b4  4641              MOV      r1,r8
0000b6  f7fffffe          BL       __aeabi_fadd
0000ba  490b              LDR      r1,|L3.232|
0000bc  6008              STR      r0,[r1,#0]  ; carSpeed
                  |L3.190|
;;;200    				else 
;;;201    				{
;;;202    				
;;;203    				}break;
0000be  e006              B        |L3.206|
;;;204    				
;;;205    			case 2:break;
0000c0  e005              B        |L3.206|
;;;206    			case 3:break;
0000c2  e004              B        |L3.206|
;;;207    			case 4:break;
0000c4  e003              B        |L3.206|
;;;208    			case 5:break;
0000c6  e002              B        |L3.206|
;;;209    			case 6:break;
0000c8  e001              B        |L3.206|
;;;210    			case 7:break;
0000ca  e000              B        |L3.206|
                  |L3.204|
;;;211    			default:break;
0000cc  bf00              NOP      
                  |L3.206|
0000ce  bf00              NOP                            ;203
0000d0  bf00              NOP                            ;191
                  |L3.210|
0000d2  1c70              ADDS     r0,r6,#1              ;188
0000d4  b2c6              UXTB     r6,r0                 ;188
                  |L3.214|
0000d6  4805              LDR      r0,|L3.236|
0000d8  f8b0006f          LDRH     r0,[r0,#0x6f]         ;188  ; varOperation
0000dc  42b0              CMP      r0,r6                 ;188
0000de  dc95              BGT      |L3.12|
;;;212    		}
;;;213    	}
;;;214    }
0000e0  e8bd87f0          POP      {r4-r10,pc}
;;;215    
                          ENDP

                  |L3.228|
                          DCD      ptrPIDVars
                  |L3.232|
                          DCD      carSpeed
                  |L3.236|
                          DCD      varOperation

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  CAN1_TxMsg
                          %        20
                  dataToSend
                          %        12
                  canRecBuf
                          %        80
                  canSendBuf
                          %        320

                          AREA ||.data||, DATA, ALIGN=2

                  pidManyBag
000000  30000000          DCB      0x30,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  canRecieveQ
                          DCD      0x00000000
                  canSendQ
                          DCD      0x00000000
                  carSpeed
                          DCD      0x00000000
                  rotateSpeed
                          DCD      0x00000000
                  allFuel
                          DCD      0x00000000
                  primaryFuel
                          DCD      0x00000000
                  beforeFuel
                          DCD      0x00000000
                  afterFuel
                          DCD      0x00000000
                  nowFuel
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\OBD\\OBDTask.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_OBDTask_c_bbcd6d9f____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REVSH|
#line 144
|__asm___9_OBDTask_c_bbcd6d9f____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
