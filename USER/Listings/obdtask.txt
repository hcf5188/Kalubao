; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\obdtask.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\obdtask.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\obdtask.crf ..\OBD\OBDTask.c]
                          THUMB

                          AREA ||i.CANTestChannel||, CODE, READONLY, ALIGN=2

                  CANTestChannel PROC
;;;7      
;;;8      void CANTestChannel(void )
000000  b510              PUSH     {r4,lr}
;;;9      {
;;;10     	int i;
;;;11     
;;;12     	dataToSend.testIsOK = 0;
000002  2000              MOVS     r0,#0
000004  4925              LDR      r1,|L1.156|
000006  7208              STRB     r0,[r1,#8]
;;;13     	
;;;14     	for(i=0;i<NUMOFCAN;i++)
000008  2400              MOVS     r4,#0
00000a  e043              B        |L1.148|
                  |L1.12|
;;;15     	{
;;;16     		CAN1_BaudSet(CANSearchLib[i].canBaud);
00000c  4924              LDR      r1,|L1.160|
00000e  eb0101c4          ADD      r1,r1,r4,LSL #3
000012  7948              LDRB     r0,[r1,#5]
000014  f7fffffe          BL       CAN1_BaudSet
;;;17     		CAN1_ClearFilter();
000018  f7fffffe          BL       CAN1_ClearFilter
;;;18     		
;;;19     		CAN1_TxMsg.IDE     = CANSearchLib[i].canIde;
00001c  4820              LDR      r0,|L1.160|
00001e  eb0000c4          ADD      r0,r0,r4,LSL #3
000022  7900              LDRB     r0,[r0,#4]
000024  491f              LDR      r1,|L1.164|
000026  7208              STRB     r0,[r1,#8]
;;;20     		CAN1_TxMsg.StdId   = CANSearchLib[i].canId.dword;
000028  481d              LDR      r0,|L1.160|
00002a  f8500034          LDR      r0,[r0,r4,LSL #3]
00002e  6008              STR      r0,[r1,#0]  ; CAN1_TxMsg
;;;21     		CAN1_TxMsg.ExtId   = CANSearchLib[i].canId.dword;
000030  481b              LDR      r0,|L1.160|
000032  f8500034          LDR      r0,[r0,r4,LSL #3]
000036  6048              STR      r0,[r1,#4]  ; CAN1_TxMsg
;;;22     		CAN1_TxMsg.DLC     = 0x08;
000038  2008              MOVS     r0,#8
00003a  7288              STRB     r0,[r1,#0xa]
;;;23     		
;;;24     		CAN1_TxMsg.Data[0] = 0x02;
00003c  2002              MOVS     r0,#2
00003e  72c8              STRB     r0,[r1,#0xb]
;;;25     		CAN1_TxMsg.Data[1] = 0x01;
000040  2101              MOVS     r1,#1
000042  4818              LDR      r0,|L1.164|
000044  7301              STRB     r1,[r0,#0xc]
;;;26     		CAN1_TxMsg.Data[2] = 0x0D;
000046  210d              MOVS     r1,#0xd
000048  7341              STRB     r1,[r0,#0xd]
;;;27     		CAN1_TxMsg.Data[3] = 0x00;
00004a  2100              MOVS     r1,#0
00004c  7381              STRB     r1,[r0,#0xe]
;;;28     		CAN1_TxMsg.Data[4] = 0x00;
00004e  73c1              STRB     r1,[r0,#0xf]
;;;29     		CAN1_TxMsg.Data[5] = 0x00;
000050  7401              STRB     r1,[r0,#0x10]
;;;30     		CAN1_TxMsg.Data[6] = 0x00;
000052  7441              STRB     r1,[r0,#0x11]
;;;31     		CAN1_TxMsg.Data[7] = 0x00;
000054  7481              STRB     r1,[r0,#0x12]
;;;32     		CAN_Transmit(CAN1,&CAN1_TxMsg);
000056  4601              MOV      r1,r0
000058  4813              LDR      r0,|L1.168|
00005a  f7fffffe          BL       CAN_Transmit
;;;33     
;;;34     		dataToSend.canId = CANSearchLib[i].canId.dword;
00005e  4810              LDR      r0,|L1.160|
000060  f8500034          LDR      r0,[r0,r4,LSL #3]
000064  490d              LDR      r1,|L1.156|
000066  6008              STR      r0,[r1,#0]  ; dataToSend
;;;35     		dataToSend.ide   = CANSearchLib[i].canIde;
000068  480d              LDR      r0,|L1.160|
00006a  eb0000c4          ADD      r0,r0,r4,LSL #3
00006e  7900              LDRB     r0,[r0,#4]
000070  6048              STR      r0,[r1,#4]  ; dataToSend
;;;36     		OSTimeDlyHMSM(0,0,0,100);   //仿真板的回复时间比较长，有的达到60ms以上，故需要延时时间长一点。
000072  2364              MOVS     r3,#0x64
000074  2200              MOVS     r2,#0
000076  4611              MOV      r1,r2
000078  4610              MOV      r0,r2
00007a  f7fffffe          BL       OSTimeDlyHMSM
;;;37     		if(dataToSend.testIsOK == 1)//CAN数据测试通过
00007e  4807              LDR      r0,|L1.156|
000080  7a00              LDRB     r0,[r0,#8]  ; dataToSend
000082  2801              CMP      r0,#1
000084  d100              BNE      |L1.136|
;;;38     			break;
000086  e007              B        |L1.152|
                  |L1.136|
;;;39     		else if(i == (NUMOFCAN - 1))
000088  2c03              CMP      r4,#3
00008a  d102              BNE      |L1.146|
;;;40     			dataToSend.testIsOK = 2;
00008c  2002              MOVS     r0,#2
00008e  4903              LDR      r1,|L1.156|
000090  7208              STRB     r0,[r1,#8]
                  |L1.146|
000092  1c64              ADDS     r4,r4,#1              ;14
                  |L1.148|
000094  2c04              CMP      r4,#4                 ;14
000096  dbb9              BLT      |L1.12|
                  |L1.152|
000098  bf00              NOP                            ;38
;;;41     	}
;;;42     }
00009a  bd10              POP      {r4,pc}
;;;43     
                          ENDP

                  |L1.156|
                          DCD      dataToSend
                  |L1.160|
                          DCD      CANSearchLib
                  |L1.164|
                          DCD      CAN1_TxMsg
                  |L1.168|
                          DCD      0x40006400

                          AREA ||i.OBDTask||, CODE, READONLY, ALIGN=2

                  OBDTask PROC
;;;58     extern _CDMADataToSend* cdmaDataToSend;//CDMA发送的数据中（OBD、GPS），是通过它来作为载体
;;;59     void OBDTask(void *pdata)
000000  b508              PUSH     {r3,lr}
;;;60     {
;;;61     	INT8U     err;
;;;62     	uint8_t   i      = 0;
000002  f04f0800          MOV      r8,#0
;;;63     	uint8_t   cmdLen = 0;        //封包的时候要减去指令的长度
000006  2600              MOVS     r6,#0
;;;64     	uint8_t   cmdNum = 0;        //指令序号
000008  46b1              MOV      r9,r6
;;;65     	uint8_t   cmdManyPackNum = 0;//要接受的多包的数量
00000a  46b2              MOV      r10,r6
;;;66     	
;;;67     	CanRxMsg* CAN1_RxMsg;        //指向接收到的OBD信息
;;;68     	uint8_t * can1_Txbuff;       //指向要发送的OBD信息
;;;69     	uint8_t * ptrSaveBuff;
;;;70     	
;;;71     	
;;;72     	canSendQ    = OSQCreate(&canSendBuf[0],CANSENDBUF_SIZE);//卡路宝向ECU发送指令的消息队列
00000c  2150              MOVS     r1,#0x50
00000e  488b              LDR      r0,|L2.572|
000010  f7fffffe          BL       OSQCreate
000014  498a              LDR      r1,|L2.576|
000016  6008              STR      r0,[r1,#0]  ; canSendQ
;;;73     	canRecieveQ = OSQCreate(&canRecBuf[0],CANRECBUF_SIZE);  //卡路宝从ECU接收指令的循环队列
000018  2114              MOVS     r1,#0x14
00001a  488a              LDR      r0,|L2.580|
00001c  f7fffffe          BL       OSQCreate
000020  4989              LDR      r1,|L2.584|
000022  6008              STR      r0,[r1,#0]  ; canRecieveQ
;;;74     	
;;;75     //	CANTestChannel();//完成CAN的ID、波特率设定，并且读取出ECU的版本号
;;;76     	
;;;77     //	dataToSend.canId = 0x7E0;
;;;78     //	dataToSend.ide   = CAN_ID_STD;
;;;79     //	dataToSend.testIsOK = 1; 
;;;80     	
;;;81     	dataToSend.canId = 0x18DA10FB;//潍柴：0x18DA10FB   渣土车：0x18DA00FA
000024  4889              LDR      r0,|L2.588|
000026  498a              LDR      r1,|L2.592|
000028  6008              STR      r0,[r1,#0]  ; dataToSend
;;;82     	dataToSend.ide   = CAN_ID_EXT;
00002a  2004              MOVS     r0,#4
00002c  6048              STR      r0,[r1,#4]  ; dataToSend
;;;83     	dataToSend.testIsOK = 1; 
00002e  2001              MOVS     r0,#1
000030  7208              STRB     r0,[r1,#8]
                  |L2.50|
;;;84     
;;;85     	
;;;86     	while(1)
000032  e101              B        |L2.568|
                  |L2.52|
;;;87     	{	
;;;88     		can1_Txbuff = OSQPend(canSendQ,0,&err);//收到PID指令，进行发送
000034  466a              MOV      r2,sp
000036  2100              MOVS     r1,#0
000038  4881              LDR      r0,|L2.576|
00003a  6800              LDR      r0,[r0,#0]  ; canSendQ
00003c  f7fffffe          BL       OSQPend
000040  4607              MOV      r7,r0
;;;89     		
;;;90     		cmdNum = can1_Txbuff[0];               //记录PID指令序号
000042  f8979000          LDRB     r9,[r7,#0]
;;;91     		cmdLen = can1_Txbuff[1];               //记录PID指令长度
000046  787e              LDRB     r6,[r7,#1]
;;;92     		
;;;93     		dataToSend.pdat = &can1_Txbuff[1];     
000048  1c78              ADDS     r0,r7,#1
00004a  4981              LDR      r1,|L2.592|
00004c  60c8              STR      r0,[r1,#0xc]  ; dataToSend
;;;94     		OBD_CAN_SendData(dataToSend);          //发送PID指令
00004e  4608              MOV      r0,r1
000050  c80f              LDM      r0,{r0-r3}
000052  f7fffffe          BL       OBD_CAN_SendData
;;;95     		Mem_free(can1_Txbuff);                 //释放内存块
000056  4638              MOV      r0,r7
000058  f7fffffe          BL       Mem_free
;;;96     
;;;97     		CAN1_RxMsg = OSQPend(canRecieveQ,25,&err); //接收到OBD回复
00005c  466a              MOV      r2,sp
00005e  2119              MOVS     r1,#0x19
000060  4879              LDR      r0,|L2.584|
000062  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000064  f7fffffe          BL       OSQPend
000068  4604              MOV      r4,r0
;;;98     		if(err == OS_ERR_NONE)
00006a  f89d0000          LDRB     r0,[sp,#0]
00006e  2800              CMP      r0,#0
000070  d1df              BNE      |L2.50|
;;;99     		{
;;;100    			freOBDLed = 300;                    //OBD 初始化成功
000072  f44f7096          MOV      r0,#0x12c
000076  4977              LDR      r1,|L2.596|
000078  8008              STRH     r0,[r1,#0]
;;;101    			if(CAN1_RxMsg->Data[0] == 0x10)     //多包处理
00007a  7ae0              LDRB     r0,[r4,#0xb]
00007c  2810              CMP      r0,#0x10
00007e  d17c              BNE      |L2.378|
;;;102    			{
;;;103    				ptrSaveBuff = Mem_malloc(CAN1_RxMsg->Data[1]+10);//申请的内存块足够长
000080  7b21              LDRB     r1,[r4,#0xc]
000082  f101000a          ADD      r0,r1,#0xa
000086  f7fffffe          BL       Mem_malloc
00008a  4605              MOV      r5,r0
;;;104    				if(ptrSaveBuff != NULL)
00008c  2d00              CMP      r5,#0
00008e  d0d0              BEQ      |L2.50|
;;;105    				{
;;;106    					ptrSaveBuff[0] = CAN1_RxMsg->Data[1] - cmdLen + 3;
000090  7b20              LDRB     r0,[r4,#0xc]
000092  1b80              SUBS     r0,r0,r6
000094  1cc0              ADDS     r0,r0,#3
000096  7028              STRB     r0,[r5,#0]
;;;107    					ptrSaveBuff[1] = 0x60;
000098  2060              MOVS     r0,#0x60
00009a  7068              STRB     r0,[r5,#1]
;;;108    					ptrSaveBuff[2] = cmdNum;
00009c  f8859002          STRB     r9,[r5,#2]
;;;109    					memcpy(&ptrSaveBuff[3],&CAN1_RxMsg->Data[cmdLen + 2],(6 - cmdLen));
0000a0  f1c60206          RSB      r2,r6,#6
0000a4  f104000b          ADD      r0,r4,#0xb
0000a8  1cb3              ADDS     r3,r6,#2
0000aa  18c1              ADDS     r1,r0,r3
0000ac  1ce8              ADDS     r0,r5,#3
0000ae  f7fffffe          BL       __aeabi_memcpy
;;;110    					cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6)%7 == 0? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
0000b2  7b20              LDRB     r0,[r4,#0xc]
0000b4  1f80              SUBS     r0,r0,#6
0000b6  2107              MOVS     r1,#7
0000b8  fb90f2f1          SDIV     r2,r0,r1
0000bc  fb010012          MLS      r0,r1,r2,r0
0000c0  b920              CBNZ     r0,|L2.204|
0000c2  7b20              LDRB     r0,[r4,#0xc]
0000c4  1f80              SUBS     r0,r0,#6
0000c6  fb90f0f1          SDIV     r0,r0,r1
0000ca  e005              B        |L2.216|
                  |L2.204|
0000cc  7b20              LDRB     r0,[r4,#0xc]
0000ce  1f80              SUBS     r0,r0,#6
0000d0  2107              MOVS     r1,#7
0000d2  fb90f0f1          SDIV     r0,r0,r1
0000d6  1c40              ADDS     r0,r0,#1
                  |L2.216|
0000d8  f0000aff          AND      r10,r0,#0xff
;;;111    					Mem_free(CAN1_RxMsg);
0000dc  4620              MOV      r0,r4
0000de  f7fffffe          BL       Mem_free
;;;112    					
;;;113    					dataToSend.pdat = pidManyBag;//发送0x30 请求接下来的多包
0000e2  485d              LDR      r0,|L2.600|
0000e4  495a              LDR      r1,|L2.592|
0000e6  60c8              STR      r0,[r1,#0xc]  ; dataToSend
;;;114    					OBD_CAN_SendData(dataToSend);
0000e8  4608              MOV      r0,r1
0000ea  c80f              LDM      r0,{r0-r3}
0000ec  f7fffffe          BL       OBD_CAN_SendData
;;;115    					
;;;116    					for(i=0;i<cmdManyPackNum;i++)
0000f0  f04f0800          MOV      r8,#0
0000f4  e01d              B        |L2.306|
                  |L2.246|
;;;117    					{
;;;118    						CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);//接收多包
0000f6  466a              MOV      r2,sp
0000f8  2119              MOVS     r1,#0x19
0000fa  4853              LDR      r0,|L2.584|
0000fc  6800              LDR      r0,[r0,#0]  ; canRecieveQ
0000fe  f7fffffe          BL       OSQPend
000102  4604              MOV      r4,r0
;;;119    						if(err == OS_ERR_NONE)
000104  f89d0000          LDRB     r0,[sp,#0]
000108  b970              CBNZ     r0,|L2.296|
;;;120    						{
;;;121    							memcpy(&ptrSaveBuff[7*i + 9 - cmdLen],&CAN1_RxMsg->Data[1],7);
00010a  ebc800c8          RSB      r0,r8,r8,LSL #3
00010e  3009              ADDS     r0,r0,#9
000110  1b80              SUBS     r0,r0,r6
000112  1941              ADDS     r1,r0,r5
000114  68e2              LDR      r2,[r4,#0xc]
000116  600a              STR      r2,[r1,#0]
000118  8a22              LDRH     r2,[r4,#0x10]
00011a  808a              STRH     r2,[r1,#4]
00011c  7ca0              LDRB     r0,[r4,#0x12]
00011e  7188              STRB     r0,[r1,#6]
;;;122    							Mem_free(CAN1_RxMsg);
000120  4620              MOV      r0,r4
000122  f7fffffe          BL       Mem_free
000126  e000              B        |L2.298|
                  |L2.296|
;;;123    						}
;;;124    						else break;
000128  e005              B        |L2.310|
                  |L2.298|
00012a  f1080001          ADD      r0,r8,#1              ;116
00012e  f00008ff          AND      r8,r0,#0xff           ;116
                  |L2.306|
000132  45d0              CMP      r8,r10                ;116
000134  dbdf              BLT      |L2.246|
                  |L2.310|
000136  bf00              NOP      
;;;125    					}
;;;126    					if(i == cmdManyPackNum)
000138  45d0              CMP      r8,r10
00013a  d11c              BNE      |L2.374|
;;;127    					{
;;;128    						OSMutexPend(CDMASendMutex,0,&err);
00013c  466a              MOV      r2,sp
00013e  2100              MOVS     r1,#0
000140  4846              LDR      r0,|L2.604|
000142  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000144  f7fffffe          BL       OSMutexPend
;;;129    						
;;;130    						memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],ptrSaveBuff,ptrSaveBuff[0]);
000148  4945              LDR      r1,|L2.608|
00014a  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00014c  6849              LDR      r1,[r1,#4]
00014e  4b44              LDR      r3,|L2.608|
000150  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
000152  881b              LDRH     r3,[r3,#0]
000154  18c8              ADDS     r0,r1,r3
000156  782a              LDRB     r2,[r5,#0]
000158  4629              MOV      r1,r5
00015a  f7fffffe          BL       __aeabi_memcpy
;;;131    						cdmaDataToSend->datLength += ptrSaveBuff[0];
00015e  4840              LDR      r0,|L2.608|
000160  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000162  8800              LDRH     r0,[r0,#0]
000164  7829              LDRB     r1,[r5,#0]
000166  4408              ADD      r0,r0,r1
000168  493d              LDR      r1,|L2.608|
00016a  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00016c  8008              STRH     r0,[r1,#0]
;;;132    						
;;;133    						OSMutexPost(CDMASendMutex);
00016e  483b              LDR      r0,|L2.604|
000170  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000172  f7fffffe          BL       OSMutexPost
                  |L2.374|
;;;134    					}
;;;135    					Mem_free(ptrSaveBuff);
000176  4628              MOV      r0,r5
000178  e000              B        |L2.380|
                  |L2.378|
00017a  e002              B        |L2.386|
                  |L2.380|
00017c  f7fffffe          BL       Mem_free
000180  e05a              B        |L2.568|
                  |L2.386|
;;;136    				}
;;;137    			}
;;;138    			else  //单包处理
;;;139    			{
;;;140    				OSMutexPend(CDMASendMutex,0,&err);
000182  466a              MOV      r2,sp
000184  2100              MOVS     r1,#0
000186  4835              LDR      r0,|L2.604|
000188  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00018a  f7fffffe          BL       OSMutexPend
;;;141    				
;;;142    				cdmaDataToSend->data[cdmaDataToSend->datLength++] = CAN1_RxMsg->Data[0] - cmdLen + 3;
00018e  7ae0              LDRB     r0,[r4,#0xb]
000190  1b80              SUBS     r0,r0,r6
000192  1cc0              ADDS     r0,r0,#3
000194  b2c2              UXTB     r2,r0
000196  4832              LDR      r0,|L2.608|
000198  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00019a  8801              LDRH     r1,[r0,#0]
00019c  4830              LDR      r0,|L2.608|
00019e  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001a0  8800              LDRH     r0,[r0,#0]
0001a2  1c40              ADDS     r0,r0,#1
0001a4  4b2e              LDR      r3,|L2.608|
0001a6  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0001a8  8018              STRH     r0,[r3,#0]
0001aa  482d              LDR      r0,|L2.608|
0001ac  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001ae  6840              LDR      r0,[r0,#4]
0001b0  5442              STRB     r2,[r0,r1]
;;;143    				cdmaDataToSend->data[cdmaDataToSend->datLength++] = 0x60;
0001b2  2160              MOVS     r1,#0x60
0001b4  482a              LDR      r0,|L2.608|
0001b6  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001b8  8802              LDRH     r2,[r0,#0]
0001ba  4829              LDR      r0,|L2.608|
0001bc  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001be  8800              LDRH     r0,[r0,#0]
0001c0  1c40              ADDS     r0,r0,#1
0001c2  4b27              LDR      r3,|L2.608|
0001c4  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0001c6  8018              STRH     r0,[r3,#0]
0001c8  4825              LDR      r0,|L2.608|
0001ca  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001cc  6840              LDR      r0,[r0,#4]
0001ce  5481              STRB     r1,[r0,r2]
;;;144    				cdmaDataToSend->data[cdmaDataToSend->datLength++] = cmdNum;
0001d0  4823              LDR      r0,|L2.608|
0001d2  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001d4  8801              LDRH     r1,[r0,#0]
0001d6  4822              LDR      r0,|L2.608|
0001d8  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001da  8800              LDRH     r0,[r0,#0]
0001dc  1c40              ADDS     r0,r0,#1
0001de  4a20              LDR      r2,|L2.608|
0001e0  6812              LDR      r2,[r2,#0]  ; cdmaDataToSend
0001e2  8010              STRH     r0,[r2,#0]
0001e4  481e              LDR      r0,|L2.608|
0001e6  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001e8  6840              LDR      r0,[r0,#4]
0001ea  f8009001          STRB     r9,[r0,r1]
;;;145    				memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],&CAN1_RxMsg->Data[cmdLen+1],(CAN1_RxMsg->Data[0] - cmdLen));
0001ee  4b1c              LDR      r3,|L2.608|
0001f0  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0001f2  685b              LDR      r3,[r3,#4]
0001f4  f8dfc068          LDR      r12,|L2.608|
0001f8  f8dcc000          LDR      r12,[r12,#0]  ; cdmaDataToSend
0001fc  f8bcc000          LDRH     r12,[r12,#0]
000200  eb03000c          ADD      r0,r3,r12
000204  7ae3              LDRB     r3,[r4,#0xb]
000206  1b9a              SUBS     r2,r3,r6
000208  f104030b          ADD      r3,r4,#0xb
00020c  f1060c01          ADD      r12,r6,#1
000210  eb03010c          ADD      r1,r3,r12
000214  f7fffffe          BL       __aeabi_memcpy
;;;146    				cdmaDataToSend->datLength += CAN1_RxMsg->Data[0] - cmdLen;
000218  4811              LDR      r0,|L2.608|
00021a  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00021c  8800              LDRH     r0,[r0,#0]
00021e  7ae1              LDRB     r1,[r4,#0xb]
000220  1b89              SUBS     r1,r1,r6
000222  4408              ADD      r0,r0,r1
000224  490e              LDR      r1,|L2.608|
000226  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000228  8008              STRH     r0,[r1,#0]
;;;147    						
;;;148    				OSMutexPost(CDMASendMutex);
00022a  480c              LDR      r0,|L2.604|
00022c  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00022e  f7fffffe          BL       OSMutexPost
;;;149    				
;;;150    				Mem_free(CAN1_RxMsg);
000232  4620              MOV      r0,r4
000234  f7fffffe          BL       Mem_free
                  |L2.568|
000238  e6fc              B        |L2.52|
;;;151    			}
;;;152    		}
;;;153    	}
;;;154    }
;;;155    
                          ENDP

00023a  0000              DCW      0x0000
                  |L2.572|
                          DCD      canSendBuf
                  |L2.576|
                          DCD      canSendQ
                  |L2.580|
                          DCD      canRecBuf
                  |L2.584|
                          DCD      canRecieveQ
                  |L2.588|
                          DCD      0x18da10fb
                  |L2.592|
                          DCD      dataToSend
                  |L2.596|
                          DCD      freOBDLed
                  |L2.600|
                          DCD      pidManyBag
                  |L2.604|
                          DCD      CDMASendMutex
                  |L2.608|
                          DCD      cdmaDataToSend

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  CAN1_TxMsg
                          %        20
                  dataToSend
                          %        16
                  canRecBuf
                          %        80
                  canSendBuf
                          %        320

                          AREA ||.data||, DATA, ALIGN=2

                  pidManyBag
000000  30000000          DCB      0x30,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  canRecieveQ
                          DCD      0x00000000
                  canSendQ
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\OBD\\OBDTask.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bb9fee60____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_OBDTask_c_bb9fee60____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bb9fee60____REVSH|
#line 144
|__asm___9_OBDTask_c_bb9fee60____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
