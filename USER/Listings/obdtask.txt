; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\obdtask.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\obdtask.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\obdtask.crf ..\OBD\OBDTask.c]
                          THUMB

                          AREA ||i.CANTestChannel||, CODE, READONLY, ALIGN=2

                  CANTestChannel PROC
;;;211    //服务器的配置文件出错，或者还没进行配置，系统进入自识别，识别成功则将信息上报
;;;212    void CANTestChannel(void)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;213    {
;;;214    	uint8_t   err,i,temp;
;;;215    	CanRxMsg* CAN1_RxMsg;
;;;216    	uint8_t*  ptrOK;
;;;217    	CAN_InitTypeDef CAN_InitStructure;
;;;218    	
;;;219    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能CAN1时钟
000004  2101              MOVS     r1,#1
000006  0648              LSLS     r0,r1,#25
000008  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;220    	varOperation.canTest = 0;
00000c  2000              MOVS     r0,#0
00000e  49a2              LDR      r1,|L1.664|
000010  f8a10091          STRH     r0,[r1,#0x91]
;;;221    	for(i = 0;i<NUMOfCANBaud;i++)       //获得CAN的波特率
000014  2400              MOVS     r4,#0
000016  e02a              B        |L1.110|
                  |L1.24|
;;;222    	{
;;;223    		CAN_DeInit(CAN1);
000018  48a0              LDR      r0,|L1.668|
00001a  f7fffffe          BL       CAN_DeInit
;;;224    		CAN_StructInit(&CAN_InitStructure);
00001e  4668              MOV      r0,sp
000020  f7fffffe          BL       CAN_StructInit
;;;225    		CAN1_BaudSet(canBaudEnum[i]); 
000024  499e              LDR      r1,|L1.672|
000026  5d08              LDRB     r0,[r1,r4]
000028  f7fffffe          BL       CAN1_BaudSet
;;;226    		CAN1_ClearFilter();
00002c  f7fffffe          BL       CAN1_ClearFilter
;;;227    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
000030  2201              MOVS     r2,#1
000032  2110              MOVS     r1,#0x10
000034  4899              LDR      r0,|L1.668|
000036  f7fffffe          BL       CAN_ITConfig
;;;228    		
;;;229    		//只要此波特率下有数据，CAN波特率就确定了
;;;230    		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
00003a  aa03              ADD      r2,sp,#0xc
00003c  f44f71fa          MOV      r1,#0x1f4
000040  4898              LDR      r0,|L1.676|
000042  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000044  f7fffffe          BL       OSQPend
000048  4607              MOV      r7,r0
;;;231    		if(err == OS_ERR_NONE)
00004a  f89d000c          LDRB     r0,[sp,#0xc]
00004e  b960              CBNZ     r0,|L1.106|
;;;232    		{
;;;233    			canDataConfig.canBaud = canBaudEnum[i];
000050  4893              LDR      r0,|L1.672|
000052  5d00              LDRB     r0,[r0,r4]
000054  4994              LDR      r1,|L1.680|
000056  7488              STRB     r0,[r1,#0x12]
;;;234    			Mem_free(CAN1_RxMsg);
000058  4638              MOV      r0,r7
00005a  f7fffffe          BL       Mem_free
;;;235    			LogReport("\r\n10-Test Baud:%d;",canDataConfig.canBaud);
00005e  4892              LDR      r0,|L1.680|
000060  7c81              LDRB     r1,[r0,#0x12]  ; canDataConfig
000062  a092              ADR      r0,|L1.684|
000064  f7fffffe          BL       LogReport
;;;236    			break;
000068  e003              B        |L1.114|
                  |L1.106|
00006a  1c60              ADDS     r0,r4,#1              ;221
00006c  b2c4              UXTB     r4,r0                 ;221
                  |L1.110|
00006e  2c03              CMP      r4,#3                 ;221
000070  dbd2              BLT      |L1.24|
                  |L1.114|
000072  bf00              NOP      
;;;237    		}
;;;238    	}//如果波特率没有确定就上报日志并退出
;;;239    	if((i >= NUMOfCANBaud) && (err != OS_ERR_NONE))
000074  2c03              CMP      r4,#3
000076  db0a              BLT      |L1.142|
000078  f89d000c          LDRB     r0,[sp,#0xc]
00007c  b138              CBZ      r0,|L1.142|
;;;240    	{
;;;241    		LogReport("\r\n11-Baud Test Fail!");
00007e  a090              ADR      r0,|L1.704|
000080  f7fffffe          BL       LogReport
;;;242    		varOperation.canTest = 0;
000084  2000              MOVS     r0,#0
000086  4984              LDR      r1,|L1.664|
000088  f8a10091          STRH     r0,[r1,#0x91]
;;;243    		
;;;244    		goto idOK;
00008c  e0fc              B        |L1.648|
                  |L1.142|
;;;245    	}
;;;246    	dataToSend.ide = CAN_ID_EXT;
00008e  2004              MOVS     r0,#4
000090  4991              LDR      r1,|L1.728|
000092  6048              STR      r0,[r1,#4]  ; dataToSend
;;;247    	for(i=0;i<NUMOfCANID_EXT;i++)
000094  2400              MOVS     r4,#0
000096  e0e5              B        |L1.612|
                  |L1.152|
;;;248    	{
;;;249    		varOperation.canRxId  =(canIdExt[i].canID>>24) & 0x000000FF;
000098  eb040044          ADD      r0,r4,r4,LSL #1
00009c  498f              LDR      r1,|L1.732|
00009e  f8510020          LDR      r0,[r1,r0,LSL #2]
0000a2  0e00              LSRS     r0,r0,#24
0000a4  497c              LDR      r1,|L1.664|
0000a6  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;250    		varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i].canID>>16) & 0x000000FF);
0000aa  eb040044          ADD      r0,r4,r4,LSL #1
0000ae  498b              LDR      r1,|L1.732|
0000b0  f8510020          LDR      r0,[r1,r0,LSL #2]
0000b4  f3c04007          UBFX     r0,r0,#16,#8
0000b8  4977              LDR      r1,|L1.664|
0000ba  f8d1108c          LDR      r1,[r1,#0x8c]  ; varOperation
0000be  eb002001          ADD      r0,r0,r1,LSL #8
0000c2  4975              LDR      r1,|L1.664|
0000c4  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;251    		varOperation.canRxId  =(varOperation.canRxId  << 8)+(canIdExt[i].canID & 0x000000FF);
0000c8  4608              MOV      r0,r1
0000ca  f8d0108c          LDR      r1,[r0,#0x8c]  ; varOperation
0000ce  eb040044          ADD      r0,r4,r4,LSL #1
0000d2  4a82              LDR      r2,|L1.732|
0000d4  f8520020          LDR      r0,[r2,r0,LSL #2]
0000d8  f361201f          BFI      r0,r1,#8,#24
0000dc  496e              LDR      r1,|L1.664|
0000de  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;252    		varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i].canID>>8) & 0x000000FF);
0000e2  eb040044          ADD      r0,r4,r4,LSL #1
0000e6  4611              MOV      r1,r2
0000e8  f8310020          LDRH     r0,[r1,r0,LSL #2]
0000ec  f3c02007          UBFX     r0,r0,#8,#8
0000f0  4969              LDR      r1,|L1.664|
0000f2  f8d1108c          LDR      r1,[r1,#0x8c]  ; varOperation
0000f6  eb002001          ADD      r0,r0,r1,LSL #8
0000fa  4967              LDR      r1,|L1.664|
0000fc  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;253    		
;;;254    		CAN_DeInit(CAN1);
000100  4866              LDR      r0,|L1.668|
000102  f7fffffe          BL       CAN_DeInit
;;;255    		CAN_StructInit(&CAN_InitStructure);
000106  4668              MOV      r0,sp
000108  f7fffffe          BL       CAN_StructInit
;;;256    		CAN1_BaudSet(canDataConfig.canBaud);
00010c  4966              LDR      r1,|L1.680|
00010e  7c88              LDRB     r0,[r1,#0x12]  ; canDataConfig
000110  f7fffffe          BL       CAN1_BaudSet
;;;257    		CAN1_SetFilter(varOperation.canRxId ,CAN_ID_EXT);
000114  4960              LDR      r1,|L1.664|
000116  f8d1008c          LDR      r0,[r1,#0x8c]  ; varOperation
00011a  2104              MOVS     r1,#4
00011c  f7fffffe          BL       CAN1_SetFilter
;;;258    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
000120  2201              MOVS     r2,#1
000122  2110              MOVS     r1,#0x10
000124  485d              LDR      r0,|L1.668|
000126  f7fffffe          BL       CAN_ITConfig
;;;259    		
;;;260    		varOperation.canTest = 0;
00012a  2000              MOVS     r0,#0
00012c  495a              LDR      r1,|L1.664|
00012e  f8a10091          STRH     r0,[r1,#0x91]
;;;261    		dataToSend.canId = canIdExt[i].canID;
000132  eb040044          ADD      r0,r4,r4,LSL #1
000136  4969              LDR      r1,|L1.732|
000138  f8510020          LDR      r0,[r1,r0,LSL #2]
00013c  4966              LDR      r1,|L1.728|
00013e  6008              STR      r0,[r1,#0]  ; dataToSend
;;;262    		dataToSend.ide     = CAN_ID_EXT;
000140  2004              MOVS     r0,#4
000142  6048              STR      r0,[r1,#4]  ; dataToSend
;;;263    		temp = ReadECUVersion((uint8_t *)canIdExt[i].pidVerCmd); 
000144  eb040144          ADD      r1,r4,r4,LSL #1
000148  4a64              LDR      r2,|L1.732|
00014a  eb020181          ADD      r1,r2,r1,LSL #2
00014e  1d08              ADDS     r0,r1,#4
000150  f7fffffe          BL       ReadECUVersion
000154  4606              MOV      r6,r0
;;;264    	    if(temp != 200)//版本号读取成功
000156  2ec8              CMP      r6,#0xc8
000158  d07e              BEQ      |L1.600|
;;;265    		{
;;;266    			i=0;
00015a  2400              MOVS     r4,#0
;;;267    			ptrOK = Mem_malloc(60);
00015c  203c              MOVS     r0,#0x3c
00015e  f7fffffe          BL       Mem_malloc
000162  4605              MOV      r5,r0
;;;268    			ptrOK[i++] = 32;
000164  2220              MOVS     r2,#0x20
000166  4621              MOV      r1,r4
000168  1c64              ADDS     r4,r4,#1
00016a  546a              STRB     r2,[r5,r1]
;;;269    			ptrOK[i++] = 0x50;
00016c  2250              MOVS     r2,#0x50
00016e  4621              MOV      r1,r4
000170  1c64              ADDS     r4,r4,#1
000172  546a              STRB     r2,[r5,r1]
;;;270    			ptrOK[i++] = 0x13;
000174  2213              MOVS     r2,#0x13
000176  4621              MOV      r1,r4
000178  1c64              ADDS     r4,r4,#1
00017a  546a              STRB     r2,[r5,r1]
;;;271    			ptrOK[i++] = canDataConfig.canBaud;
00017c  484a              LDR      r0,|L1.680|
00017e  7c82              LDRB     r2,[r0,#0x12]  ; canDataConfig
000180  4621              MOV      r1,r4
000182  1c64              ADDS     r4,r4,#1
000184  546a              STRB     r2,[r5,r1]
;;;272    			ptrOK[i++] = (varOperation.canRxId>>24) & 0x000000FF;ptrOK[i++] = (varOperation.canRxId>>16) & 0x000000FF;
000186  4844              LDR      r0,|L1.664|
000188  f8d0008c          LDR      r0,[r0,#0x8c]  ; varOperation
00018c  0e01              LSRS     r1,r0,#24
00018e  4622              MOV      r2,r4
000190  1c64              ADDS     r4,r4,#1
000192  54a9              STRB     r1,[r5,r2]
000194  4840              LDR      r0,|L1.664|
000196  f8d0008c          LDR      r0,[r0,#0x8c]  ; varOperation
00019a  f3c04207          UBFX     r2,r0,#16,#8
00019e  4621              MOV      r1,r4
0001a0  1c64              ADDS     r4,r4,#1
0001a2  546a              STRB     r2,[r5,r1]
;;;273    			ptrOK[i++] = (varOperation.canRxId>>8) & 0x000000FF;ptrOK[i++] = (varOperation.canRxId>>0) & 0x000000FF;
0001a4  483c              LDR      r0,|L1.664|
0001a6  f8b0008c          LDRH     r0,[r0,#0x8c]  ; varOperation
0001aa  f3c02207          UBFX     r2,r0,#8,#8
0001ae  4621              MOV      r1,r4
0001b0  1c64              ADDS     r4,r4,#1
0001b2  546a              STRB     r2,[r5,r1]
0001b4  4838              LDR      r0,|L1.664|
0001b6  f890208c          LDRB     r2,[r0,#0x8c]  ; varOperation
0001ba  4620              MOV      r0,r4
0001bc  1c61              ADDS     r1,r4,#1
0001be  b2cc              UXTB     r4,r1
0001c0  542a              STRB     r2,[r5,r0]
;;;274    			ptrOK[i++] = (dataToSend.canId>>24) & 0x000000FF;ptrOK[i++] = (dataToSend.canId>>16) & 0x000000FF;
0001c2  4845              LDR      r0,|L1.728|
0001c4  6800              LDR      r0,[r0,#0]  ; dataToSend
0001c6  0e00              LSRS     r0,r0,#24
0001c8  4621              MOV      r1,r4
0001ca  1c62              ADDS     r2,r4,#1
0001cc  b2d4              UXTB     r4,r2
0001ce  5468              STRB     r0,[r5,r1]
0001d0  4841              LDR      r0,|L1.728|
0001d2  6800              LDR      r0,[r0,#0]  ; dataToSend
0001d4  f3c04207          UBFX     r2,r0,#16,#8
0001d8  4620              MOV      r0,r4
0001da  1c61              ADDS     r1,r4,#1
0001dc  b2cc              UXTB     r4,r1
0001de  542a              STRB     r2,[r5,r0]
;;;275    			ptrOK[i++] = (dataToSend.canId>>8) & 0x000000FF;ptrOK[i++] = (dataToSend.canId>>0) & 0x000000FF;
0001e0  483d              LDR      r0,|L1.728|
0001e2  8800              LDRH     r0,[r0,#0]  ; dataToSend
0001e4  f3c02207          UBFX     r2,r0,#8,#8
0001e8  4620              MOV      r0,r4
0001ea  1c61              ADDS     r1,r4,#1
0001ec  b2cc              UXTB     r4,r1
0001ee  542a              STRB     r2,[r5,r0]
0001f0  4839              LDR      r0,|L1.728|
0001f2  7802              LDRB     r2,[r0,#0]  ; dataToSend
0001f4  4620              MOV      r0,r4
0001f6  1c61              ADDS     r1,r4,#1
0001f8  b2cc              UXTB     r4,r1
0001fa  542a              STRB     r2,[r5,r0]
;;;276    			memcpy(&ptrOK[i],varOperation.ecuVersion,20);
0001fc  1928              ADDS     r0,r5,r4
0001fe  2214              MOVS     r2,#0x14
000200  4925              LDR      r1,|L1.664|
000202  3164              ADDS     r1,r1,#0x64
000204  f7fffffe          BL       __aeabi_memcpy
;;;277    			OSMutexPend(CDMASendMutex,0,&err);
000208  aa03              ADD      r2,sp,#0xc
00020a  2100              MOVS     r1,#0
00020c  4834              LDR      r0,|L1.736|
00020e  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000210  f7fffffe          BL       OSMutexPend
;;;278    			memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],ptrOK,ptrOK[0]);
000214  4933              LDR      r1,|L1.740|
000216  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000218  6849              LDR      r1,[r1,#4]
00021a  4b32              LDR      r3,|L1.740|
00021c  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
00021e  881b              LDRH     r3,[r3,#0]
000220  18c8              ADDS     r0,r1,r3
000222  782a              LDRB     r2,[r5,#0]
000224  4629              MOV      r1,r5
000226  f7fffffe          BL       __aeabi_memcpy
;;;279    			cdmaDataToSend->datLength += ptrOK[0];
00022a  482e              LDR      r0,|L1.740|
00022c  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00022e  8800              LDRH     r0,[r0,#0]
000230  7829              LDRB     r1,[r5,#0]
000232  4408              ADD      r0,r0,r1
000234  492b              LDR      r1,|L1.740|
000236  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000238  8008              STRH     r0,[r1,#0]
;;;280    			OSMutexPost(CDMASendMutex);
00023a  4829              LDR      r0,|L1.736|
00023c  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00023e  f7fffffe          BL       OSMutexPost
;;;281    			Mem_free(ptrOK);
000242  4628              MOV      r0,r5
000244  f7fffffe          BL       Mem_free
;;;282    			memcpy(canDataConfig.pidVerCmd,canIdExt[i].pidVerCmd,4);//todo:保存当前读取版本号的指令
000248  eb040044          ADD      r0,r4,r4,LSL #1
00024c  4923              LDR      r1,|L1.732|
00024e  eb010180          ADD      r1,r1,r0,LSL #2
000252  4815              LDR      r0,|L1.680|
000254  6849              LDR      r1,[r1,#4]
000256  e000              B        |L1.602|
                  |L1.600|
000258  e002              B        |L1.608|
                  |L1.602|
00025a  f8c01013          STR      r1,[r0,#0x13]  ; canDataConfig
;;;283    			break;
00025e  e004              B        |L1.618|
                  |L1.608|
000260  1c60              ADDS     r0,r4,#1              ;247
000262  b2c4              UXTB     r4,r0                 ;247
                  |L1.612|
000264  2c0b              CMP      r4,#0xb               ;247
000266  f6ffaf17          BLT      |L1.152|
                  |L1.618|
00026a  bf00              NOP      
;;;284    		}
;;;285    	}
;;;286    	if(varOperation.canTest == 0)
00026c  480a              LDR      r0,|L1.664|
00026e  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
000272  b940              CBNZ     r0,|L1.646|
;;;287    	{
;;;288    		LogReport("\r\n12-CAN Test Fail!");
000274  a01c              ADR      r0,|L1.744|
000276  f7fffffe          BL       LogReport
;;;289    		varOperation.isStrenOilOK = 0;
00027a  2000              MOVS     r0,#0
00027c  4906              LDR      r1,|L1.664|
00027e  f8810096          STRB     r0,[r1,#0x96]
                  |L1.642|
;;;290    		return;
;;;291    	}
;;;292    idOK:
;;;293    	varOperation.canTest = 0;//不再获取 PID 信息
;;;294    	varOperation.isStrenOilOK = 0;//一旦进入自识别，就不能再进行动力提升
;;;295    	
;;;296    	return;
;;;297    }
000282  e8bd81ff          POP      {r0-r8,pc}
                  |L1.646|
000286  bf00              NOP                            ;292
                  |L1.648|
000288  2000              MOVS     r0,#0                 ;293
00028a  4903              LDR      r1,|L1.664|
00028c  f8a10091          STRH     r0,[r1,#0x91]         ;293
000290  f8810096          STRB     r0,[r1,#0x96]         ;294
000294  bf00              NOP                            ;296
000296  e7f4              B        |L1.642|
;;;298    extern VARConfig* ptrPIDVars;//指向第二配置区
                          ENDP

                  |L1.664|
                          DCD      varOperation
                  |L1.668|
                          DCD      0x40006400
                  |L1.672|
                          DCD      canBaudEnum
                  |L1.676|
                          DCD      canRecieveQ
                  |L1.680|
                          DCD      canDataConfig
                  |L1.684|
0002ac  0d0a3130          DCB      "\r\n10-Test Baud:%d;",0
0002b0  2d546573
0002b4  74204261
0002b8  75643a25
0002bc  643b00  
0002bf  00                DCB      0
                  |L1.704|
0002c0  0d0a3131          DCB      "\r\n11-Baud Test Fail!",0
0002c4  2d426175
0002c8  64205465
0002cc  73742046
0002d0  61696c21
0002d4  00      
0002d5  00                DCB      0
0002d6  00                DCB      0
0002d7  00                DCB      0
                  |L1.728|
                          DCD      dataToSend
                  |L1.732|
                          DCD      canIdExt
                  |L1.736|
                          DCD      CDMASendMutex
                  |L1.740|
                          DCD      cdmaDataToSend
                  |L1.744|
0002e8  0d0a3132          DCB      "\r\n12-CAN Test Fail!",0
0002ec  2d43414e
0002f0  20546573
0002f4  74204661
0002f8  696c2100

                          AREA ||i.OBDTask||, CODE, READONLY, ALIGN=2

                  OBDTask PROC
;;;12     
;;;13     void OBDTask(void *pdata)
000000  b086              SUB      sp,sp,#0x18
;;;14     {
;;;15     	INT8U     err;
;;;16     	uint8_t   i      = 0;
000002  f04f0800          MOV      r8,#0
;;;17     	uint8_t   cmdLen = 0;        //封包的时候要减去指令的长度
000006  2600              MOVS     r6,#0
;;;18     	uint8_t   cmdNum = 0;        //指令序号
000008  46b1              MOV      r9,r6
;;;19     	uint8_t   cmdManyPackNum = 0;//要接受的多包的数量
00000a  46b2              MOV      r10,r6
;;;20     	CanRxMsg* CAN1_RxMsg;        //指向接收到的OBD信息
;;;21     	uint8_t * can1_Txbuff;       //指向要发送的OBD信息
;;;22     	uint8_t * ptrSaveBuff;       //
;;;23     	CAN1Config();                //CAN 配置
00000c  f7fffffe          BL       CAN1Config
;;;24     	OSTimeDlyHMSM(0,0,10,4);     
000010  2304              MOVS     r3,#4
000012  220a              MOVS     r2,#0xa
000014  2100              MOVS     r1,#0
000016  4608              MOV      r0,r1
000018  f7fffffe          BL       OSTimeDlyHMSM
;;;25     	TestServer();                //测试服务器
00001c  f7fffffe          BL       TestServer
;;;26     	while(1)
000020  e148              B        |L2.692|
                  |L2.34|
;;;27     	{	
;;;28     		StrengthFuel();
000022  f7fffffe          BL       StrengthFuel
;;;29     		if((varOperation.canTest == 0)||(varOperation.pidTset == 1))//配置文件不成功，则停止CAN，或者在测试PID指令
000026  48a4              LDR      r0,|L2.696|
000028  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
00002c  b120              CBZ      r0,|L2.56|
00002e  48a2              LDR      r0,|L2.696|
000030  f8900093          LDRB     r0,[r0,#0x93]  ; varOperation
000034  2801              CMP      r0,#1
000036  d106              BNE      |L2.70|
                  |L2.56|
;;;30     		{
;;;31     			OSTimeDlyHMSM(0,0,1,0);	
000038  2300              MOVS     r3,#0
00003a  2201              MOVS     r2,#1
00003c  4619              MOV      r1,r3
00003e  4618              MOV      r0,r3
000040  f7fffffe          BL       OSTimeDlyHMSM
;;;32     			continue;
000044  e136              B        |L2.692|
                  |L2.70|
;;;33     		}	 
;;;34     		can1_Txbuff = OSQPend(canSendQ,1000,&err);//收到PID指令，进行发送
000046  aa05              ADD      r2,sp,#0x14
000048  f44f717a          MOV      r1,#0x3e8
00004c  489b              LDR      r0,|L2.700|
00004e  6800              LDR      r0,[r0,#0]  ; canSendQ
000050  f7fffffe          BL       OSQPend
000054  4607              MOV      r7,r0
;;;35     		if(err != OS_ERR_NONE)
000056  f89d0014          LDRB     r0,[sp,#0x14]
00005a  b100              CBZ      r0,|L2.94|
;;;36     			continue;
00005c  e12a              B        |L2.692|
                  |L2.94|
;;;37     		cmdNum = can1_Txbuff[0];  //记录PID指令序号
00005e  f8979000          LDRB     r9,[r7,#0]
;;;38     		cmdLen = can1_Txbuff[1];  //记录PID指令长度
000062  787e              LDRB     r6,[r7,#1]
;;;39     		
;;;40     		dataToSend.pdat = &can1_Txbuff[1];   
000064  1c78              ADDS     r0,r7,#1
000066  4996              LDR      r1,|L2.704|
000068  6088              STR      r0,[r1,#8]  ; dataToSend
;;;41     		OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);//发送PID指令
00006a  460b              MOV      r3,r1
00006c  689a              LDR      r2,[r3,#8]  ; dataToSend
00006e  6859              LDR      r1,[r3,#4]  ; dataToSend
000070  6818              LDR      r0,[r3,#0]  ; dataToSend
000072  f7fffffe          BL       OBD_CAN_SendData
;;;42     		
;;;43     		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err); // 接收到OBD回复
000076  aa05              ADD      r2,sp,#0x14
000078  f44f71fa          MOV      r1,#0x1f4
00007c  4891              LDR      r0,|L2.708|
00007e  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000080  f7fffffe          BL       OSQPend
000084  4604              MOV      r4,r0
;;;44     		if(err == OS_ERR_NONE)
000086  f89d0014          LDRB     r0,[sp,#0x14]
00008a  2800              CMP      r0,#0
00008c  d17e              BNE      |L2.396|
;;;45     		{
;;;46     			freOBDLed = LEDSLOW;                    // OBD 初始化成功
00008e  f44f707a          MOV      r0,#0x3e8
000092  498d              LDR      r1,|L2.712|
000094  8008              STRH     r0,[r1,#0]
;;;47     			if(CAN1_RxMsg->Data[0] == 0x10)         // 多包处理
000096  7ae0              LDRB     r0,[r4,#0xb]
000098  2810              CMP      r0,#0x10
00009a  d178              BNE      |L2.398|
;;;48     			{
;;;49     				ptrSaveBuff = Mem_malloc(CAN1_RxMsg->Data[1] + 10);// 申请的内存块足够长
00009c  7b21              LDRB     r1,[r4,#0xc]
00009e  f101000a          ADD      r0,r1,#0xa
0000a2  f7fffffe          BL       Mem_malloc
0000a6  4605              MOV      r5,r0
;;;50     				if(ptrSaveBuff != NULL)
0000a8  2d00              CMP      r5,#0
0000aa  d071              BEQ      |L2.400|
;;;51     				{
;;;52     					ptrSaveBuff[0] = CAN1_RxMsg -> Data[1] + 3;
0000ac  7b20              LDRB     r0,[r4,#0xc]
0000ae  1cc0              ADDS     r0,r0,#3
0000b0  7028              STRB     r0,[r5,#0]
;;;53     					ptrSaveBuff[1] = 0x60;
0000b2  2060              MOVS     r0,#0x60
0000b4  7068              STRB     r0,[r5,#1]
;;;54     					ptrSaveBuff[2] = cmdNum;
0000b6  f8859002          STRB     r9,[r5,#2]
;;;55     				
;;;56     					memcpy(&ptrSaveBuff[3],&CAN1_RxMsg->Data[2],6);
0000ba  f8d4100d          LDR      r1,[r4,#0xd]
0000be  f8c51003          STR      r1,[r5,#3]
0000c2  f8b40011          LDRH     r0,[r4,#0x11]
0000c6  f8a50007          STRH     r0,[r5,#7]
;;;57     					cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6) % 7 == 0? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
0000ca  7b20              LDRB     r0,[r4,#0xc]
0000cc  1f80              SUBS     r0,r0,#6
0000ce  2107              MOVS     r1,#7
0000d0  fb90f2f1          SDIV     r2,r0,r1
0000d4  fb010012          MLS      r0,r1,r2,r0
0000d8  b920              CBNZ     r0,|L2.228|
0000da  7b20              LDRB     r0,[r4,#0xc]
0000dc  1f80              SUBS     r0,r0,#6
0000de  fb90f0f1          SDIV     r0,r0,r1
0000e2  e005              B        |L2.240|
                  |L2.228|
0000e4  7b20              LDRB     r0,[r4,#0xc]
0000e6  1f80              SUBS     r0,r0,#6
0000e8  2107              MOVS     r1,#7
0000ea  fb90f0f1          SDIV     r0,r0,r1
0000ee  1c40              ADDS     r0,r0,#1
                  |L2.240|
0000f0  f0000aff          AND      r10,r0,#0xff
;;;58     					Mem_free(CAN1_RxMsg);
0000f4  4620              MOV      r0,r4
0000f6  f7fffffe          BL       Mem_free
;;;59     					
;;;60     					dataToSend.pdat = pidManyBag;   //发送 0x30 请求接下来的多包
0000fa  4874              LDR      r0,|L2.716|
0000fc  4970              LDR      r1,|L2.704|
0000fe  6088              STR      r0,[r1,#8]  ; dataToSend
;;;61     					OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
000100  460b              MOV      r3,r1
000102  689a              LDR      r2,[r3,#8]  ; dataToSend
000104  6859              LDR      r1,[r3,#4]  ; dataToSend
000106  6818              LDR      r0,[r3,#0]  ; dataToSend
000108  f7fffffe          BL       OBD_CAN_SendData
;;;62     					
;;;63     					for(i=0;i<cmdManyPackNum;i++)
00010c  f04f0800          MOV      r8,#0
000110  e01c              B        |L2.332|
                  |L2.274|
;;;64     					{
;;;65     						CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);   // 接收多包
000112  aa05              ADD      r2,sp,#0x14
000114  2119              MOVS     r1,#0x19
000116  486b              LDR      r0,|L2.708|
000118  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00011a  f7fffffe          BL       OSQPend
00011e  4604              MOV      r4,r0
;;;66     						if(err == OS_ERR_NONE)
000120  f89d0014          LDRB     r0,[sp,#0x14]
000124  b968              CBNZ     r0,|L2.322|
;;;67     						{
;;;68     							memcpy(&ptrSaveBuff[7*i + 9],&CAN1_RxMsg->Data[1],7);
000126  ebc800c8          RSB      r0,r8,r8,LSL #3
00012a  3009              ADDS     r0,r0,#9
00012c  1941              ADDS     r1,r0,r5
00012e  68e2              LDR      r2,[r4,#0xc]
000130  600a              STR      r2,[r1,#0]
000132  8a22              LDRH     r2,[r4,#0x10]
000134  808a              STRH     r2,[r1,#4]
000136  7ca0              LDRB     r0,[r4,#0x12]
000138  7188              STRB     r0,[r1,#6]
;;;69     							Mem_free(CAN1_RxMsg);
00013a  4620              MOV      r0,r4
00013c  f7fffffe          BL       Mem_free
000140  e000              B        |L2.324|
                  |L2.322|
;;;70     						}
;;;71     						else 
;;;72     							break;
000142  e005              B        |L2.336|
                  |L2.324|
000144  f1080001          ADD      r0,r8,#1              ;63
000148  f00008ff          AND      r8,r0,#0xff           ;63
                  |L2.332|
00014c  45d0              CMP      r8,r10                ;63
00014e  dbe0              BLT      |L2.274|
                  |L2.336|
000150  bf00              NOP      
;;;73     					} 
;;;74     					if(i == cmdManyPackNum)
000152  45d0              CMP      r8,r10
000154  d120              BNE      |L2.408|
;;;75     					{
;;;76     						OSMutexPend(CDMASendMutex,0,&err);
000156  aa05              ADD      r2,sp,#0x14
000158  2100              MOVS     r1,#0
00015a  485d              LDR      r0,|L2.720|
00015c  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00015e  f7fffffe          BL       OSMutexPend
;;;77     						
;;;78     						memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],ptrSaveBuff,ptrSaveBuff[0]);
000162  495c              LDR      r1,|L2.724|
000164  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000166  6849              LDR      r1,[r1,#4]
000168  4b5a              LDR      r3,|L2.724|
00016a  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
00016c  881b              LDRH     r3,[r3,#0]
00016e  18c8              ADDS     r0,r1,r3
000170  782a              LDRB     r2,[r5,#0]
000172  4629              MOV      r1,r5
000174  f7fffffe          BL       __aeabi_memcpy
;;;79     						cdmaDataToSend->datLength += ptrSaveBuff[0];
000178  4856              LDR      r0,|L2.724|
00017a  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00017c  8800              LDRH     r0,[r0,#0]
00017e  7829              LDRB     r1,[r5,#0]
000180  4408              ADD      r0,r0,r1
000182  4954              LDR      r1,|L2.724|
000184  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000186  8008              STRH     r0,[r1,#0]
;;;80     						
;;;81     						OSMutexPost(CDMASendMutex);
000188  4851              LDR      r0,|L2.720|
00018a  e002              B        |L2.402|
                  |L2.396|
00018c  e087              B        |L2.670|
                  |L2.398|
00018e  e00b              B        |L2.424|
                  |L2.400|
000190  e08c              B        |L2.684|
                  |L2.402|
000192  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000194  f7fffffe          BL       OSMutexPost
                  |L2.408|
;;;82     					}
;;;83     					PIDVarGet(cmdNum,&ptrSaveBuff[3]);
000198  1ce9              ADDS     r1,r5,#3
00019a  4648              MOV      r0,r9
00019c  f7fffffe          BL       PIDVarGet
;;;84     					Mem_free(ptrSaveBuff);
0001a0  4628              MOV      r0,r5
0001a2  f7fffffe          BL       Mem_free
0001a6  e081              B        |L2.684|
                  |L2.424|
;;;85     				}
;;;86     			}
;;;87     			else  //单包处理
;;;88     			{
;;;89     				if(CAN1_RxMsg->Data[0] > cmdLen)
0001a8  7ae0              LDRB     r0,[r4,#0xb]
0001aa  42b0              CMP      r0,r6
0001ac  dd5f              BLE      |L2.622|
;;;90     				{
;;;91     					OSMutexPend(CDMASendMutex,0,&err);
0001ae  aa05              ADD      r2,sp,#0x14
0001b0  2100              MOVS     r1,#0
0001b2  4847              LDR      r0,|L2.720|
0001b4  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0001b6  f7fffffe          BL       OSMutexPend
;;;92     					
;;;93     					cdmaDataToSend->data[cdmaDataToSend->datLength++] = CAN1_RxMsg->Data[0] - cmdLen + 3;
0001ba  7ae0              LDRB     r0,[r4,#0xb]
0001bc  1b80              SUBS     r0,r0,r6
0001be  1cc0              ADDS     r0,r0,#3
0001c0  b2c1              UXTB     r1,r0
0001c2  4844              LDR      r0,|L2.724|
0001c4  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001c6  8802              LDRH     r2,[r0,#0]
0001c8  4842              LDR      r0,|L2.724|
0001ca  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001cc  8800              LDRH     r0,[r0,#0]
0001ce  1c40              ADDS     r0,r0,#1
0001d0  4b40              LDR      r3,|L2.724|
0001d2  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0001d4  8018              STRH     r0,[r3,#0]
0001d6  483f              LDR      r0,|L2.724|
0001d8  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001da  6840              LDR      r0,[r0,#4]
0001dc  5481              STRB     r1,[r0,r2]
;;;94     					cdmaDataToSend->data[cdmaDataToSend->datLength++] = 0x60;
0001de  2160              MOVS     r1,#0x60
0001e0  483c              LDR      r0,|L2.724|
0001e2  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001e4  8802              LDRH     r2,[r0,#0]
0001e6  483b              LDR      r0,|L2.724|
0001e8  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001ea  8800              LDRH     r0,[r0,#0]
0001ec  1c40              ADDS     r0,r0,#1
0001ee  4b39              LDR      r3,|L2.724|
0001f0  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0001f2  8018              STRH     r0,[r3,#0]
0001f4  4837              LDR      r0,|L2.724|
0001f6  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001f8  6840              LDR      r0,[r0,#4]
0001fa  5481              STRB     r1,[r0,r2]
;;;95     					cdmaDataToSend->data[cdmaDataToSend->datLength++] = cmdNum;
0001fc  4835              LDR      r0,|L2.724|
0001fe  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000200  8801              LDRH     r1,[r0,#0]
000202  4834              LDR      r0,|L2.724|
000204  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000206  8800              LDRH     r0,[r0,#0]
000208  1c40              ADDS     r0,r0,#1
00020a  4a32              LDR      r2,|L2.724|
00020c  6812              LDR      r2,[r2,#0]  ; cdmaDataToSend
00020e  8010              STRH     r0,[r2,#0]
000210  4830              LDR      r0,|L2.724|
000212  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000214  6840              LDR      r0,[r0,#4]
000216  f8009001          STRB     r9,[r0,r1]
;;;96     					memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],&CAN1_RxMsg->Data[cmdLen+1],(CAN1_RxMsg->Data[0] - cmdLen));
00021a  4b2e              LDR      r3,|L2.724|
00021c  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
00021e  685b              LDR      r3,[r3,#4]
000220  f8dfc0b0          LDR      r12,|L2.724|
000224  f8dcc000          LDR      r12,[r12,#0]  ; cdmaDataToSend
000228  f8bcc000          LDRH     r12,[r12,#0]
00022c  eb03000c          ADD      r0,r3,r12
000230  7ae3              LDRB     r3,[r4,#0xb]
000232  1b9a              SUBS     r2,r3,r6
000234  f104030b          ADD      r3,r4,#0xb
000238  f1060c01          ADD      r12,r6,#1
00023c  eb03010c          ADD      r1,r3,r12
000240  f7fffffe          BL       __aeabi_memcpy
;;;97     					cdmaDataToSend -> datLength += CAN1_RxMsg->Data[0] - cmdLen;
000244  4823              LDR      r0,|L2.724|
000246  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000248  8800              LDRH     r0,[r0,#0]
00024a  7ae1              LDRB     r1,[r4,#0xb]
00024c  1b89              SUBS     r1,r1,r6
00024e  4408              ADD      r0,r0,r1
000250  4920              LDR      r1,|L2.724|
000252  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000254  8008              STRH     r0,[r1,#0]
;;;98     
;;;99     					OSMutexPost(CDMASendMutex);
000256  481e              LDR      r0,|L2.720|
000258  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00025a  f7fffffe          BL       OSMutexPost
;;;100    					PIDVarGet(cmdNum,&CAN1_RxMsg->Data[cmdLen + 1]);
00025e  f104000b          ADD      r0,r4,#0xb
000262  1c72              ADDS     r2,r6,#1
000264  1881              ADDS     r1,r0,r2
000266  4648              MOV      r0,r9
000268  f7fffffe          BL       PIDVarGet
00026c  e013              B        |L2.662|
                  |L2.622|
;;;101    				}
;;;102    				else if((CAN1_RxMsg->Data[0]==0x03)&&(CAN1_RxMsg->Data[1]==0x7F))
00026e  7ae0              LDRB     r0,[r4,#0xb]
000270  2803              CMP      r0,#3
000272  d110              BNE      |L2.662|
000274  7b20              LDRB     r0,[r4,#0xc]
000276  287f              CMP      r0,#0x7f
000278  d10d              BNE      |L2.662|
;;;103    				{
;;;104    					LogReport("\r\n05-ECU report:03 7F;PID:%d err:%d,%d,%d,%d,%d,%d;",cmdNum,
00027a  7ca0              LDRB     r0,[r4,#0x12]
00027c  7c61              LDRB     r1,[r4,#0x11]
00027e  7c22              LDRB     r2,[r4,#0x10]
000280  7be3              LDRB     r3,[r4,#0xf]
000282  e9cd3200          STRD     r3,r2,[sp,#0]
000286  e9cd1002          STRD     r1,r0,[sp,#8]
00028a  7ba3              LDRB     r3,[r4,#0xe]
00028c  7b62              LDRB     r2,[r4,#0xd]
00028e  4649              MOV      r1,r9
000290  a011              ADR      r0,|L2.728|
000292  f7fffffe          BL       LogReport
                  |L2.662|
;;;105    					CAN1_RxMsg->Data[2],CAN1_RxMsg->Data[3],CAN1_RxMsg->Data[4],CAN1_RxMsg->Data[5],
;;;106    					CAN1_RxMsg->Data[6],CAN1_RxMsg->Data[7]);
;;;107    				}
;;;108    				Mem_free(CAN1_RxMsg);
000296  4620              MOV      r0,r4
000298  f7fffffe          BL       Mem_free
00029c  e006              B        |L2.684|
                  |L2.670|
;;;109    			}
;;;110    		}
;;;111    		else
;;;112    		{
;;;113    			freOBDLed = LEDFAST; 
00029e  20c8              MOVS     r0,#0xc8
0002a0  4909              LDR      r1,|L2.712|
0002a2  8008              STRH     r0,[r1,#0]
;;;114    			LogReport("\r\n04-PIDcmd don't report:%d;",cmdNum);//发送PID指令，ECU不回复
0002a4  4649              MOV      r1,r9
0002a6  a019              ADR      r0,|L2.780|
0002a8  f7fffffe          BL       LogReport
                  |L2.684|
;;;115    		}
;;;116    		Mem_free(can1_Txbuff);                 //释放内存块
0002ac  4638              MOV      r0,r7
0002ae  f7fffffe          BL       Mem_free
0002b2  bf00              NOP                            ;32
                  |L2.692|
0002b4  e6b5              B        |L2.34|
;;;117    	}
;;;118    }
;;;119    
                          ENDP

0002b6  0000              DCW      0x0000
                  |L2.696|
                          DCD      varOperation
                  |L2.700|
                          DCD      canSendQ
                  |L2.704|
                          DCD      dataToSend
                  |L2.708|
                          DCD      canRecieveQ
                  |L2.712|
                          DCD      freOBDLed
                  |L2.716|
                          DCD      pidManyBag
                  |L2.720|
                          DCD      CDMASendMutex
                  |L2.724|
                          DCD      cdmaDataToSend
                  |L2.728|
0002d8  0d0a3035          DCB      "\r\n05-ECU report:03 7F;PID:%d err:%d,%d,%d,%d,%d,%d;",0
0002dc  2d454355
0002e0  20726570
0002e4  6f72743a
0002e8  30332037
0002ec  463b5049
0002f0  443a2564
0002f4  20657272
0002f8  3a25642c
0002fc  25642c25
000300  642c2564
000304  2c25642c
000308  25643b00
                  |L2.780|
00030c  0d0a3034          DCB      "\r\n04-PIDcmd don't report:%d;",0
000310  2d504944
000314  636d6420
000318  646f6e27
00031c  74207265
000320  706f7274
000324  3a25643b
000328  00      
000329  00                DCB      0
00032a  00                DCB      0
00032b  00                DCB      0

                          AREA ||i.PIDVarGet||, CODE, READONLY, ALIGN=2

                  PIDVarGet PROC
;;;299    
;;;300    void PIDVarGet(uint8_t cmdId,uint8_t ptrData[])
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;301    {
000004  b089              SUB      sp,sp,#0x24
000006  468b              MOV      r11,r1
;;;302    	uint8_t  i,j,err;	
;;;303    	uint64_t saveDate;
;;;304    	uint8_t  byteNum = 0;
000008  f04f0a00          MOV      r10,#0
;;;305    	uint8_t  temp = 0;
00000c  2700              MOVS     r7,#0
;;;306    	uint16_t temp1 = 0;
00000e  2000              MOVS     r0,#0
000010  9003              STR      r0,[sp,#0xc]
;;;307    	uint8_t* ptr;
;;;308    	static uint8_t  curFuelTimes = 0;//四次一计算
;;;309    	static uint32_t allFuelCom   = 0;//累加喷油量
;;;310    	for(i = 0;i < varOperation.pidVarNum;i ++)
000012  2400              MOVS     r4,#0
000014  e3fd              B        |L3.2066|
                  |L3.22|
;;;311    	{
;;;312    		if((ptrPIDVars + i)->pidId != cmdId)
000016  ebc400c4          RSB      r0,r4,r4,LSL #3
00001a  49fe              LDR      r1,|L3.1044|
00001c  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00001e  eb010040          ADD      r0,r1,r0,LSL #1
000022  7841              LDRB     r1,[r0,#1]
000024  9809              LDR      r0,[sp,#0x24]
000026  4281              CMP      r1,r0
000028  d000              BEQ      |L3.44|
;;;313    			continue;
00002a  e3f3              B        |L3.2068|
                  |L3.44|
;;;314    		//获得字节数
;;;315    		byteNum = ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)%8 ==0?\
00002c  ebc403c4          RSB      r3,r4,r4,LSL #3
000030  f8dfc3e0          LDR      r12,|L3.1044|
000034  f8dcc000          LDR      r12,[r12,#0]  ; ptrPIDVars
000038  eb0c0343          ADD      r3,r12,r3,LSL #1
00003c  795b              LDRB     r3,[r3,#5]
00003e  ebc40cc4          RSB      r12,r4,r4,LSL #3
000042  f8dfe3d0          LDR      lr,|L3.1044|
000046  f8dee000          LDR      lr,[lr,#0]  ; ptrPIDVars
00004a  eb0e0c4c          ADD      r12,lr,r12,LSL #1
00004e  f89cc004          LDRB     r12,[r12,#4]
000052  eb03020c          ADD      r2,r3,r12
000056  17d3              ASRS     r3,r2,#31
000058  eb027353          ADD      r3,r2,r3,LSR #29
00005c  10db              ASRS     r3,r3,#3
00005e  eba203c3          SUB      r3,r2,r3,LSL #3
000062  b9cb              CBNZ     r3,|L3.152|
;;;316    						((ptrPIDVars + i)->bitLen + (ptrPIDVars + i)->startBit) / 8 : \
000064  ebc403c4          RSB      r3,r4,r4,LSL #3
000068  f8dfc3a8          LDR      r12,|L3.1044|
00006c  f8dcc000          LDR      r12,[r12,#0]  ; ptrPIDVars
000070  eb0c0343          ADD      r3,r12,r3,LSL #1
000074  795b              LDRB     r3,[r3,#5]
000076  ebc40cc4          RSB      r12,r4,r4,LSL #3
00007a  f8dfe398          LDR      lr,|L3.1044|
00007e  f8dee000          LDR      lr,[lr,#0]  ; ptrPIDVars
000082  eb0e0c4c          ADD      r12,lr,r12,LSL #1
000086  f89cc004          LDRB     r12,[r12,#4]
00008a  eb03010c          ADD      r1,r3,r12
00008e  17cb              ASRS     r3,r1,#31
000090  eb017353          ADD      r3,r1,r3,LSR #29
000094  10db              ASRS     r3,r3,#3
000096  e019              B        |L3.204|
                  |L3.152|
;;;317    						((ptrPIDVars + i)->bitLen + (ptrPIDVars + i)->startBit) / 8 + 1;
000098  ebc403c4          RSB      r3,r4,r4,LSL #3
00009c  f8dfc374          LDR      r12,|L3.1044|
0000a0  f8dcc000          LDR      r12,[r12,#0]  ; ptrPIDVars
0000a4  eb0c0343          ADD      r3,r12,r3,LSL #1
0000a8  795b              LDRB     r3,[r3,#5]
0000aa  ebc40cc4          RSB      r12,r4,r4,LSL #3
0000ae  f8dfe364          LDR      lr,|L3.1044|
0000b2  f8dee000          LDR      lr,[lr,#0]  ; ptrPIDVars
0000b6  eb0e0c4c          ADD      r12,lr,r12,LSL #1
0000ba  f89cc004          LDRB     r12,[r12,#4]
0000be  eb03000c          ADD      r0,r3,r12
0000c2  17c3              ASRS     r3,r0,#31
0000c4  eb007353          ADD      r3,r0,r3,LSR #29
0000c8  10db              ASRS     r3,r3,#3
0000ca  1c5b              ADDS     r3,r3,#1
                  |L3.204|
0000cc  f0030aff          AND      r10,r3,#0xff
;;;318    		if((ptrPIDVars + i)->dataHL == 1)//大端在前
0000d0  ebc400c4          RSB      r0,r4,r4,LSL #3
0000d4  49cf              LDR      r1,|L3.1044|
0000d6  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0000d8  f8110010          LDRB     r0,[r1,r0,LSL #1]
0000dc  2801              CMP      r0,#1
0000de  d17d              BNE      |L3.476|
;;;319    		{
;;;320    			j = 0;
0000e0  f04f0800          MOV      r8,#0
;;;321    			do{
0000e4  bf00              NOP      
                  |L3.230|
;;;322    				if(j == 0)
0000e6  f1b80f00          CMP      r8,#0
0000ea  d140              BNE      |L3.366|
;;;323    				{
;;;324    					temp = ptrData[ptrPIDVars->startByte + j];
0000ec  48c9              LDR      r0,|L3.1044|
0000ee  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0000f0  78c0              LDRB     r0,[r0,#3]
0000f2  4440              ADD      r0,r0,r8
0000f4  f81b7000          LDRB     r7,[r11,r0]
;;;325    					if(((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)<8)
0000f8  ebc400c4          RSB      r0,r4,r4,LSL #3
0000fc  49c5              LDR      r1,|L3.1044|
0000fe  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000100  eb010040          ADD      r0,r1,r0,LSL #1
000104  7940              LDRB     r0,[r0,#5]
000106  ebc401c4          RSB      r1,r4,r4,LSL #3
00010a  4ac2              LDR      r2,|L3.1044|
00010c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00010e  eb020141          ADD      r1,r2,r1,LSL #1
000112  7909              LDRB     r1,[r1,#4]
000114  4408              ADD      r0,r0,r1
000116  2808              CMP      r0,#8
000118  da1e              BGE      |L3.344|
;;;326    					{
;;;327    						temp &= (0xff>>(8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)));
00011a  ebc400c4          RSB      r0,r4,r4,LSL #3
00011e  49bd              LDR      r1,|L3.1044|
000120  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000122  eb010040          ADD      r0,r1,r0,LSL #1
000126  7940              LDRB     r0,[r0,#5]
000128  ebc401c4          RSB      r1,r4,r4,LSL #3
00012c  4ab9              LDR      r2,|L3.1044|
00012e  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000130  eb020141          ADD      r1,r2,r1,LSL #1
000134  7909              LDRB     r1,[r1,#4]
000136  4408              ADD      r0,r0,r1
000138  f1c00108          RSB      r1,r0,#8
00013c  20ff              MOVS     r0,#0xff
00013e  4108              ASRS     r0,r0,r1
000140  4007              ANDS     r7,r7,r0
;;;328    						temp >>= (ptrPIDVars + i)->startBit;
000142  ebc400c4          RSB      r0,r4,r4,LSL #3
000146  49b3              LDR      r1,|L3.1044|
000148  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00014a  eb010040          ADD      r0,r1,r0,LSL #1
00014e  7900              LDRB     r0,[r0,#4]
000150  4107              ASRS     r7,r7,r0
;;;329    						saveDate = temp;
000152  2600              MOVS     r6,#0
000154  463d              MOV      r5,r7
;;;330    						break;
000156  e05c              B        |L3.530|
                  |L3.344|
;;;331    					}
;;;332    					temp >>= (ptrPIDVars + i)->startBit;
000158  ebc400c4          RSB      r0,r4,r4,LSL #3
00015c  49ad              LDR      r1,|L3.1044|
00015e  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000160  eb010040          ADD      r0,r1,r0,LSL #1
000164  7900              LDRB     r0,[r0,#4]
000166  4107              ASRS     r7,r7,r0
;;;333    					saveDate = temp;
000168  2600              MOVS     r6,#0
00016a  463d              MOV      r5,r7
00016c  e04a              B        |L3.516|
                  |L3.366|
;;;334    				}else if(j == (byteNum - 1))
00016e  f1aa0001          SUB      r0,r10,#1
000172  4540              CMP      r0,r8
000174  d139              BNE      |L3.490|
;;;335    				{
;;;336    					saveDate <<= (((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit + 8) - byteNum * 8);
000176  ebc400c4          RSB      r0,r4,r4,LSL #3
00017a  49a6              LDR      r1,|L3.1044|
00017c  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00017e  eb010040          ADD      r0,r1,r0,LSL #1
000182  7940              LDRB     r0,[r0,#5]
000184  ebc401c4          RSB      r1,r4,r4,LSL #3
000188  4aa2              LDR      r2,|L3.1044|
00018a  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00018c  eb020141          ADD      r1,r2,r1,LSL #1
000190  7909              LDRB     r1,[r1,#4]
000192  4408              ADD      r0,r0,r1
000194  3008              ADDS     r0,r0,#8
000196  eba002ca          SUB      r2,r0,r10,LSL #3
00019a  4628              MOV      r0,r5
00019c  4631              MOV      r1,r6
00019e  e9cd6505          STRD     r6,r5,[sp,#0x14]
0001a2  f7fffffe          BL       __aeabi_llsl
0001a6  4605              MOV      r5,r0
0001a8  460e              MOV      r6,r1
;;;337    					temp = ptrData[ptrPIDVars->startByte + j];
0001aa  489a              LDR      r0,|L3.1044|
0001ac  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0001ae  78c0              LDRB     r0,[r0,#3]
0001b0  4440              ADD      r0,r0,r8
0001b2  f81b7000          LDRB     r7,[r11,r0]
;;;338    					temp &= 0xff>>(byteNum * 8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit));
0001b6  ebc400c4          RSB      r0,r4,r4,LSL #3
0001ba  4996              LDR      r1,|L3.1044|
0001bc  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0001be  eb010040          ADD      r0,r1,r0,LSL #1
0001c2  7940              LDRB     r0,[r0,#5]
0001c4  ebc401c4          RSB      r1,r4,r4,LSL #3
0001c8  4a92              LDR      r2,|L3.1044|
0001ca  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0001cc  eb020141          ADD      r1,r2,r1,LSL #1
0001d0  7909              LDRB     r1,[r1,#4]
0001d2  4408              ADD      r0,r0,r1
0001d4  ebc001ca          RSB      r1,r0,r10,LSL #3
0001d8  20ff              MOVS     r0,#0xff
0001da  e000              B        |L3.478|
                  |L3.476|
0001dc  e01a              B        |L3.532|
                  |L3.478|
0001de  4108              ASRS     r0,r0,r1
0001e0  4007              ANDS     r7,r7,r0
;;;339    					saveDate += temp;
0001e2  19ed              ADDS     r5,r5,r7
0001e4  f1460600          ADC      r6,r6,#0
0001e8  e00c              B        |L3.516|
                  |L3.490|
;;;340    				}else
;;;341    				{
;;;342    					saveDate <<= 8;
0001ea  0230              LSLS     r0,r6,#8
0001ec  ea406615          ORR      r6,r0,r5,LSR #24
0001f0  022d              LSLS     r5,r5,#8
;;;343    					temp = ptrData[ptrPIDVars->startByte + j];
0001f2  4888              LDR      r0,|L3.1044|
0001f4  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0001f6  78c0              LDRB     r0,[r0,#3]
0001f8  4440              ADD      r0,r0,r8
0001fa  f81b7000          LDRB     r7,[r11,r0]
;;;344    					saveDate += temp;
0001fe  19ed              ADDS     r5,r5,r7
000200  f1460600          ADC      r6,r6,#0
                  |L3.516|
;;;345    				}
;;;346    				j++;
000204  f1080001          ADD      r0,r8,#1
000208  f00008ff          AND      r8,r0,#0xff
;;;347    			}while(j < byteNum);	
00020c  45d0              CMP      r8,r10
00020e  f6ffaf6a          BLT      |L3.230|
                  |L3.530|
000212  e09a              B        |L3.842|
                  |L3.532|
;;;348    		}else if((ptrPIDVars + i)->dataHL == 2)//小端在前
000214  ebc400c4          RSB      r0,r4,r4,LSL #3
000218  497e              LDR      r1,|L3.1044|
00021a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00021c  f8110010          LDRB     r0,[r1,r0,LSL #1]
000220  2802              CMP      r0,#2
000222  d1f6              BNE      |L3.530|
;;;349    		{
;;;350    			j = byteNum - 1;
000224  f1aa0001          SUB      r0,r10,#1
000228  f00008ff          AND      r8,r0,#0xff
;;;351    			do{
00022c  bf00              NOP      
                  |L3.558|
;;;352    				if(j ==( byteNum - 1))
00022e  f1aa0001          SUB      r0,r10,#1
000232  4540              CMP      r0,r8
000234  d14c              BNE      |L3.720|
;;;353    				{
;;;354    					temp = ptrData[ptrPIDVars->startByte + j];
000236  4877              LDR      r0,|L3.1044|
000238  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
00023a  78c0              LDRB     r0,[r0,#3]
00023c  4440              ADD      r0,r0,r8
00023e  f81b7000          LDRB     r7,[r11,r0]
;;;355    					if(((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)<8)
000242  ebc400c4          RSB      r0,r4,r4,LSL #3
000246  4973              LDR      r1,|L3.1044|
000248  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00024a  eb010040          ADD      r0,r1,r0,LSL #1
00024e  7940              LDRB     r0,[r0,#5]
000250  ebc401c4          RSB      r1,r4,r4,LSL #3
000254  4a6f              LDR      r2,|L3.1044|
000256  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000258  eb020141          ADD      r1,r2,r1,LSL #1
00025c  7909              LDRB     r1,[r1,#4]
00025e  4408              ADD      r0,r0,r1
000260  2808              CMP      r0,#8
000262  da1e              BGE      |L3.674|
;;;356    					{
;;;357    						temp &= (0xff>>(8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)));
000264  ebc400c4          RSB      r0,r4,r4,LSL #3
000268  496a              LDR      r1,|L3.1044|
00026a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00026c  eb010040          ADD      r0,r1,r0,LSL #1
000270  7940              LDRB     r0,[r0,#5]
000272  ebc401c4          RSB      r1,r4,r4,LSL #3
000276  4a67              LDR      r2,|L3.1044|
000278  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00027a  eb020141          ADD      r1,r2,r1,LSL #1
00027e  7909              LDRB     r1,[r1,#4]
000280  4408              ADD      r0,r0,r1
000282  f1c00108          RSB      r1,r0,#8
000286  20ff              MOVS     r0,#0xff
000288  4108              ASRS     r0,r0,r1
00028a  4007              ANDS     r7,r7,r0
;;;358    						temp >>= (ptrPIDVars + i)->startBit;
00028c  ebc400c4          RSB      r0,r4,r4,LSL #3
000290  4960              LDR      r1,|L3.1044|
000292  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000294  eb010040          ADD      r0,r1,r0,LSL #1
000298  7900              LDRB     r0,[r0,#4]
00029a  4107              ASRS     r7,r7,r0
;;;359    						saveDate = temp;
00029c  2600              MOVS     r6,#0
00029e  463d              MOV      r5,r7
;;;360    						break;
0002a0  e052              B        |L3.840|
                  |L3.674|
;;;361    					}
;;;362    					temp &= (0xff>>(byteNum*8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)));
0002a2  ebc400c4          RSB      r0,r4,r4,LSL #3
0002a6  495b              LDR      r1,|L3.1044|
0002a8  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0002aa  eb010040          ADD      r0,r1,r0,LSL #1
0002ae  7940              LDRB     r0,[r0,#5]
0002b0  ebc401c4          RSB      r1,r4,r4,LSL #3
0002b4  4a57              LDR      r2,|L3.1044|
0002b6  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0002b8  eb020141          ADD      r1,r2,r1,LSL #1
0002bc  7909              LDRB     r1,[r1,#4]
0002be  4408              ADD      r0,r0,r1
0002c0  ebc001ca          RSB      r1,r0,r10,LSL #3
0002c4  20ff              MOVS     r0,#0xff
0002c6  4108              ASRS     r0,r0,r1
0002c8  4007              ANDS     r7,r7,r0
;;;363    					saveDate = temp;
0002ca  2600              MOVS     r6,#0
0002cc  463d              MOV      r5,r7
0002ce  e032              B        |L3.822|
                  |L3.720|
;;;364    				}else if(j == 0)
0002d0  f1b80f00          CMP      r8,#0
0002d4  d122              BNE      |L3.796|
;;;365    				{
;;;366    					saveDate <<= (8 - (ptrPIDVars + i)->startBit);
0002d6  ebc400c4          RSB      r0,r4,r4,LSL #3
0002da  494e              LDR      r1,|L3.1044|
0002dc  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0002de  eb010040          ADD      r0,r1,r0,LSL #1
0002e2  7900              LDRB     r0,[r0,#4]
0002e4  f1c00208          RSB      r2,r0,#8
0002e8  4628              MOV      r0,r5
0002ea  4631              MOV      r1,r6
0002ec  e9cd6507          STRD     r6,r5,[sp,#0x1c]
0002f0  f7fffffe          BL       __aeabi_llsl
0002f4  4605              MOV      r5,r0
0002f6  460e              MOV      r6,r1
;;;367    					temp = ptrData[ptrPIDVars->startByte + j];
0002f8  4846              LDR      r0,|L3.1044|
0002fa  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0002fc  78c0              LDRB     r0,[r0,#3]
0002fe  4440              ADD      r0,r0,r8
000300  f81b7000          LDRB     r7,[r11,r0]
;;;368    					temp >>= (ptrPIDVars + i)->startBit;
000304  ebc400c4          RSB      r0,r4,r4,LSL #3
000308  4942              LDR      r1,|L3.1044|
00030a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00030c  eb010040          ADD      r0,r1,r0,LSL #1
000310  7900              LDRB     r0,[r0,#4]
000312  4107              ASRS     r7,r7,r0
;;;369    					saveDate += temp;
000314  19ed              ADDS     r5,r5,r7
000316  f1460600          ADC      r6,r6,#0
00031a  e00c              B        |L3.822|
                  |L3.796|
;;;370    				}else
;;;371    				{
;;;372    					saveDate <<= 8;
00031c  0230              LSLS     r0,r6,#8
00031e  ea406615          ORR      r6,r0,r5,LSR #24
000322  022d              LSLS     r5,r5,#8
;;;373    					temp = ptrData[ptrPIDVars->startByte + j];
000324  483b              LDR      r0,|L3.1044|
000326  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
000328  78c0              LDRB     r0,[r0,#3]
00032a  4440              ADD      r0,r0,r8
00032c  f81b7000          LDRB     r7,[r11,r0]
;;;374    					saveDate += temp;
000330  19ed              ADDS     r5,r5,r7
000332  f1460600          ADC      r6,r6,#0
                  |L3.822|
;;;375    				}
;;;376    				if(j == 0)
000336  f1b80f00          CMP      r8,#0
00033a  d100              BNE      |L3.830|
;;;377    				{
;;;378    					break;
00033c  e004              B        |L3.840|
                  |L3.830|
;;;379    				}
;;;380    				j--;
00033e  f1a80001          SUB      r0,r8,#1
000342  f00008ff          AND      r8,r0,#0xff
;;;381    			}while(1);	
000346  e772              B        |L3.558|
                  |L3.840|
000348  bf00              NOP                            ;360
                  |L3.842|
;;;382    		}
;;;383    		switch((ptrPIDVars + i)->varId)
00034a  ebc400c4          RSB      r0,r4,r4,LSL #3
00034e  4931              LDR      r1,|L3.1044|
000350  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000352  eb010040          ADD      r0,r1,r0,LSL #1
000356  7880              LDRB     r0,[r0,#2]
000358  280c              CMP      r0,#0xc
00035a  d27c              BCS      |L3.1110|
00035c  e8dff000          TBB      [pc,r0]
000360  7b062e64          DCB      0x7b,0x06,0x2e,0x64
000364  96bef6f4          DCB      0x96,0xbe,0xf6,0xf4
000368  f3f2f1f0          DCB      0xf3,0xf2,0xf1,0xf0
;;;384    		{
;;;385    			case 1://计算车速
;;;386    				if(carAllRecord.carSpeedTemp != 1)
00036c  482a              LDR      r0,|L3.1048|
00036e  f8900031          LDRB     r0,[r0,#0x31]  ; carAllRecord
000372  2801              CMP      r0,#1
000374  d021              BEQ      |L3.954|
;;;387    					carAllRecord.carSpeed = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000376  4628              MOV      r0,r5
000378  4631              MOV      r1,r6
00037a  f7fffffe          BL       __aeabi_ul2f
00037e  9000              STR      r0,[sp,#0]
000380  ebc400c4          RSB      r0,r4,r4,LSL #3
000384  4a23              LDR      r2,|L3.1044|
000386  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000388  eb020040          ADD      r0,r2,r0,LSL #1
00038c  f8d01006          LDR      r1,[r0,#6]
000390  9800              LDR      r0,[sp,#0]
000392  f7fffffe          BL       __aeabi_fmul
000396  9001              STR      r0,[sp,#4]
000398  ebc400c4          RSB      r0,r4,r4,LSL #3
00039c  4a1d              LDR      r2,|L3.1044|
00039e  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0003a0  eb020040          ADD      r0,r2,r0,LSL #1
0003a4  f8d0100a          LDR      r1,[r0,#0xa]
0003a8  9801              LDR      r0,[sp,#4]
0003aa  f7fffffe          BL       __aeabi_fadd
0003ae  9002              STR      r0,[sp,#8]
0003b0  f7fffffe          BL       __aeabi_f2uiz
0003b4  4918              LDR      r1,|L3.1048|
0003b6  f8a1002f          STRH     r0,[r1,#0x2f]
                  |L3.954|
;;;388    				break;
0003ba  e277              B        |L3.2220|
;;;389    			case 2://转速
;;;390    				if(carAllRecord.engineSpeedTemp != 1)
0003bc  4816              LDR      r0,|L3.1048|
0003be  f8900034          LDRB     r0,[r0,#0x34]  ; carAllRecord
0003c2  2801              CMP      r0,#1
0003c4  d020              BEQ      |L3.1032|
;;;391    					carAllRecord.engineSpeed = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0003c6  4628              MOV      r0,r5
0003c8  4631              MOV      r1,r6
0003ca  f7fffffe          BL       __aeabi_ul2f
0003ce  9000              STR      r0,[sp,#0]
0003d0  ebc400c4          RSB      r0,r4,r4,LSL #3
0003d4  4a0f              LDR      r2,|L3.1044|
0003d6  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0003d8  eb020040          ADD      r0,r2,r0,LSL #1
0003dc  f8d01006          LDR      r1,[r0,#6]
0003e0  9800              LDR      r0,[sp,#0]
0003e2  f7fffffe          BL       __aeabi_fmul
0003e6  9001              STR      r0,[sp,#4]
0003e8  ebc400c4          RSB      r0,r4,r4,LSL #3
0003ec  4a09              LDR      r2,|L3.1044|
0003ee  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0003f0  eb020040          ADD      r0,r2,r0,LSL #1
0003f4  f8d0100a          LDR      r1,[r0,#0xa]
0003f8  9801              LDR      r0,[sp,#4]
0003fa  f7fffffe          BL       __aeabi_fadd
0003fe  9002              STR      r0,[sp,#8]
000400  f7fffffe          BL       __aeabi_f2uiz
000404  4904              LDR      r1,|L3.1048|
000406  8648              STRH     r0,[r1,#0x32]
                  |L3.1032|
;;;392    				if(carAllRecord.engineSpeed > carAllRecord.engineSpeedMax)//获得发动机最高转速
000408  4803              LDR      r0,|L3.1048|
00040a  8e40              LDRH     r0,[r0,#0x32]  ; carAllRecord
00040c  4902              LDR      r1,|L3.1048|
00040e  8c49              LDRH     r1,[r1,#0x22]  ; carAllRecord
000410  4288              CMP      r0,r1
000412  e003              B        |L3.1052|
                  |L3.1044|
                          DCD      ptrPIDVars
                  |L3.1048|
                          DCD      carAllRecord
                  |L3.1052|
00041c  dd03              BLE      |L3.1062|
;;;393    					carAllRecord.engineSpeedMax = carAllRecord.engineSpeed;
00041e  48fe              LDR      r0,|L3.2072|
000420  8e40              LDRH     r0,[r0,#0x32]  ; carAllRecord
000422  49fd              LDR      r1,|L3.2072|
000424  8448              STRH     r0,[r1,#0x22]
                  |L3.1062|
;;;394    				break;
000426  e241              B        |L3.2220|
;;;395    			case 3://总喷油量
;;;396    				if(carAllRecord.allFuelTemp != 1)
000428  48fb              LDR      r0,|L3.2072|
00042a  f8900039          LDRB     r0,[r0,#0x39]  ; carAllRecord
00042e  2801              CMP      r0,#1
000430  d02b              BEQ      |L3.1162|
;;;397    				{
;;;398    					carAllRecord.allFuel = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000432  4628              MOV      r0,r5
000434  4631              MOV      r1,r6
000436  f7fffffe          BL       __aeabi_ul2f
00043a  9000              STR      r0,[sp,#0]
00043c  ebc400c4          RSB      r0,r4,r4,LSL #3
000440  4af6              LDR      r2,|L3.2076|
000442  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000444  eb020040          ADD      r0,r2,r0,LSL #1
000448  f8d01006          LDR      r1,[r0,#6]
00044c  9800              LDR      r0,[sp,#0]
00044e  f7fffffe          BL       __aeabi_fmul
000452  9001              STR      r0,[sp,#4]
000454  e000              B        |L3.1112|
                  |L3.1110|
000456  e228              B        |L3.2218|
                  |L3.1112|
000458  ebc400c4          RSB      r0,r4,r4,LSL #3
00045c  4aef              LDR      r2,|L3.2076|
00045e  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000460  eb020040          ADD      r0,r2,r0,LSL #1
000464  f8d0100a          LDR      r1,[r0,#0xa]
000468  9801              LDR      r0,[sp,#4]
00046a  f7fffffe          BL       __aeabi_fadd
00046e  9002              STR      r0,[sp,#8]
000470  f7fffffe          BL       __aeabi_f2uiz
000474  b280              UXTH     r0,r0
000476  49e8              LDR      r1,|L3.2072|
000478  f8c10035          STR      r0,[r1,#0x35]  ; carAllRecord
;;;399    					carAllRecord.totalFuel += carAllRecord.allFuel;
00047c  4608              MOV      r0,r1
00047e  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000480  f8d11035          LDR      r1,[r1,#0x35]  ; carAllRecord
000484  4408              ADD      r0,r0,r1
000486  49e4              LDR      r1,|L3.2072|
000488  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
                  |L3.1162|
;;;400    				}break;
00048a  e20f              B        |L3.2220|
;;;401    			case 4://主喷油量
;;;402    				carAllRecord.primaryFuel = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
00048c  4628              MOV      r0,r5
00048e  4631              MOV      r1,r6
000490  f7fffffe          BL       __aeabi_ul2f
000494  9000              STR      r0,[sp,#0]
000496  ebc400c4          RSB      r0,r4,r4,LSL #3
00049a  4ae0              LDR      r2,|L3.2076|
00049c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00049e  eb020040          ADD      r0,r2,r0,LSL #1
0004a2  f8d01006          LDR      r1,[r0,#6]
0004a6  9800              LDR      r0,[sp,#0]
0004a8  f7fffffe          BL       __aeabi_fmul
0004ac  9001              STR      r0,[sp,#4]
0004ae  ebc400c4          RSB      r0,r4,r4,LSL #3
0004b2  4ada              LDR      r2,|L3.2076|
0004b4  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0004b6  eb020040          ADD      r0,r2,r0,LSL #1
0004ba  f8d0100a          LDR      r1,[r0,#0xa]
0004be  9801              LDR      r0,[sp,#4]
0004c0  f7fffffe          BL       __aeabi_fadd
0004c4  9002              STR      r0,[sp,#8]
0004c6  f7fffffe          BL       __aeabi_f2uiz
0004ca  49d3              LDR      r1,|L3.2072|
0004cc  8748              STRH     r0,[r1,#0x3a]
;;;403    				carAllRecord.totalFuel += carAllRecord.primaryFuel;
0004ce  4608              MOV      r0,r1
0004d0  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
0004d2  8f49              LDRH     r1,[r1,#0x3a]  ; carAllRecord
0004d4  4408              ADD      r0,r0,r1
0004d6  49d0              LDR      r1,|L3.2072|
0004d8  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;404    				break;
0004da  e1e7              B        |L3.2220|
;;;405    			case 5://预喷油量 1
;;;406    				carAllRecord.beforeFuel1 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0004dc  4628              MOV      r0,r5
0004de  4631              MOV      r1,r6
0004e0  f7fffffe          BL       __aeabi_ul2f
0004e4  9000              STR      r0,[sp,#0]
0004e6  ebc400c4          RSB      r0,r4,r4,LSL #3
0004ea  4acc              LDR      r2,|L3.2076|
0004ec  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0004ee  eb020040          ADD      r0,r2,r0,LSL #1
0004f2  f8d01006          LDR      r1,[r0,#6]
0004f6  9800              LDR      r0,[sp,#0]
0004f8  f7fffffe          BL       __aeabi_fmul
0004fc  9001              STR      r0,[sp,#4]
0004fe  ebc400c4          RSB      r0,r4,r4,LSL #3
000502  4ac6              LDR      r2,|L3.2076|
000504  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000506  eb020040          ADD      r0,r2,r0,LSL #1
00050a  f8d0100a          LDR      r1,[r0,#0xa]
00050e  9801              LDR      r0,[sp,#4]
000510  f7fffffe          BL       __aeabi_fadd
000514  9002              STR      r0,[sp,#8]
000516  f7fffffe          BL       __aeabi_f2uiz
00051a  49bf              LDR      r1,|L3.2072|
00051c  f8a1003f          STRH     r0,[r1,#0x3f]
;;;407    				carAllRecord.totalFuel += carAllRecord.beforeFuel1;
000520  4608              MOV      r0,r1
000522  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000524  f8b1103f          LDRH     r1,[r1,#0x3f]  ; carAllRecord
000528  4408              ADD      r0,r0,r1
00052a  49bb              LDR      r1,|L3.2072|
00052c  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;408    				allFuelCom +=carAllRecord.beforeFuel1;
00052e  4608              MOV      r0,r1
000530  f8b0003f          LDRH     r0,[r0,#0x3f]  ; carAllRecord
000534  49ba              LDR      r1,|L3.2080|
000536  6809              LDR      r1,[r1,#0]  ; allFuelCom
000538  4408              ADD      r0,r0,r1
00053a  49b9              LDR      r1,|L3.2080|
00053c  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;409    				break;
00053e  e1b5              B        |L3.2220|
000540  e0e6              B        |L3.1808|
000542  e0bb              B        |L3.1724|
000544  e090              B        |L3.1640|
000546  e065              B        |L3.1556|
000548  e032              B        |L3.1456|
00054a  e7ff              B        |L3.1356|
                  |L3.1356|
;;;410    			case 6://预喷油量 2
;;;411    				carAllRecord.beforeFuel2 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
00054c  4628              MOV      r0,r5
00054e  4631              MOV      r1,r6
000550  f7fffffe          BL       __aeabi_ul2f
000554  9000              STR      r0,[sp,#0]
000556  ebc400c4          RSB      r0,r4,r4,LSL #3
00055a  4ab0              LDR      r2,|L3.2076|
00055c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00055e  eb020040          ADD      r0,r2,r0,LSL #1
000562  f8d01006          LDR      r1,[r0,#6]
000566  9800              LDR      r0,[sp,#0]
000568  f7fffffe          BL       __aeabi_fmul
00056c  9001              STR      r0,[sp,#4]
00056e  ebc400c4          RSB      r0,r4,r4,LSL #3
000572  4aaa              LDR      r2,|L3.2076|
000574  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000576  eb020040          ADD      r0,r2,r0,LSL #1
00057a  f8d0100a          LDR      r1,[r0,#0xa]
00057e  9801              LDR      r0,[sp,#4]
000580  f7fffffe          BL       __aeabi_fadd
000584  9002              STR      r0,[sp,#8]
000586  f7fffffe          BL       __aeabi_f2uiz
00058a  49a3              LDR      r1,|L3.2072|
00058c  f8a10041          STRH     r0,[r1,#0x41]
;;;412    				carAllRecord.totalFuel += carAllRecord.beforeFuel2;
000590  4608              MOV      r0,r1
000592  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000594  f8b11041          LDRH     r1,[r1,#0x41]  ; carAllRecord
000598  4408              ADD      r0,r0,r1
00059a  499f              LDR      r1,|L3.2072|
00059c  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;413    				allFuelCom +=carAllRecord.beforeFuel2;
00059e  4608              MOV      r0,r1
0005a0  f8b00041          LDRH     r0,[r0,#0x41]  ; carAllRecord
0005a4  499e              LDR      r1,|L3.2080|
0005a6  6809              LDR      r1,[r1,#0]  ; allFuelCom
0005a8  4408              ADD      r0,r0,r1
0005aa  499d              LDR      r1,|L3.2080|
0005ac  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;414    				break;
0005ae  e17d              B        |L3.2220|
                  |L3.1456|
;;;415    			case 7://预喷油量 3
;;;416    				carAllRecord.beforeFuel3 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0005b0  4628              MOV      r0,r5
0005b2  4631              MOV      r1,r6
0005b4  f7fffffe          BL       __aeabi_ul2f
0005b8  9000              STR      r0,[sp,#0]
0005ba  ebc400c4          RSB      r0,r4,r4,LSL #3
0005be  4a97              LDR      r2,|L3.2076|
0005c0  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0005c2  eb020040          ADD      r0,r2,r0,LSL #1
0005c6  f8d01006          LDR      r1,[r0,#6]
0005ca  9800              LDR      r0,[sp,#0]
0005cc  f7fffffe          BL       __aeabi_fmul
0005d0  9001              STR      r0,[sp,#4]
0005d2  ebc400c4          RSB      r0,r4,r4,LSL #3
0005d6  4a91              LDR      r2,|L3.2076|
0005d8  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0005da  eb020040          ADD      r0,r2,r0,LSL #1
0005de  f8d0100a          LDR      r1,[r0,#0xa]
0005e2  9801              LDR      r0,[sp,#4]
0005e4  f7fffffe          BL       __aeabi_fadd
0005e8  9002              STR      r0,[sp,#8]
0005ea  f7fffffe          BL       __aeabi_f2uiz
0005ee  498a              LDR      r1,|L3.2072|
0005f0  f8a10043          STRH     r0,[r1,#0x43]
;;;417    				carAllRecord.totalFuel += carAllRecord.beforeFuel3;
0005f4  4608              MOV      r0,r1
0005f6  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
0005f8  f8b11043          LDRH     r1,[r1,#0x43]  ; carAllRecord
0005fc  4408              ADD      r0,r0,r1
0005fe  4986              LDR      r1,|L3.2072|
000600  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;418    				allFuelCom +=carAllRecord.beforeFuel3;
000602  4608              MOV      r0,r1
000604  f8b00043          LDRH     r0,[r0,#0x43]  ; carAllRecord
000608  4985              LDR      r1,|L3.2080|
00060a  6809              LDR      r1,[r1,#0]  ; allFuelCom
00060c  4408              ADD      r0,r0,r1
00060e  4984              LDR      r1,|L3.2080|
000610  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;419    				break;
000612  e14b              B        |L3.2220|
                  |L3.1556|
;;;420    			case 8://后喷油量 1
;;;421    				carAllRecord.afterFuel1 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000614  4628              MOV      r0,r5
000616  4631              MOV      r1,r6
000618  f7fffffe          BL       __aeabi_ul2f
00061c  9000              STR      r0,[sp,#0]
00061e  ebc400c4          RSB      r0,r4,r4,LSL #3
000622  4a7e              LDR      r2,|L3.2076|
000624  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000626  eb020040          ADD      r0,r2,r0,LSL #1
00062a  f8d01006          LDR      r1,[r0,#6]
00062e  9800              LDR      r0,[sp,#0]
000630  f7fffffe          BL       __aeabi_fmul
000634  9001              STR      r0,[sp,#4]
000636  ebc400c4          RSB      r0,r4,r4,LSL #3
00063a  4a78              LDR      r2,|L3.2076|
00063c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00063e  eb020040          ADD      r0,r2,r0,LSL #1
000642  f8d0100a          LDR      r1,[r0,#0xa]
000646  9801              LDR      r0,[sp,#4]
000648  f7fffffe          BL       __aeabi_fadd
00064c  9002              STR      r0,[sp,#8]
00064e  f7fffffe          BL       __aeabi_f2uiz
000652  4971              LDR      r1,|L3.2072|
000654  f8a10048          STRH     r0,[r1,#0x48]
;;;422    				carAllRecord.totalFuel += carAllRecord.afterFuel1;
000658  4608              MOV      r0,r1
00065a  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
00065c  f8b11048          LDRH     r1,[r1,#0x48]  ; carAllRecord
000660  4408              ADD      r0,r0,r1
000662  496d              LDR      r1,|L3.2072|
000664  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;423    				break;
000666  e121              B        |L3.2220|
                  |L3.1640|
;;;424    			case 9://后喷油量 2
;;;425    				carAllRecord.afterFuel2 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000668  4628              MOV      r0,r5
00066a  4631              MOV      r1,r6
00066c  f7fffffe          BL       __aeabi_ul2f
000670  9000              STR      r0,[sp,#0]
000672  ebc400c4          RSB      r0,r4,r4,LSL #3
000676  4a69              LDR      r2,|L3.2076|
000678  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00067a  eb020040          ADD      r0,r2,r0,LSL #1
00067e  f8d01006          LDR      r1,[r0,#6]
000682  9800              LDR      r0,[sp,#0]
000684  f7fffffe          BL       __aeabi_fmul
000688  9001              STR      r0,[sp,#4]
00068a  ebc400c4          RSB      r0,r4,r4,LSL #3
00068e  4a63              LDR      r2,|L3.2076|
000690  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000692  eb020040          ADD      r0,r2,r0,LSL #1
000696  f8d0100a          LDR      r1,[r0,#0xa]
00069a  9801              LDR      r0,[sp,#4]
00069c  f7fffffe          BL       __aeabi_fadd
0006a0  9002              STR      r0,[sp,#8]
0006a2  f7fffffe          BL       __aeabi_f2uiz
0006a6  495c              LDR      r1,|L3.2072|
0006a8  f8a1004a          STRH     r0,[r1,#0x4a]
;;;426    				carAllRecord.totalFuel += carAllRecord.afterFuel2;
0006ac  4608              MOV      r0,r1
0006ae  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
0006b0  f8b1104a          LDRH     r1,[r1,#0x4a]  ; carAllRecord
0006b4  4408              ADD      r0,r0,r1
0006b6  4958              LDR      r1,|L3.2072|
0006b8  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;427    				break;
0006ba  e0f7              B        |L3.2220|
                  |L3.1724|
;;;428    			case 10://后喷油量3
;;;429    				carAllRecord.afterFuel3 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0006bc  4628              MOV      r0,r5
0006be  4631              MOV      r1,r6
0006c0  f7fffffe          BL       __aeabi_ul2f
0006c4  9000              STR      r0,[sp,#0]
0006c6  ebc400c4          RSB      r0,r4,r4,LSL #3
0006ca  4a54              LDR      r2,|L3.2076|
0006cc  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0006ce  eb020040          ADD      r0,r2,r0,LSL #1
0006d2  f8d01006          LDR      r1,[r0,#6]
0006d6  9800              LDR      r0,[sp,#0]
0006d8  f7fffffe          BL       __aeabi_fmul
0006dc  9001              STR      r0,[sp,#4]
0006de  ebc400c4          RSB      r0,r4,r4,LSL #3
0006e2  4a4e              LDR      r2,|L3.2076|
0006e4  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0006e6  eb020040          ADD      r0,r2,r0,LSL #1
0006ea  f8d0100a          LDR      r1,[r0,#0xa]
0006ee  9801              LDR      r0,[sp,#4]
0006f0  f7fffffe          BL       __aeabi_fadd
0006f4  9002              STR      r0,[sp,#8]
0006f6  f7fffffe          BL       __aeabi_f2uiz
0006fa  4947              LDR      r1,|L3.2072|
0006fc  f8a1004c          STRH     r0,[r1,#0x4c]
;;;430    				carAllRecord.totalFuel += carAllRecord.afterFuel3;
000700  4608              MOV      r0,r1
000702  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000704  f8b1104c          LDRH     r1,[r1,#0x4c]  ; carAllRecord
000708  4408              ADD      r0,r0,r1
00070a  4943              LDR      r1,|L3.2072|
00070c  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;431    				break;
00070e  e0cd              B        |L3.2220|
                  |L3.1808|
;;;432    			case 11://当前喷油量
;;;433    				carAllRecord.curFuel    = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000710  4628              MOV      r0,r5
000712  4631              MOV      r1,r6
000714  f7fffffe          BL       __aeabi_ul2f
000718  9000              STR      r0,[sp,#0]
00071a  ebc400c4          RSB      r0,r4,r4,LSL #3
00071e  4a3f              LDR      r2,|L3.2076|
000720  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000722  eb020040          ADD      r0,r2,r0,LSL #1
000726  f8d01006          LDR      r1,[r0,#6]
00072a  9800              LDR      r0,[sp,#0]
00072c  f7fffffe          BL       __aeabi_fmul
000730  9001              STR      r0,[sp,#4]
000732  ebc400c4          RSB      r0,r4,r4,LSL #3
000736  4a39              LDR      r2,|L3.2076|
000738  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00073a  eb020040          ADD      r0,r2,r0,LSL #1
00073e  f8d0100a          LDR      r1,[r0,#0xa]
000742  9801              LDR      r0,[sp,#4]
000744  f7fffffe          BL       __aeabi_fadd
000748  9002              STR      r0,[sp,#8]
00074a  f7fffffe          BL       __aeabi_f2uiz
00074e  4932              LDR      r1,|L3.2072|
000750  f8a1004f          STRH     r0,[r1,#0x4f]
;;;434    				carAllRecord.totalFuel += carAllRecord.curFuel;
000754  4608              MOV      r0,r1
000756  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000758  f8b1104f          LDRH     r1,[r1,#0x4f]  ; carAllRecord
00075c  4408              ADD      r0,r0,r1
00075e  492e              LDR      r1,|L3.2072|
000760  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;435    				allFuelCom             += carAllRecord.curFuel;
000762  4608              MOV      r0,r1
000764  f8b0004f          LDRH     r0,[r0,#0x4f]  ; carAllRecord
000768  492d              LDR      r1,|L3.2080|
00076a  6809              LDR      r1,[r1,#0]  ; allFuelCom
00076c  4408              ADD      r0,r0,r1
00076e  492c              LDR      r1,|L3.2080|
000770  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;436    				curFuelTimes ++;
000772  482c              LDR      r0,|L3.2084|
000774  7800              LDRB     r0,[r0,#0]  ; curFuelTimes
000776  1c40              ADDS     r0,r0,#1
000778  492a              LDR      r1,|L3.2084|
00077a  7008              STRB     r0,[r1,#0]
;;;437    				if(curFuelTimes >= 4)//计算瞬时油耗  1s 的
00077c  4608              MOV      r0,r1
00077e  7800              LDRB     r0,[r0,#0]  ; curFuelTimes
000780  2804              CMP      r0,#4
000782  db7d              BLT      |L3.2176|
;;;438    				{
;;;439    					carAllRecord.instantFuel = allFuelCom * carAllRecord.engineSpeed / 7;
000784  4824              LDR      r0,|L3.2072|
000786  8e40              LDRH     r0,[r0,#0x32]  ; carAllRecord
000788  4925              LDR      r1,|L3.2080|
00078a  6809              LDR      r1,[r1,#0]  ; allFuelCom
00078c  4348              MULS     r0,r1,r0
00078e  2107              MOVS     r1,#7
000790  fbb0f0f1          UDIV     r0,r0,r1
000794  4920              LDR      r1,|L3.2072|
000796  f8a10052          STRH     r0,[r1,#0x52]
;;;440    					LogReport("\r\n60-oil:%d,r:%d;",allFuelCom,carAllRecord.engineSpeed);
00079a  4608              MOV      r0,r1
00079c  8e42              LDRH     r2,[r0,#0x32]  ; carAllRecord
00079e  4820              LDR      r0,|L3.2080|
0007a0  6801              LDR      r1,[r0,#0]  ; allFuelCom
0007a2  a021              ADR      r0,|L3.2088|
0007a4  f7fffffe          BL       LogReport
;;;441    					ptr = Mem_malloc(9);
0007a8  2009              MOVS     r0,#9
0007aa  f7fffffe          BL       Mem_malloc
0007ae  4681              MOV      r9,r0
;;;442    					
;;;443    					ptr[0] = 0x09;ptr[1] = 0x50;ptr[2] = 0x16;
0007b0  2009              MOVS     r0,#9
0007b2  f8890000          STRB     r0,[r9,#0]
0007b6  2050              MOVS     r0,#0x50
0007b8  f8890001          STRB     r0,[r9,#1]
0007bc  2016              MOVS     r0,#0x16
0007be  f8890002          STRB     r0,[r9,#2]
;;;444    					
;;;445    					temp1 = t_htons(carAllRecord.instantFuel);	 
0007c2  4915              LDR      r1,|L3.2072|
0007c4  f8b10052          LDRH     r0,[r1,#0x52]  ; carAllRecord
0007c8  f7fffffe          BL       t_htons
0007cc  9003              STR      r0,[sp,#0xc]
;;;446    					memcpy(&ptr[3],&temp1,2);
0007ce  f8bd000c          LDRH     r0,[sp,#0xc]
0007d2  f8a90003          STRH     r0,[r9,#3]
;;;447    					if(carAllRecord.carSpeed > 0)//todo: 需要确认单位
0007d6  4810              LDR      r0,|L3.2072|
0007d8  f8b0002f          LDRH     r0,[r0,#0x2f]  ; carAllRecord
0007dc  2800              CMP      r0,#0
0007de  dd06              BLE      |L3.2030|
;;;448    						temp1 = t_htons(carAllRecord.carSpeed);
0007e0  490d              LDR      r1,|L3.2072|
0007e2  f8b1002f          LDRH     r0,[r1,#0x2f]  ; carAllRecord
0007e6  f7fffffe          BL       t_htons
0007ea  9003              STR      r0,[sp,#0xc]
0007ec  e005              B        |L3.2042|
                  |L3.2030|
;;;449    					else 
;;;450    						temp1 = t_htons(gpsMC.speed);
0007ee  4913              LDR      r1,|L3.2108|
0007f0  f8b10069          LDRH     r0,[r1,#0x69]  ; gpsMC
0007f4  f7fffffe          BL       t_htons
0007f8  9003              STR      r0,[sp,#0xc]
                  |L3.2042|
;;;451    					memcpy(&ptr[5],&temp1,2);        //当前车速
0007fa  f8bd000c          LDRH     r0,[sp,#0xc]
0007fe  f8a90005          STRH     r0,[r9,#5]
;;;452    					temp1 = t_htons(carAllRecord.engineSpeed);
000802  4905              LDR      r1,|L3.2072|
000804  8e48              LDRH     r0,[r1,#0x32]  ; carAllRecord
000806  f7fffffe          BL       t_htons
00080a  9003              STR      r0,[sp,#0xc]
;;;453    					
;;;454    					memcpy(&ptr[7],&temp1,2);        //当前转速
00080c  f8bd000c          LDRH     r0,[sp,#0xc]
000810  e016              B        |L3.2112|
                  |L3.2066|
000812  e04f              B        |L3.2228|
                  |L3.2068|
000814  e04c              B        |L3.2224|
000816  0000              DCW      0x0000
                  |L3.2072|
                          DCD      carAllRecord
                  |L3.2076|
                          DCD      ptrPIDVars
                  |L3.2080|
                          DCD      allFuelCom
                  |L3.2084|
                          DCD      curFuelTimes
                  |L3.2088|
000828  0d0a3630          DCB      "\r\n60-oil:%d,r:%d;",0
00082c  2d6f696c
000830  3a25642c
000834  723a2564
000838  3b00    
00083a  00                DCB      0
00083b  00                DCB      0
                  |L3.2108|
                          DCD      gpsMC
                  |L3.2112|
000840  f8a90007          STRH     r0,[r9,#7]
;;;455    					
;;;456    					OSMutexPend(CDMASendMutex,0,&err);
000844  aa04              ADD      r2,sp,#0x10
000846  2100              MOVS     r1,#0
000848  481f              LDR      r0,|L3.2248|
00084a  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00084c  f7fffffe          BL       OSMutexPend
;;;457    					memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],ptr,ptr[0]);
000850  491e              LDR      r1,|L3.2252|
000852  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000854  6849              LDR      r1,[r1,#4]
000856  4b1d              LDR      r3,|L3.2252|
000858  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
00085a  881b              LDRH     r3,[r3,#0]
00085c  18c8              ADDS     r0,r1,r3
00085e  f8992000          LDRB     r2,[r9,#0]
000862  4649              MOV      r1,r9
000864  f7fffffe          BL       __aeabi_memcpy
;;;458    					cdmaDataToSend->datLength += ptr[0];
000868  4818              LDR      r0,|L3.2252|
00086a  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00086c  8800              LDRH     r0,[r0,#0]
00086e  f8991000          LDRB     r1,[r9,#0]
000872  4408              ADD      r0,r0,r1
000874  4915              LDR      r1,|L3.2252|
000876  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000878  8008              STRH     r0,[r1,#0]
;;;459    					OSMutexPost(CDMASendMutex);
00087a  4813              LDR      r0,|L3.2248|
00087c  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00087e  e000              B        |L3.2178|
                  |L3.2176|
000880  e012              B        |L3.2216|
                  |L3.2178|
000882  f7fffffe          BL       OSMutexPost
;;;460    					
;;;461    					Mem_free(ptr);
000886  4648              MOV      r0,r9
000888  f7fffffe          BL       Mem_free
;;;462    					
;;;463    					carAllRecord.totalFuel += carAllRecord.instantFuel;
00088c  4810              LDR      r0,|L3.2256|
00088e  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000890  490f              LDR      r1,|L3.2256|
000892  f8b11052          LDRH     r1,[r1,#0x52]  ; carAllRecord
000896  4408              ADD      r0,r0,r1
000898  490d              LDR      r1,|L3.2256|
00089a  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;464    					temp = 0;
00089c  2700              MOVS     r7,#0
;;;465    					allFuelCom   = 0;
00089e  2000              MOVS     r0,#0
0008a0  490c              LDR      r1,|L3.2260|
0008a2  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;466    					curFuelTimes = 0;
0008a4  490c              LDR      r1,|L3.2264|
0008a6  7008              STRB     r0,[r1,#0]
                  |L3.2216|
;;;467    				}
;;;468    				break;
0008a8  e000              B        |L3.2220|
                  |L3.2218|
;;;469    			default:break;
0008aa  bf00              NOP      
                  |L3.2220|
0008ac  bf00              NOP                            ;388
0008ae  bf00              NOP                            ;313
                  |L3.2224|
0008b0  1c60              ADDS     r0,r4,#1              ;310
0008b2  b2c4              UXTB     r4,r0                 ;310
                  |L3.2228|
0008b4  4809              LDR      r0,|L3.2268|
0008b6  f8b00084          LDRH     r0,[r0,#0x84]         ;310  ; varOperation
0008ba  42a0              CMP      r0,r4                 ;310
0008bc  f73fabab          BGT      |L3.22|
;;;470    		}
;;;471    	}
;;;472    }
0008c0  b00b              ADD      sp,sp,#0x2c
0008c2  e8bd8ff0          POP      {r4-r11,pc}
;;;473    
                          ENDP

0008c6  0000              DCW      0x0000
                  |L3.2248|
                          DCD      CDMASendMutex
                  |L3.2252|
                          DCD      cdmaDataToSend
                  |L3.2256|
                          DCD      carAllRecord
                  |L3.2260|
                          DCD      allFuelCom
                  |L3.2264|
                          DCD      curFuelTimes
                  |L3.2268|
                          DCD      varOperation

                          AREA ||i.TestServer||, CODE, READONLY, ALIGN=2

                  TestServer PROC
;;;121    
;;;122    void TestServer(void)//用服务器下发的ID、Baud等等进行CAN配置
000000  b57f              PUSH     {r0-r6,lr}
;;;123    {
;;;124    	uint8_t   err,temp;
;;;125    	CanRxMsg* CAN1_RxMsg;
;;;126    	CAN_InitTypeDef CAN_InitStructure;
;;;127    	
;;;128    	OSSemPend(LoginMes,0,&err);           //1394606080
000002  aa03              ADD      r2,sp,#0xc
000004  2100              MOVS     r1,#0
000006  486c              LDR      r0,|L4.440|
000008  6800              LDR      r0,[r0,#0]  ; LoginMes
00000a  f7fffffe          BL       OSSemPend
;;;129    	if((varOperation.pidVersion == 0xFFFFFFFF )||(varOperation.pidNum == 0xFFFF)||(varOperation.busType == 0xFF))
00000e  486b              LDR      r0,|L4.444|
000010  f8d0007a          LDR      r0,[r0,#0x7a]  ; varOperation
000014  1c40              ADDS     r0,r0,#1
000016  b158              CBZ      r0,|L4.48|
000018  4868              LDR      r0,|L4.444|
00001a  f8b00078          LDRH     r0,[r0,#0x78]  ; varOperation
00001e  f64f71ff          MOV      r1,#0xffff
000022  4288              CMP      r0,r1
000024  d004              BEQ      |L4.48|
000026  4865              LDR      r0,|L4.444|
000028  f8900086          LDRB     r0,[r0,#0x86]  ; varOperation
00002c  28ff              CMP      r0,#0xff
00002e  d109              BNE      |L4.68|
                  |L4.48|
;;;130    	{
;;;131    		varOperation.canTest = 0;
000030  2000              MOVS     r0,#0
000032  4962              LDR      r1,|L4.444|
000034  f8a10091          STRH     r0,[r1,#0x91]
;;;132    		LogReport("\r\n06-Unknown Equipment;");
000038  a061              ADR      r0,|L4.448|
00003a  f7fffffe          BL       LogReport
;;;133    		CANTestChannel();
00003e  f7fffffe          BL       CANTestChannel
                  |L4.66|
;;;134    		return;
;;;135    	}	
;;;136    	
;;;137    	if(varOperation.pidVersion == 0)
;;;138    	{
;;;139    		LogReport("\r\n07-ECUID don't Config:%d;",canDataConfig.pidVersion);
;;;140    		CANTestChannel();
;;;141    		return	;
;;;142    	}
;;;143    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能CAN1时钟
;;;144    	
;;;145    	varOperation.canTest = 2;             //Flash中的CAN配置成功
;;;146    	
;;;147    	CAN_DeInit(CAN1);  
;;;148    	CAN_StructInit(&CAN_InitStructure);
;;;149    	CAN1_BaudSet(canDataConfig.canBaud);  //先用flash中的CAN配置进行测试
;;;150    	CAN1_SetFilter(varOperation.canRxId ,CAN_ID_EXT); 
;;;151    	CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
;;;152    	
;;;153    	dataToSend.canId = canDataConfig.canTxId;
;;;154    	dataToSend.ide   = canDataConfig.canIdType;
;;;155    	dataToSend.pdat  = &configData[9];    //CAN PID 的第一包数据
;;;156    	
;;;157    	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
;;;158    	
;;;159    	CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
;;;160    	if(err == OS_ERR_NONE)
;;;161    	{
;;;162    		Mem_free(CAN1_RxMsg);
;;;163    		LogReport("\r\n08-ECUID Right:%d;",canDataConfig.pidVersion);//ECU有回应，配置文件正确
;;;164    		
;;;165    		dataToSend.ide   = canDataConfig.canIdType;
;;;166    		dataToSend.canId = canDataConfig.canTxId;
;;;167    		
;;;168    		temp = ReadECUVersion(canDataConfig.pidVerCmd);
;;;169    		if(temp < 100)                  //读取ECU版本号，读取不成功则不进行动力提升
;;;170    		{
;;;171    			Get_Q_FromECU();            //读取喷油量的原始值，得到当前车辆系数
;;;172    		
;;;173    			CAN_DeInit(CAN1);
;;;174    			CAN_StructInit(&CAN_InitStructure);
;;;175    			CAN1_BaudSet(canDataConfig.canBaud);  
;;;176    			CAN1_SetFilter(varOperation.canRxId ,CAN_ID_EXT);
;;;177    			CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
;;;178    			OSTimeDlyHMSM(0,0,20,0);    //等待 20s 读取故障码，若不等待的话，读出来都是拒绝应答
;;;179    			
;;;180    			CAN_DeInit(CAN1);  
;;;181    			CAN_StructInit(&CAN_InitStructure);
;;;182    			CAN1_BaudSet(canDataConfig.canBaud);   
;;;183    			CAN1_ClearFilter();                    
;;;184    			CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
;;;185    			varOperation.canTest = 2;  //启动CAN，开始与ECU进行数据交互
;;;186    		}
;;;187    		else if(temp == 200)           //读取版本号失败（ 配置文件有误 ）
;;;188    		{
;;;189    			CAN_DeInit(CAN1);  
;;;190    			CAN_StructInit(&CAN_InitStructure);
;;;191    			CAN1_BaudSet(canDataConfig.canBaud);   
;;;192    			CAN1_ClearFilter();                    
;;;193    			CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
;;;194    			varOperation.canTest = 2; 
;;;195    			CANTestChannel();
;;;196    		}
;;;197    		else//版本号读取出来了，但是不能提升动力，那就正常跑吧
;;;198    		{
;;;199    			OSTimeDlyHMSM(0,0,20,0);   //读取故障码是需要时间的
;;;200    		}
;;;201    	}
;;;202    	else
;;;203    	{
;;;204    		LogReport("\r\n09-ECUID Error:%d!",canDataConfig.pidVersion);
;;;205    		CANTestChannel();
;;;206    	}	
;;;207    }
000042  bd7f              POP      {r0-r6,pc}
                  |L4.68|
000044  485d              LDR      r0,|L4.444|
000046  f8d0007a          LDR      r0,[r0,#0x7a]         ;137  ; varOperation
00004a  b938              CBNZ     r0,|L4.92|
00004c  4862              LDR      r0,|L4.472|
00004e  6801              LDR      r1,[r0,#0]            ;139  ; canDataConfig
000050  a062              ADR      r0,|L4.476|
000052  f7fffffe          BL       LogReport
000056  f7fffffe          BL       CANTestChannel
00005a  e7f2              B        |L4.66|
                  |L4.92|
00005c  2101              MOVS     r1,#1                 ;143
00005e  0648              LSLS     r0,r1,#25             ;143
000060  f7fffffe          BL       RCC_APB1PeriphClockCmd
000064  2002              MOVS     r0,#2                 ;145
000066  4955              LDR      r1,|L4.444|
000068  f8a10091          STRH     r0,[r1,#0x91]         ;145
00006c  4862              LDR      r0,|L4.504|
00006e  f7fffffe          BL       CAN_DeInit
000072  4668              MOV      r0,sp                 ;148
000074  f7fffffe          BL       CAN_StructInit
000078  4957              LDR      r1,|L4.472|
00007a  7c88              LDRB     r0,[r1,#0x12]         ;149  ; canDataConfig
00007c  f7fffffe          BL       CAN1_BaudSet
000080  494e              LDR      r1,|L4.444|
000082  f8d1008c          LDR      r0,[r1,#0x8c]         ;150  ; varOperation
000086  2104              MOVS     r1,#4                 ;150
000088  f7fffffe          BL       CAN1_SetFilter
00008c  2201              MOVS     r2,#1                 ;151
00008e  2110              MOVS     r1,#0x10              ;151
000090  4859              LDR      r0,|L4.504|
000092  f7fffffe          BL       CAN_ITConfig
000096  4850              LDR      r0,|L4.472|
000098  f8d0000a          LDR      r0,[r0,#0xa]          ;153  ; canDataConfig
00009c  4957              LDR      r1,|L4.508|
00009e  6008              STR      r0,[r1,#0]            ;153  ; dataToSend
0000a0  484d              LDR      r0,|L4.472|
0000a2  7a40              LDRB     r0,[r0,#9]            ;154  ; canDataConfig
0000a4  6048              STR      r0,[r1,#4]            ;154  ; dataToSend
0000a6  4856              LDR      r0,|L4.512|
0000a8  6088              STR      r0,[r1,#8]            ;155  ; dataToSend
0000aa  460b              MOV      r3,r1                 ;157
0000ac  689a              LDR      r2,[r3,#8]            ;157  ; dataToSend
0000ae  6859              LDR      r1,[r3,#4]            ;157  ; dataToSend
0000b0  6818              LDR      r0,[r3,#0]            ;157  ; dataToSend
0000b2  f7fffffe          BL       OBD_CAN_SendData
0000b6  aa03              ADD      r2,sp,#0xc            ;159
0000b8  f44f71fa          MOV      r1,#0x1f4             ;159
0000bc  4851              LDR      r0,|L4.516|
0000be  6800              LDR      r0,[r0,#0]            ;159  ; canRecieveQ
0000c0  f7fffffe          BL       OSQPend
0000c4  4605              MOV      r5,r0                 ;159
0000c6  f89d000c          LDRB     r0,[sp,#0xc]          ;160
0000ca  2800              CMP      r0,#0                 ;160
0000cc  d16a              BNE      |L4.420|
0000ce  4628              MOV      r0,r5                 ;162
0000d0  f7fffffe          BL       Mem_free
0000d4  4840              LDR      r0,|L4.472|
0000d6  6801              LDR      r1,[r0,#0]            ;163  ; canDataConfig
0000d8  a04b              ADR      r0,|L4.520|
0000da  f7fffffe          BL       LogReport
0000de  483e              LDR      r0,|L4.472|
0000e0  7a40              LDRB     r0,[r0,#9]            ;165  ; canDataConfig
0000e2  4946              LDR      r1,|L4.508|
0000e4  6048              STR      r0,[r1,#4]            ;165  ; dataToSend
0000e6  483c              LDR      r0,|L4.472|
0000e8  f8d0000a          LDR      r0,[r0,#0xa]          ;166  ; canDataConfig
0000ec  6008              STR      r0,[r1,#0]            ;166  ; dataToSend
0000ee  483a              LDR      r0,|L4.472|
0000f0  3013              ADDS     r0,r0,#0x13           ;168
0000f2  f7fffffe          BL       ReadECUVersion
0000f6  4604              MOV      r4,r0                 ;168
0000f8  2c64              CMP      r4,#0x64              ;169
0000fa  da32              BGE      |L4.354|
0000fc  f7fffffe          BL       Get_Q_FromECU
000100  483d              LDR      r0,|L4.504|
000102  f7fffffe          BL       CAN_DeInit
000106  4668              MOV      r0,sp                 ;174
000108  f7fffffe          BL       CAN_StructInit
00010c  4932              LDR      r1,|L4.472|
00010e  7c88              LDRB     r0,[r1,#0x12]         ;175  ; canDataConfig
000110  f7fffffe          BL       CAN1_BaudSet
000114  4929              LDR      r1,|L4.444|
000116  f8d1008c          LDR      r0,[r1,#0x8c]         ;176  ; varOperation
00011a  2104              MOVS     r1,#4                 ;176
00011c  f7fffffe          BL       CAN1_SetFilter
000120  2201              MOVS     r2,#1                 ;177
000122  2110              MOVS     r1,#0x10              ;177
000124  4834              LDR      r0,|L4.504|
000126  f7fffffe          BL       CAN_ITConfig
00012a  2300              MOVS     r3,#0                 ;178
00012c  2214              MOVS     r2,#0x14              ;178
00012e  4619              MOV      r1,r3                 ;178
000130  4618              MOV      r0,r3                 ;178
000132  f7fffffe          BL       OSTimeDlyHMSM
000136  4830              LDR      r0,|L4.504|
000138  f7fffffe          BL       CAN_DeInit
00013c  4668              MOV      r0,sp                 ;181
00013e  f7fffffe          BL       CAN_StructInit
000142  4925              LDR      r1,|L4.472|
000144  7c88              LDRB     r0,[r1,#0x12]         ;182  ; canDataConfig
000146  f7fffffe          BL       CAN1_BaudSet
00014a  f7fffffe          BL       CAN1_ClearFilter
00014e  2201              MOVS     r2,#1                 ;184
000150  2110              MOVS     r1,#0x10              ;184
000152  4829              LDR      r0,|L4.504|
000154  f7fffffe          BL       CAN_ITConfig
000158  2002              MOVS     r0,#2                 ;185
00015a  4918              LDR      r1,|L4.444|
00015c  f8a10091          STRH     r0,[r1,#0x91]         ;185
000160  e027              B        |L4.434|
                  |L4.354|
000162  2cc8              CMP      r4,#0xc8              ;187
000164  d117              BNE      |L4.406|
000166  4824              LDR      r0,|L4.504|
000168  f7fffffe          BL       CAN_DeInit
00016c  4668              MOV      r0,sp                 ;190
00016e  f7fffffe          BL       CAN_StructInit
000172  4919              LDR      r1,|L4.472|
000174  7c88              LDRB     r0,[r1,#0x12]         ;191  ; canDataConfig
000176  f7fffffe          BL       CAN1_BaudSet
00017a  f7fffffe          BL       CAN1_ClearFilter
00017e  2201              MOVS     r2,#1                 ;193
000180  2110              MOVS     r1,#0x10              ;193
000182  481d              LDR      r0,|L4.504|
000184  f7fffffe          BL       CAN_ITConfig
000188  2002              MOVS     r0,#2                 ;194
00018a  490c              LDR      r1,|L4.444|
00018c  f8a10091          STRH     r0,[r1,#0x91]         ;194
000190  f7fffffe          BL       CANTestChannel
000194  e00d              B        |L4.434|
                  |L4.406|
000196  2300              MOVS     r3,#0                 ;199
000198  2214              MOVS     r2,#0x14              ;199
00019a  4619              MOV      r1,r3                 ;199
00019c  4618              MOV      r0,r3                 ;199
00019e  f7fffffe          BL       OSTimeDlyHMSM
0001a2  e006              B        |L4.434|
                  |L4.420|
0001a4  480c              LDR      r0,|L4.472|
0001a6  6801              LDR      r1,[r0,#0]            ;204  ; canDataConfig
0001a8  a01d              ADR      r0,|L4.544|
0001aa  f7fffffe          BL       LogReport
0001ae  f7fffffe          BL       CANTestChannel
                  |L4.434|
0001b2  bf00              NOP      
0001b4  e745              B        |L4.66|
;;;208    
                          ENDP

0001b6  0000              DCW      0x0000
                  |L4.440|
                          DCD      LoginMes
                  |L4.444|
                          DCD      varOperation
                  |L4.448|
0001c0  0d0a3036          DCB      "\r\n06-Unknown Equipment;",0
0001c4  2d556e6b
0001c8  6e6f776e
0001cc  20457175
0001d0  69706d65
0001d4  6e743b00
                  |L4.472|
                          DCD      canDataConfig
                  |L4.476|
0001dc  0d0a3037          DCB      "\r\n07-ECUID don't Config:%d;",0
0001e0  2d454355
0001e4  49442064
0001e8  6f6e2774
0001ec  20436f6e
0001f0  6669673a
0001f4  25643b00
                  |L4.504|
                          DCD      0x40006400
                  |L4.508|
                          DCD      dataToSend
                  |L4.512|
                          DCD      configData+0x9
                  |L4.516|
                          DCD      canRecieveQ
                  |L4.520|
000208  0d0a3038          DCB      "\r\n08-ECUID Right:%d;",0
00020c  2d454355
000210  49442052
000214  69676874
000218  3a25643b
00021c  00      
00021d  00                DCB      0
00021e  00                DCB      0
00021f  00                DCB      0
                  |L4.544|
000220  0d0a3039          DCB      "\r\n09-ECUID Error:%d!",0
000224  2d454355
000228  49442045
00022c  72726f72
000230  3a256421
000234  00      
000235  00                DCB      0
000236  00                DCB      0
000237  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  dataToSend
                          %        12

                          AREA ||.data||, DATA, ALIGN=2

                  pidManyBag
000000  30000000          DCB      0x30,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  curFuelTimes
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  allFuelCom
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\OBD\\OBDTask.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REV16|
#line 465 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.2.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_OBDTask_c_bbcd6d9f____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REVSH|
#line 480
|__asm___9_OBDTask_c_bbcd6d9f____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____RRX|
#line 667
|__asm___9_OBDTask_c_bbcd6d9f____RRX| PROC
#line 668

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
