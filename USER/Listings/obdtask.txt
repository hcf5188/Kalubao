; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\obdtask.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\obdtask.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\obdtask.crf ..\OBD\OBDTask.c]
                          THUMB

                          AREA ||i.CANTestChannel||, CODE, READONLY, ALIGN=2

                  CANTestChannel PROC
;;;269    //服务器的配置文件出错，或者还没进行配置，系统进入自识别，识别成功则将信息上报
;;;270    void CANTestChannel(void)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;271    {
;;;272    	uint8_t   err,i,temp;
;;;273    	CanRxMsg* CAN1_RxMsg;
;;;274    	uint8_t*  ptrOK;
;;;275    	CAN_InitTypeDef CAN_InitStructure;
;;;276    	
;;;277    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能 CAN1 时钟
000004  2101              MOVS     r1,#1
000006  0648              LSLS     r0,r1,#25
000008  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;278    	varOperation.canTest = 0;
00000c  2000              MOVS     r0,#0
00000e  49e6              LDR      r1,|L1.936|
000010  f8a10091          STRH     r0,[r1,#0x91]
;;;279    	for(i = 0;i<NUMOfCANBaud;i++)       //获得 CAN 的波特率
000014  2500              MOVS     r5,#0
000016  e02a              B        |L1.110|
                  |L1.24|
;;;280    	{
;;;281    		CAN_DeInit(CAN1);
000018  48e4              LDR      r0,|L1.940|
00001a  f7fffffe          BL       CAN_DeInit
;;;282    		CAN_StructInit(&CAN_InitStructure);
00001e  4668              MOV      r0,sp
000020  f7fffffe          BL       CAN_StructInit
;;;283    		CAN1_BaudSet(canBaudEnum[i]); 
000024  49e2              LDR      r1,|L1.944|
000026  5d48              LDRB     r0,[r1,r5]
000028  f7fffffe          BL       CAN1_BaudSet
;;;284    		CAN1_ClearFilter();
00002c  f7fffffe          BL       CAN1_ClearFilter
;;;285    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
000030  2201              MOVS     r2,#1
000032  2110              MOVS     r1,#0x10
000034  48dd              LDR      r0,|L1.940|
000036  f7fffffe          BL       CAN_ITConfig
;;;286    		
;;;287    		//只要此波特率下有数据，CAN波特率就确定了
;;;288    		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
00003a  aa03              ADD      r2,sp,#0xc
00003c  f44f71fa          MOV      r1,#0x1f4
000040  48dc              LDR      r0,|L1.948|
000042  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000044  f7fffffe          BL       OSQPend
000048  4607              MOV      r7,r0
;;;289    		if(err == OS_ERR_NONE)
00004a  f89d000c          LDRB     r0,[sp,#0xc]
00004e  b960              CBNZ     r0,|L1.106|
;;;290    		{
;;;291    			canDataConfig.canBaud = canBaudEnum[i];
000050  48d7              LDR      r0,|L1.944|
000052  5d40              LDRB     r0,[r0,r5]
000054  49d8              LDR      r1,|L1.952|
000056  7488              STRB     r0,[r1,#0x12]
;;;292    			Mem_free(CAN1_RxMsg);
000058  4638              MOV      r0,r7
00005a  f7fffffe          BL       Mem_free
;;;293    			LogReport("\r\n10-Test Baud:%d;",canDataConfig.canBaud);
00005e  48d6              LDR      r0,|L1.952|
000060  7c81              LDRB     r1,[r0,#0x12]  ; canDataConfig
000062  a0d6              ADR      r0,|L1.956|
000064  f7fffffe          BL       LogReport
;;;294    			break;
000068  e003              B        |L1.114|
                  |L1.106|
00006a  1c68              ADDS     r0,r5,#1              ;279
00006c  b2c5              UXTB     r5,r0                 ;279
                  |L1.110|
00006e  2d03              CMP      r5,#3                 ;279
000070  dbd2              BLT      |L1.24|
                  |L1.114|
000072  bf00              NOP      
;;;295    		}
;;;296    	}   //如果波特率没有确定就上报日志并退出
;;;297    	if((i >= NUMOfCANBaud) && (err != OS_ERR_NONE))
000074  2d03              CMP      r5,#3
000076  db43              BLT      |L1.256|
000078  f89d000c          LDRB     r0,[sp,#0xc]
00007c  2800              CMP      r0,#0
00007e  d03f              BEQ      |L1.256|
;;;298    	{
;;;299    		LogReport("\r\n11-Baud Test Fail!");
000080  a0d3              ADR      r0,|L1.976|
000082  f7fffffe          BL       LogReport
;;;300    		
;;;301    		ptrOK = Mem_malloc(10);
000086  200a              MOVS     r0,#0xa
000088  f7fffffe          BL       Mem_malloc
00008c  4604              MOV      r4,r0
;;;302    		ptrOK[0] = 3;
00008e  2103              MOVS     r1,#3
000090  7021              STRB     r1,[r4,#0]
;;;303    		ptrOK[1] = 0x50;
000092  2150              MOVS     r1,#0x50
000094  7061              STRB     r1,[r4,#1]
;;;304    		ptrOK[2] = 0x20;
000096  2120              MOVS     r1,#0x20
000098  70a1              STRB     r1,[r4,#2]
;;;305    		if(varOperation.isDataFlow != 1)
00009a  48c3              LDR      r0,|L1.936|
00009c  f890002d          LDRB     r0,[r0,#0x2d]  ; varOperation
0000a0  2801              CMP      r0,#1
0000a2  d025              BEQ      |L1.240|
;;;306    		{
;;;307    			OSMutexPend(CDMASendMutex,0,&err);
0000a4  aa03              ADD      r2,sp,#0xc
0000a6  2100              MOVS     r1,#0
0000a8  48cf              LDR      r0,|L1.1000|
0000aa  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0000ac  f7fffffe          BL       OSMutexPend
;;;308    			memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrOK,ptrOK[0]);
0000b0  49ce              LDR      r1,|L1.1004|
0000b2  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0000b4  684b              LDR      r3,[r1,#4]
0000b6  49bc              LDR      r1,|L1.936|
0000b8  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
0000bc  311b              ADDS     r1,r1,#0x1b
0000be  1858              ADDS     r0,r3,r1
0000c0  7822              LDRB     r2,[r4,#0]
0000c2  4621              MOV      r1,r4
0000c4  f7fffffe          BL       __aeabi_memcpy
;;;309    			cdmaDataToSend->datLength += ptrOK[0];
0000c8  48c8              LDR      r0,|L1.1004|
0000ca  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0000cc  8800              LDRH     r0,[r0,#0]
0000ce  7821              LDRB     r1,[r4,#0]
0000d0  4408              ADD      r0,r0,r1
0000d2  49c6              LDR      r1,|L1.1004|
0000d4  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0000d6  8008              STRH     r0,[r1,#0]
;;;310    			varOperation.datOKLeng    += ptrOK[0];
0000d8  48b3              LDR      r0,|L1.936|
0000da  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
0000de  7821              LDRB     r1,[r4,#0]
0000e0  4408              ADD      r0,r0,r1
0000e2  49b1              LDR      r1,|L1.936|
0000e4  f8a10096          STRH     r0,[r1,#0x96]
;;;311    			OSMutexPost(CDMASendMutex);
0000e8  48bf              LDR      r0,|L1.1000|
0000ea  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0000ec  f7fffffe          BL       OSMutexPost
                  |L1.240|
;;;312    		}
;;;313    		Mem_free(ptrOK);
0000f0  4620              MOV      r0,r4
0000f2  f7fffffe          BL       Mem_free
;;;314    		varOperation.canTest = 0;
0000f6  2000              MOVS     r0,#0
0000f8  49ab              LDR      r1,|L1.936|
0000fa  f8a10091          STRH     r0,[r1,#0x91]
;;;315    		
;;;316    		goto idOK;
0000fe  e14b              B        |L1.920|
                  |L1.256|
;;;317    	}
;;;318    	dataToSend.ide = CAN_ID_EXT;
000100  2004              MOVS     r0,#4
000102  49bb              LDR      r1,|L1.1008|
000104  6048              STR      r0,[r1,#4]  ; dataToSend
;;;319    	for(i=0;i<NUMOfCANID_EXT;i++)
000106  2500              MOVS     r5,#0
000108  e0fb              B        |L1.770|
                  |L1.266|
;;;320    	{
;;;321    		varOperation.canRxId  =(canIdExt[i].canID >> 24) & 0x000000FF;
00010a  eb050045          ADD      r0,r5,r5,LSL #1
00010e  49b9              LDR      r1,|L1.1012|
000110  f8510020          LDR      r0,[r1,r0,LSL #2]
000114  0e00              LSRS     r0,r0,#24
000116  49a4              LDR      r1,|L1.936|
000118  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;322    		varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i].canID >> 16) & 0x000000FF);
00011c  eb050045          ADD      r0,r5,r5,LSL #1
000120  49b4              LDR      r1,|L1.1012|
000122  f8510020          LDR      r0,[r1,r0,LSL #2]
000126  f3c04007          UBFX     r0,r0,#16,#8
00012a  499f              LDR      r1,|L1.936|
00012c  f8d1108c          LDR      r1,[r1,#0x8c]  ; varOperation
000130  eb002001          ADD      r0,r0,r1,LSL #8
000134  499c              LDR      r1,|L1.936|
000136  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;323    		varOperation.canRxId  =(varOperation.canRxId  << 8)+(canIdExt[i].canID & 0x000000FF);
00013a  4608              MOV      r0,r1
00013c  f8d0108c          LDR      r1,[r0,#0x8c]  ; varOperation
000140  eb050045          ADD      r0,r5,r5,LSL #1
000144  4aab              LDR      r2,|L1.1012|
000146  f8520020          LDR      r0,[r2,r0,LSL #2]
00014a  f361201f          BFI      r0,r1,#8,#24
00014e  4996              LDR      r1,|L1.936|
000150  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;324    		varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i].canID >> 8) & 0x000000FF);
000154  eb050045          ADD      r0,r5,r5,LSL #1
000158  4611              MOV      r1,r2
00015a  f8310020          LDRH     r0,[r1,r0,LSL #2]
00015e  f3c02007          UBFX     r0,r0,#8,#8
000162  4991              LDR      r1,|L1.936|
000164  f8d1108c          LDR      r1,[r1,#0x8c]  ; varOperation
000168  eb002001          ADD      r0,r0,r1,LSL #8
00016c  498e              LDR      r1,|L1.936|
00016e  f8c1008c          STR      r0,[r1,#0x8c]  ; varOperation
;;;325    		
;;;326    		CAN_DeInit(CAN1);
000172  488e              LDR      r0,|L1.940|
000174  f7fffffe          BL       CAN_DeInit
;;;327    		CAN_StructInit(&CAN_InitStructure);
000178  4668              MOV      r0,sp
00017a  f7fffffe          BL       CAN_StructInit
;;;328    		CAN1_BaudSet(canDataConfig.canBaud);
00017e  498e              LDR      r1,|L1.952|
000180  7c88              LDRB     r0,[r1,#0x12]  ; canDataConfig
000182  f7fffffe          BL       CAN1_BaudSet
;;;329    		CAN1_SetFilter(varOperation.canRxId ,CAN_ID_EXT);
000186  4988              LDR      r1,|L1.936|
000188  f8d1008c          LDR      r0,[r1,#0x8c]  ; varOperation
00018c  2104              MOVS     r1,#4
00018e  f7fffffe          BL       CAN1_SetFilter
;;;330    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
000192  2201              MOVS     r2,#1
000194  2110              MOVS     r1,#0x10
000196  4885              LDR      r0,|L1.940|
000198  f7fffffe          BL       CAN_ITConfig
;;;331    		
;;;332    		varOperation.canTest = 0;
00019c  2000              MOVS     r0,#0
00019e  4982              LDR      r1,|L1.936|
0001a0  f8a10091          STRH     r0,[r1,#0x91]
;;;333    		dataToSend.canId = canIdExt[i].canID;
0001a4  eb050045          ADD      r0,r5,r5,LSL #1
0001a8  4992              LDR      r1,|L1.1012|
0001aa  f8510020          LDR      r0,[r1,r0,LSL #2]
0001ae  4990              LDR      r1,|L1.1008|
0001b0  6008              STR      r0,[r1,#0]  ; dataToSend
;;;334    		dataToSend.ide     = CAN_ID_EXT;
0001b2  2004              MOVS     r0,#4
0001b4  6048              STR      r0,[r1,#4]  ; dataToSend
;;;335    		temp = ReadECUVersion((uint8_t *)canIdExt[i].pidVerCmd); 
0001b6  eb050145          ADD      r1,r5,r5,LSL #1
0001ba  4a8e              LDR      r2,|L1.1012|
0001bc  eb020181          ADD      r1,r2,r1,LSL #2
0001c0  1d08              ADDS     r0,r1,#4
0001c2  f7fffffe          BL       ReadECUVersion
0001c6  4606              MOV      r6,r0
;;;336    	    if(temp != 200)                       //版本号读取成功
0001c8  2ec8              CMP      r6,#0xc8
0001ca  d07c              BEQ      |L1.710|
;;;337    		{
;;;338    			i=0;
0001cc  2500              MOVS     r5,#0
;;;339    			ptrOK = Mem_malloc(60);
0001ce  203c              MOVS     r0,#0x3c
0001d0  f7fffffe          BL       Mem_malloc
0001d4  4604              MOV      r4,r0
;;;340    			ptrOK[i++] = 32;
0001d6  2220              MOVS     r2,#0x20
0001d8  4629              MOV      r1,r5
0001da  1c6d              ADDS     r5,r5,#1
0001dc  5462              STRB     r2,[r4,r1]
;;;341    			ptrOK[i++] = 0x50;
0001de  2250              MOVS     r2,#0x50
0001e0  4629              MOV      r1,r5
0001e2  1c6d              ADDS     r5,r5,#1
0001e4  5462              STRB     r2,[r4,r1]
;;;342    			ptrOK[i++] = 0x13;
0001e6  2213              MOVS     r2,#0x13
0001e8  4629              MOV      r1,r5
0001ea  1c6d              ADDS     r5,r5,#1
0001ec  5462              STRB     r2,[r4,r1]
;;;343    			ptrOK[i++] = canDataConfig.canBaud;
0001ee  4872              LDR      r0,|L1.952|
0001f0  7c82              LDRB     r2,[r0,#0x12]  ; canDataConfig
0001f2  4629              MOV      r1,r5
0001f4  1c6d              ADDS     r5,r5,#1
0001f6  5462              STRB     r2,[r4,r1]
;;;344    			ptrOK[i++] = (varOperation.canRxId>>24) & 0x000000FF;ptrOK[i++] = (varOperation.canRxId>>16) & 0x000000FF;
0001f8  486b              LDR      r0,|L1.936|
0001fa  f8d0008c          LDR      r0,[r0,#0x8c]  ; varOperation
0001fe  0e01              LSRS     r1,r0,#24
000200  462a              MOV      r2,r5
000202  1c6d              ADDS     r5,r5,#1
000204  54a1              STRB     r1,[r4,r2]
000206  4868              LDR      r0,|L1.936|
000208  f8d0008c          LDR      r0,[r0,#0x8c]  ; varOperation
00020c  f3c04207          UBFX     r2,r0,#16,#8
000210  4629              MOV      r1,r5
000212  1c6d              ADDS     r5,r5,#1
000214  5462              STRB     r2,[r4,r1]
;;;345    			ptrOK[i++] = (varOperation.canRxId>>8) & 0x000000FF;ptrOK[i++] = (varOperation.canRxId>>0) & 0x000000FF;
000216  4864              LDR      r0,|L1.936|
000218  f8b0008c          LDRH     r0,[r0,#0x8c]  ; varOperation
00021c  f3c02207          UBFX     r2,r0,#8,#8
000220  4629              MOV      r1,r5
000222  1c6d              ADDS     r5,r5,#1
000224  5462              STRB     r2,[r4,r1]
000226  4860              LDR      r0,|L1.936|
000228  f890208c          LDRB     r2,[r0,#0x8c]  ; varOperation
00022c  4628              MOV      r0,r5
00022e  1c69              ADDS     r1,r5,#1
000230  b2cd              UXTB     r5,r1
000232  5422              STRB     r2,[r4,r0]
;;;346    			ptrOK[i++] = (dataToSend.canId>>24) & 0x000000FF;ptrOK[i++] = (dataToSend.canId>>16) & 0x000000FF;
000234  486e              LDR      r0,|L1.1008|
000236  6800              LDR      r0,[r0,#0]  ; dataToSend
000238  0e00              LSRS     r0,r0,#24
00023a  4629              MOV      r1,r5
00023c  1c6a              ADDS     r2,r5,#1
00023e  b2d5              UXTB     r5,r2
000240  5460              STRB     r0,[r4,r1]
000242  486b              LDR      r0,|L1.1008|
000244  6800              LDR      r0,[r0,#0]  ; dataToSend
000246  f3c04207          UBFX     r2,r0,#16,#8
00024a  4628              MOV      r0,r5
00024c  1c69              ADDS     r1,r5,#1
00024e  b2cd              UXTB     r5,r1
000250  5422              STRB     r2,[r4,r0]
;;;347    			ptrOK[i++] = (dataToSend.canId>>8) & 0x000000FF;ptrOK[i++] = (dataToSend.canId>>0) & 0x000000FF;
000252  4867              LDR      r0,|L1.1008|
000254  8800              LDRH     r0,[r0,#0]  ; dataToSend
000256  f3c02207          UBFX     r2,r0,#8,#8
00025a  4628              MOV      r0,r5
00025c  1c69              ADDS     r1,r5,#1
00025e  b2cd              UXTB     r5,r1
000260  5422              STRB     r2,[r4,r0]
000262  4863              LDR      r0,|L1.1008|
000264  7802              LDRB     r2,[r0,#0]  ; dataToSend
000266  4628              MOV      r0,r5
000268  1c69              ADDS     r1,r5,#1
00026a  b2cd              UXTB     r5,r1
00026c  5422              STRB     r2,[r4,r0]
;;;348    			memcpy(&ptrOK[i],varOperation.ecuVersion,20);
00026e  1960              ADDS     r0,r4,r5
000270  2214              MOVS     r2,#0x14
000272  494d              LDR      r1,|L1.936|
000274  3164              ADDS     r1,r1,#0x64
000276  f7fffffe          BL       __aeabi_memcpy
;;;349    			if(varOperation.isDataFlow != 1)
00027a  484b              LDR      r0,|L1.936|
00027c  f890002d          LDRB     r0,[r0,#0x2d]  ; varOperation
000280  2801              CMP      r0,#1
000282  d027              BEQ      |L1.724|
;;;350    			{
;;;351    				OSMutexPend(CDMASendMutex,0,&err);
000284  aa03              ADD      r2,sp,#0xc
000286  2100              MOVS     r1,#0
000288  4857              LDR      r0,|L1.1000|
00028a  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00028c  f7fffffe          BL       OSMutexPend
;;;352    				memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrOK,ptrOK[0]);
000290  4956              LDR      r1,|L1.1004|
000292  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000294  684b              LDR      r3,[r1,#4]
000296  4944              LDR      r1,|L1.936|
000298  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
00029c  311b              ADDS     r1,r1,#0x1b
00029e  1858              ADDS     r0,r3,r1
0002a0  7822              LDRB     r2,[r4,#0]
0002a2  4621              MOV      r1,r4
0002a4  f7fffffe          BL       __aeabi_memcpy
;;;353    				cdmaDataToSend->datLength += ptrOK[0];
0002a8  4850              LDR      r0,|L1.1004|
0002aa  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0002ac  8800              LDRH     r0,[r0,#0]
0002ae  7821              LDRB     r1,[r4,#0]
0002b0  4408              ADD      r0,r0,r1
0002b2  494e              LDR      r1,|L1.1004|
0002b4  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0002b6  8008              STRH     r0,[r1,#0]
;;;354    				varOperation.datOKLeng += ptrOK[0];
0002b8  483b              LDR      r0,|L1.936|
0002ba  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
0002be  7821              LDRB     r1,[r4,#0]
0002c0  4408              ADD      r0,r0,r1
0002c2  4939              LDR      r1,|L1.936|
0002c4  e000              B        |L1.712|
                  |L1.710|
0002c6  e01a              B        |L1.766|
                  |L1.712|
0002c8  f8a10096          STRH     r0,[r1,#0x96]
;;;355    				OSMutexPost(CDMASendMutex);
0002cc  4846              LDR      r0,|L1.1000|
0002ce  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0002d0  f7fffffe          BL       OSMutexPost
                  |L1.724|
;;;356    			}
;;;357    			Mem_free(ptrOK);
0002d4  4620              MOV      r0,r4
0002d6  f7fffffe          BL       Mem_free
;;;358    			memcpy(canDataConfig.pidVerCmd,canIdExt[i].pidVerCmd,4);//todo:保存当前读取版本号的指令
0002da  eb050045          ADD      r0,r5,r5,LSL #1
0002de  4945              LDR      r1,|L1.1012|
0002e0  eb010180          ADD      r1,r1,r0,LSL #2
0002e4  4834              LDR      r0,|L1.952|
0002e6  6849              LDR      r1,[r1,#4]
0002e8  f8c01013          STR      r1,[r0,#0x13]  ; canDataConfig
;;;359    			OSTimeDlyHMSM(0,0,15,0);
0002ec  2300              MOVS     r3,#0
0002ee  220f              MOVS     r2,#0xf
0002f0  4619              MOV      r1,r3
0002f2  4618              MOV      r0,r3
0002f4  f7fffffe          BL       OSTimeDlyHMSM
;;;360    			LoginDataSend(); 
0002f8  f7fffffe          BL       LoginDataSend
;;;361    			break;
0002fc  e004              B        |L1.776|
                  |L1.766|
0002fe  1c68              ADDS     r0,r5,#1              ;319
000300  b2c5              UXTB     r5,r0                 ;319
                  |L1.770|
000302  2d0b              CMP      r5,#0xb               ;319
000304  f6ffaf01          BLT      |L1.266|
                  |L1.776|
000308  bf00              NOP      
;;;362    		}
;;;363    	}
;;;364    	if(varOperation.canTest == 0)
00030a  4827              LDR      r0,|L1.936|
00030c  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
000310  2800              CMP      r0,#0
000312  d140              BNE      |L1.918|
;;;365    	{
;;;366    		LogReport("\r\n12-CAN Test Fail!");
000314  a038              ADR      r0,|L1.1016|
000316  f7fffffe          BL       LogReport
;;;367    		varOperation.isStrenOilOK = 0;
00031a  2000              MOVS     r0,#0
00031c  4922              LDR      r1,|L1.936|
00031e  f8810099          STRB     r0,[r1,#0x99]
;;;368    		ptrOK = Mem_malloc(10);
000322  200a              MOVS     r0,#0xa
000324  f7fffffe          BL       Mem_malloc
000328  4604              MOV      r4,r0
;;;369    		ptrOK[0] = 3;
00032a  2003              MOVS     r0,#3
00032c  7020              STRB     r0,[r4,#0]
;;;370    		ptrOK[1] = 0x50;
00032e  2050              MOVS     r0,#0x50
000330  7060              STRB     r0,[r4,#1]
;;;371    		ptrOK[2] = 0x20;
000332  2020              MOVS     r0,#0x20
000334  70a0              STRB     r0,[r4,#2]
;;;372    		if(varOperation.isDataFlow != 1)
000336  481c              LDR      r0,|L1.936|
000338  f890002d          LDRB     r0,[r0,#0x2d]  ; varOperation
00033c  2801              CMP      r0,#1
00033e  d025              BEQ      |L1.908|
;;;373    		{
;;;374    			OSMutexPend(CDMASendMutex,0,&err);
000340  aa03              ADD      r2,sp,#0xc
000342  2100              MOVS     r1,#0
000344  4828              LDR      r0,|L1.1000|
000346  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000348  f7fffffe          BL       OSMutexPend
;;;375    			memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrOK,ptrOK[0]);
00034c  4927              LDR      r1,|L1.1004|
00034e  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000350  684b              LDR      r3,[r1,#4]
000352  4915              LDR      r1,|L1.936|
000354  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
000358  311b              ADDS     r1,r1,#0x1b
00035a  1858              ADDS     r0,r3,r1
00035c  7822              LDRB     r2,[r4,#0]
00035e  4621              MOV      r1,r4
000360  f7fffffe          BL       __aeabi_memcpy
;;;376    			cdmaDataToSend->datLength += ptrOK[0];
000364  4821              LDR      r0,|L1.1004|
000366  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000368  8800              LDRH     r0,[r0,#0]
00036a  7821              LDRB     r1,[r4,#0]
00036c  4408              ADD      r0,r0,r1
00036e  491f              LDR      r1,|L1.1004|
000370  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000372  8008              STRH     r0,[r1,#0]
;;;377    			varOperation.datOKLeng    += ptrOK[0];
000374  480c              LDR      r0,|L1.936|
000376  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
00037a  7821              LDRB     r1,[r4,#0]
00037c  4408              ADD      r0,r0,r1
00037e  490a              LDR      r1,|L1.936|
000380  f8a10096          STRH     r0,[r1,#0x96]
;;;378    			OSMutexPost(CDMASendMutex);
000384  4818              LDR      r0,|L1.1000|
000386  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000388  f7fffffe          BL       OSMutexPost
                  |L1.908|
;;;379    		}
;;;380    		
;;;381    		Mem_free(ptrOK);
00038c  4620              MOV      r0,r4
00038e  f7fffffe          BL       Mem_free
                  |L1.914|
;;;382    		return;
;;;383    	}
;;;384    idOK:
;;;385    	varOperation.canTest = 0;      //不再获取 PID 信息
;;;386    	varOperation.isStrenOilOK = 0; //一旦进入自识别，就不能再进行动力提升
;;;387    	
;;;388    	return;
;;;389    }
000392  e8bd81ff          POP      {r0-r8,pc}
                  |L1.918|
000396  bf00              NOP                            ;384
                  |L1.920|
000398  2000              MOVS     r0,#0                 ;385
00039a  4903              LDR      r1,|L1.936|
00039c  f8a10091          STRH     r0,[r1,#0x91]         ;385
0003a0  f8810099          STRB     r0,[r1,#0x99]         ;386
0003a4  bf00              NOP                            ;388
0003a6  e7f4              B        |L1.914|
;;;390    
                          ENDP

                  |L1.936|
                          DCD      varOperation
                  |L1.940|
                          DCD      0x40006400
                  |L1.944|
                          DCD      canBaudEnum
                  |L1.948|
                          DCD      canRecieveQ
                  |L1.952|
                          DCD      canDataConfig
                  |L1.956|
0003bc  0d0a3130          DCB      "\r\n10-Test Baud:%d;",0
0003c0  2d546573
0003c4  74204261
0003c8  75643a25
0003cc  643b00  
0003cf  00                DCB      0
                  |L1.976|
0003d0  0d0a3131          DCB      "\r\n11-Baud Test Fail!",0
0003d4  2d426175
0003d8  64205465
0003dc  73742046
0003e0  61696c21
0003e4  00      
0003e5  00                DCB      0
0003e6  00                DCB      0
0003e7  00                DCB      0
                  |L1.1000|
                          DCD      CDMASendMutex
                  |L1.1004|
                          DCD      cdmaDataToSend
                  |L1.1008|
                          DCD      dataToSend
                  |L1.1012|
                          DCD      canIdExt
                  |L1.1016|
0003f8  0d0a3132          DCB      "\r\n12-CAN Test Fail!",0
0003fc  2d43414e
000400  20546573
000404  74204661
000408  696c2100

                          AREA ||i.Deal5016||, CODE, READONLY, ALIGN=2

                  Deal5016 PROC
;;;391    
;;;392    void Deal5016(uint8_t cmdNum,uint8_t *p)
000000  2801              CMP      r0,#1
;;;393    {
;;;394    	if(cmdNum == 1)
000002  d10a              BNE      |L2.26|
;;;395    	{
;;;396    		pPid[50][0] = 9;
000004  2209              MOVS     r2,#9
000006  4b0c              LDR      r3,|L2.56|
000008  f8d330c8          LDR      r3,[r3,#0xc8]  ; pPid
00000c  701a              STRB     r2,[r3,#0]
;;;397    		memcpy(&pPid[50][5],p,2);
00000e  4a0a              LDR      r2,|L2.56|
000010  f8d220c8          LDR      r2,[r2,#0xc8]  ; pPid
000014  880b              LDRH     r3,[r1,#0]
000016  f8a23005          STRH     r3,[r2,#5]
                  |L2.26|
;;;398    	}
;;;399    	if(cmdNum == 2)
00001a  2802              CMP      r0,#2
00001c  d10a              BNE      |L2.52|
;;;400    	{
;;;401    		pPid[50][0] = 9;
00001e  2209              MOVS     r2,#9
000020  4b05              LDR      r3,|L2.56|
000022  f8d330c8          LDR      r3,[r3,#0xc8]  ; pPid
000026  701a              STRB     r2,[r3,#0]
;;;402    		memcpy(&pPid[50][7],p,2);
000028  4a03              LDR      r2,|L2.56|
00002a  f8d220c8          LDR      r2,[r2,#0xc8]  ; pPid
00002e  880b              LDRH     r3,[r1,#0]
000030  f8a23007          STRH     r3,[r2,#7]
                  |L2.52|
;;;403    	}	
;;;404    }
000034  4770              BX       lr
;;;405    
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
                          DCD      pPid

                          AREA ||i.OBDTask||, CODE, READONLY, ALIGN=2

                  OBDTask PROC
;;;14     
;;;15     void OBDTask(void *pdata)
000000  b086              SUB      sp,sp,#0x18
;;;16     {
;;;17     	INT8U     err;
;;;18     	uint8_t   i      = 0;
000002  2700              MOVS     r7,#0
;;;19     	uint8_t   cmdLen = 0;        //封包的时候要减去指令的长度
000004  46b8              MOV      r8,r7
;;;20     	uint8_t   cmdNum = 0;        //指令序号
000006  2600              MOVS     r6,#0
;;;21     	uint8_t   cmdManyPackNum = 0;//要接受的多包的数量
000008  46b2              MOV      r10,r6
;;;22     	CanRxMsg* CAN1_RxMsg;        //指向接收到的OBD信息
;;;23     	uint8_t * can1_Txbuff;       //指向要发送的OBD信息
;;;24     	uint8_t * ptrSaveBuff;       //
;;;25     	CAN1Config();                //CAN 配置
00000a  f7fffffe          BL       CAN1Config
;;;26     	OSTimeDlyHMSM(0,0,10,4);     
00000e  2304              MOVS     r3,#4
000010  220a              MOVS     r2,#0xa
000012  2100              MOVS     r1,#0
000014  4608              MOV      r0,r1
000016  f7fffffe          BL       OSTimeDlyHMSM
;;;27     	TestServer();                //测试服务器
00001a  f7fffffe          BL       TestServer
;;;28     	while(1)
00001e  e22a              B        |L3.1142|
                  |L3.32|
;;;29     	{	
;;;30     		StrengthFuel();
000020  f7fffffe          BL       StrengthFuel
;;;31     		if((varOperation.canTest == 0)||(varOperation.pidTset == 1))      //配置文件不成功，则停止CAN，或者在测试PID指令
000024  48f7              LDR      r0,|L3.1028|
000026  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
00002a  b120              CBZ      r0,|L3.54|
00002c  48f5              LDR      r0,|L3.1028|
00002e  f8900093          LDRB     r0,[r0,#0x93]  ; varOperation
000032  2801              CMP      r0,#1
000034  d106              BNE      |L3.68|
                  |L3.54|
;;;32     		{
;;;33     			OSTimeDlyHMSM(0,0,1,0);	
000036  2300              MOVS     r3,#0
000038  2201              MOVS     r2,#1
00003a  4619              MOV      r1,r3
00003c  4618              MOV      r0,r3
00003e  f7fffffe          BL       OSTimeDlyHMSM
;;;34     			continue;
000042  e218              B        |L3.1142|
                  |L3.68|
;;;35     		}	 
;;;36     		can1_Txbuff = OSQPend(canSendQ,1000,&err);                        //收到 PID 指令，进行发送
000044  aa05              ADD      r2,sp,#0x14
000046  f44f717a          MOV      r1,#0x3e8
00004a  48ef              LDR      r0,|L3.1032|
00004c  6800              LDR      r0,[r0,#0]  ; canSendQ
00004e  f7fffffe          BL       OSQPend
000052  4681              MOV      r9,r0
;;;37     		if(err != OS_ERR_NONE)
000054  f89d0014          LDRB     r0,[sp,#0x14]
000058  b100              CBZ      r0,|L3.92|
;;;38     			continue;
00005a  e20c              B        |L3.1142|
                  |L3.92|
;;;39     		cmdNum = can1_Txbuff[0];  //记录PID指令序号
00005c  f8996000          LDRB     r6,[r9,#0]
;;;40     		cmdLen = can1_Txbuff[1];  //记录PID指令长度
000060  f8998001          LDRB     r8,[r9,#1]
;;;41     		
;;;42     		dataToSend.pdat = &can1_Txbuff[1];   
000064  f1090001          ADD      r0,r9,#1
000068  49e8              LDR      r1,|L3.1036|
00006a  6088              STR      r0,[r1,#8]  ; dataToSend
;;;43     		OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);//发送PID指令
00006c  460b              MOV      r3,r1
00006e  689a              LDR      r2,[r3,#8]  ; dataToSend
000070  6859              LDR      r1,[r3,#4]  ; dataToSend
000072  6818              LDR      r0,[r3,#0]  ; dataToSend
000074  f7fffffe          BL       OBD_CAN_SendData
;;;44     		
;;;45     		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err); // 接收到OBD回复
000078  aa05              ADD      r2,sp,#0x14
00007a  f44f71fa          MOV      r1,#0x1f4
00007e  48e4              LDR      r0,|L3.1040|
000080  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000082  f7fffffe          BL       OSQPend
000086  4604              MOV      r4,r0
;;;46     		if(err == OS_ERR_NONE)
000088  f89d0014          LDRB     r0,[sp,#0x14]
00008c  2800              CMP      r0,#0
00008e  d17d              BNE      |L3.396|
;;;47     		{
;;;48     			freOBDLed = LEDSLOW;                    // OBD 初始化成功
000090  f44f707a          MOV      r0,#0x3e8
000094  49df              LDR      r1,|L3.1044|
000096  8008              STRH     r0,[r1,#0]
;;;49     			if(CAN1_RxMsg->Data[0] == 0x10)         // 多包处理
000098  7ae0              LDRB     r0,[r4,#0xb]
00009a  2810              CMP      r0,#0x10
00009c  d177              BNE      |L3.398|
;;;50     			{
;;;51     				ptrSaveBuff = Mem_malloc(CAN1_RxMsg->Data[1] + 10);       //申请的内存块足够长
00009e  7b21              LDRB     r1,[r4,#0xc]
0000a0  f101000a          ADD      r0,r1,#0xa
0000a4  f7fffffe          BL       Mem_malloc
0000a8  4605              MOV      r5,r0
;;;52     				if(ptrSaveBuff != NULL)
0000aa  2d00              CMP      r5,#0
0000ac  d070              BEQ      |L3.400|
;;;53     				{
;;;54     					ptrSaveBuff[0] = CAN1_RxMsg -> Data[1] + 4;
0000ae  7b20              LDRB     r0,[r4,#0xc]
0000b0  1d00              ADDS     r0,r0,#4
0000b2  7028              STRB     r0,[r5,#0]
;;;55     					ptrSaveBuff[1] = 0x60;
0000b4  2060              MOVS     r0,#0x60
0000b6  7068              STRB     r0,[r5,#1]
;;;56     					ptrSaveBuff[2] = cmdNum;
0000b8  70ae              STRB     r6,[r5,#2]
;;;57     					ptrSaveBuff[3] = CAN1_RxMsg -> Data[1];              //故障码长度
0000ba  7b20              LDRB     r0,[r4,#0xc]
0000bc  70e8              STRB     r0,[r5,#3]
;;;58     					
;;;59     					memcpy(&ptrSaveBuff[4],&CAN1_RxMsg->Data[2],6);
0000be  f8d4100d          LDR      r1,[r4,#0xd]
0000c2  6069              STR      r1,[r5,#4]
0000c4  f8b40011          LDRH     r0,[r4,#0x11]
0000c8  8128              STRH     r0,[r5,#8]
;;;60     					cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6) % 7 == 0 ? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
0000ca  7b20              LDRB     r0,[r4,#0xc]
0000cc  1f80              SUBS     r0,r0,#6
0000ce  2107              MOVS     r1,#7
0000d0  fb90f2f1          SDIV     r2,r0,r1
0000d4  fb010012          MLS      r0,r1,r2,r0
0000d8  b920              CBNZ     r0,|L3.228|
0000da  7b20              LDRB     r0,[r4,#0xc]
0000dc  1f80              SUBS     r0,r0,#6
0000de  fb90f0f1          SDIV     r0,r0,r1
0000e2  e005              B        |L3.240|
                  |L3.228|
0000e4  7b20              LDRB     r0,[r4,#0xc]
0000e6  1f80              SUBS     r0,r0,#6
0000e8  2107              MOVS     r1,#7
0000ea  fb90f0f1          SDIV     r0,r0,r1
0000ee  1c40              ADDS     r0,r0,#1
                  |L3.240|
0000f0  f0000aff          AND      r10,r0,#0xff
;;;61     					Mem_free(CAN1_RxMsg);
0000f4  4620              MOV      r0,r4
0000f6  f7fffffe          BL       Mem_free
;;;62     					
;;;63     					dataToSend.pdat = pidManyBag;                    //发送 0x30 请求接下来的多包
0000fa  48c7              LDR      r0,|L3.1048|
0000fc  49c3              LDR      r1,|L3.1036|
0000fe  6088              STR      r0,[r1,#8]  ; dataToSend
;;;64     					OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
000100  460b              MOV      r3,r1
000102  689a              LDR      r2,[r3,#8]  ; dataToSend
000104  6859              LDR      r1,[r3,#4]  ; dataToSend
000106  6818              LDR      r0,[r3,#0]  ; dataToSend
000108  f7fffffe          BL       OBD_CAN_SendData
;;;65     					
;;;66     					for(i = 0;i < cmdManyPackNum;i++)
00010c  2700              MOVS     r7,#0
00010e  e01a              B        |L3.326|
                  |L3.272|
;;;67     					{
;;;68     						CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);   //接收多包
000110  aa05              ADD      r2,sp,#0x14
000112  2119              MOVS     r1,#0x19
000114  48be              LDR      r0,|L3.1040|
000116  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000118  f7fffffe          BL       OSQPend
00011c  4604              MOV      r4,r0
;;;69     						if(err == OS_ERR_NONE)
00011e  f89d0014          LDRB     r0,[sp,#0x14]
000122  b968              CBNZ     r0,|L3.320|
;;;70     						{
;;;71     							memcpy(&ptrSaveBuff[7*i + 10],&CAN1_RxMsg->Data[1],7);
000124  ebc700c7          RSB      r0,r7,r7,LSL #3
000128  300a              ADDS     r0,r0,#0xa
00012a  1941              ADDS     r1,r0,r5
00012c  68e2              LDR      r2,[r4,#0xc]
00012e  600a              STR      r2,[r1,#0]
000130  8a22              LDRH     r2,[r4,#0x10]
000132  808a              STRH     r2,[r1,#4]
000134  7ca0              LDRB     r0,[r4,#0x12]
000136  7188              STRB     r0,[r1,#6]
;;;72     							Mem_free(CAN1_RxMsg);
000138  4620              MOV      r0,r4
00013a  f7fffffe          BL       Mem_free
00013e  e000              B        |L3.322|
                  |L3.320|
;;;73     						}
;;;74     						else 
;;;75     							break;
000140  e003              B        |L3.330|
                  |L3.322|
000142  1c78              ADDS     r0,r7,#1              ;66
000144  b2c7              UXTB     r7,r0                 ;66
                  |L3.326|
000146  4557              CMP      r7,r10                ;66
000148  dbe2              BLT      |L3.272|
                  |L3.330|
00014a  bf00              NOP      
;;;76     					} 
;;;77     					if(i == cmdManyPackNum && varOperation.isDataFlow != 1)
00014c  4557              CMP      r7,r10
00014e  d12e              BNE      |L3.430|
000150  48ac              LDR      r0,|L3.1028|
000152  f890002d          LDRB     r0,[r0,#0x2d]  ; varOperation
000156  2801              CMP      r0,#1
000158  d029              BEQ      |L3.430|
;;;78     					{
;;;79     						OSMutexPend(CDMASendMutex,0,&err);
00015a  aa05              ADD      r2,sp,#0x14
00015c  2100              MOVS     r1,#0
00015e  48af              LDR      r0,|L3.1052|
000160  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000162  f7fffffe          BL       OSMutexPend
;;;80     						
;;;81     						memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrSaveBuff,ptrSaveBuff[0]);
000166  49ae              LDR      r1,|L3.1056|
000168  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00016a  684b              LDR      r3,[r1,#4]
00016c  49a5              LDR      r1,|L3.1028|
00016e  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
000172  311b              ADDS     r1,r1,#0x1b
000174  1858              ADDS     r0,r3,r1
000176  782a              LDRB     r2,[r5,#0]
000178  4629              MOV      r1,r5
00017a  f7fffffe          BL       __aeabi_memcpy
;;;82     						cdmaDataToSend->datLength += ptrSaveBuff[0];
00017e  48a8              LDR      r0,|L3.1056|
000180  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000182  8800              LDRH     r0,[r0,#0]
000184  7829              LDRB     r1,[r5,#0]
000186  4408              ADD      r0,r0,r1
000188  49a5              LDR      r1,|L3.1056|
00018a  e002              B        |L3.402|
                  |L3.396|
00018c  e168              B        |L3.1120|
                  |L3.398|
00018e  e012              B        |L3.438|
                  |L3.400|
000190  e16d              B        |L3.1134|
                  |L3.402|
000192  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000194  8008              STRH     r0,[r1,#0]
;;;83     						varOperation.datOKLeng += ptrSaveBuff[0];    //记录不可拆卸的包长度
000196  489b              LDR      r0,|L3.1028|
000198  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
00019c  7829              LDRB     r1,[r5,#0]
00019e  4408              ADD      r0,r0,r1
0001a0  4998              LDR      r1,|L3.1028|
0001a2  f8a10096          STRH     r0,[r1,#0x96]
;;;84     						
;;;85     						OSMutexPost(CDMASendMutex);
0001a6  489d              LDR      r0,|L3.1052|
0001a8  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0001aa  f7fffffe          BL       OSMutexPost
                  |L3.430|
;;;86     					}
;;;87     //					PIDVarGet(cmdNum,&ptrSaveBuff[3]);
;;;88     					Mem_free(ptrSaveBuff);
0001ae  4628              MOV      r0,r5
0001b0  f7fffffe          BL       Mem_free
0001b4  e15b              B        |L3.1134|
                  |L3.438|
;;;89     				}
;;;90     			}
;;;91     			else  //单包处理
;;;92     			{
;;;93     				if(CAN1_RxMsg->Data[0] > cmdLen)
0001b6  7ae0              LDRB     r0,[r4,#0xb]
0001b8  4540              CMP      r0,r8
0001ba  dd5d              BLE      |L3.632|
;;;94     				{
;;;95     					OSMutexPend(CDMASendMutex,0,&err);
0001bc  aa05              ADD      r2,sp,#0x14
0001be  2100              MOVS     r1,#0
0001c0  4896              LDR      r0,|L3.1052|
0001c2  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0001c4  f7fffffe          BL       OSMutexPend
;;;96     					// todo: 限制数据长度，不能越界
;;;97     					pPid[cmdNum - 1][3]  = CAN1_RxMsg->Data[0] - cmdLen;
0001c8  7ae0              LDRB     r0,[r4,#0xb]
0001ca  eba00008          SUB      r0,r0,r8
0001ce  b2c1              UXTB     r1,r0
0001d0  1e70              SUBS     r0,r6,#1
0001d2  4a94              LDR      r2,|L3.1060|
0001d4  f8520020          LDR      r0,[r2,r0,LSL #2]
0001d8  70c1              STRB     r1,[r0,#3]
;;;98     					if((cmdNum<12&&pPid[cmdNum - 1][0]<58)||(cmdNum>11&&pPid[cmdNum - 1][0]<30))
0001da  2e0c              CMP      r6,#0xc
0001dc  da06              BGE      |L3.492|
0001de  1e70              SUBS     r0,r6,#1
0001e0  4611              MOV      r1,r2
0001e2  f8510020          LDR      r0,[r1,r0,LSL #2]
0001e6  7800              LDRB     r0,[r0,#0]
0001e8  283a              CMP      r0,#0x3a
0001ea  db08              BLT      |L3.510|
                  |L3.492|
0001ec  2e0b              CMP      r6,#0xb
0001ee  dd36              BLE      |L3.606|
0001f0  1e70              SUBS     r0,r6,#1
0001f2  498c              LDR      r1,|L3.1060|
0001f4  f8510020          LDR      r0,[r1,r0,LSL #2]
0001f8  7800              LDRB     r0,[r0,#0]
0001fa  281e              CMP      r0,#0x1e
0001fc  da2f              BGE      |L3.606|
                  |L3.510|
;;;99     					{
;;;100    						memcpy(&pPid[cmdNum - 1][pPid[cmdNum - 1][0]],&CAN1_RxMsg->Data[cmdLen + 1],(CAN1_RxMsg->Data[0] - cmdLen));
0001fe  1e73              SUBS     r3,r6,#1
000200  f8dfc220          LDR      r12,|L3.1060|
000204  f85cc023          LDR      r12,[r12,r3,LSL #2]
000208  f8dfb218          LDR      r11,|L3.1060|
00020c  f85b3023          LDR      r3,[r11,r3,LSL #2]
000210  781b              LDRB     r3,[r3,#0]
000212  eb0c0003          ADD      r0,r12,r3
000216  7ae3              LDRB     r3,[r4,#0xb]
000218  eba30208          SUB      r2,r3,r8
00021c  f104030b          ADD      r3,r4,#0xb
000220  f1080c01          ADD      r12,r8,#1
000224  eb03010c          ADD      r1,r3,r12
000228  f7fffffe          BL       __aeabi_memcpy
;;;101    						pPid[cmdNum - 1][0] += CAN1_RxMsg->Data[0] - cmdLen;
00022c  1e70              SUBS     r0,r6,#1
00022e  4659              MOV      r1,r11
000230  f8510020          LDR      r0,[r1,r0,LSL #2]
000234  7800              LDRB     r0,[r0,#0]
000236  7ae1              LDRB     r1,[r4,#0xb]
000238  eba10108          SUB      r1,r1,r8
00023c  4408              ADD      r0,r0,r1
00023e  b2c1              UXTB     r1,r0
000240  1e70              SUBS     r0,r6,#1
000242  465a              MOV      r2,r11
000244  f8520020          LDR      r0,[r2,r0,LSL #2]
000248  7001              STRB     r1,[r0,#0]
;;;102    						cdmaDataToSend->datLength += CAN1_RxMsg->Data[0] - cmdLen;
00024a  4875              LDR      r0,|L3.1056|
00024c  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00024e  8800              LDRH     r0,[r0,#0]
000250  7ae1              LDRB     r1,[r4,#0xb]
000252  eba10108          SUB      r1,r1,r8
000256  4408              ADD      r0,r0,r1
000258  4971              LDR      r1,|L3.1056|
00025a  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00025c  8008              STRH     r0,[r1,#0]
                  |L3.606|
;;;103    					}
;;;104    					OSMutexPost(CDMASendMutex);
00025e  486f              LDR      r0,|L3.1052|
000260  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000262  f7fffffe          BL       OSMutexPost
;;;105    					Deal5016(cmdNum,&CAN1_RxMsg->Data[cmdLen + 1]);
000266  f104000b          ADD      r0,r4,#0xb
00026a  f1080201          ADD      r2,r8,#1
00026e  1881              ADDS     r1,r0,r2
000270  4630              MOV      r0,r6
000272  f7fffffe          BL       Deal5016
                  |L3.630|
000276  e0c0              B        |L3.1018|
                  |L3.632|
;;;106    //					PIDVarGet(cmdNum,&CAN1_RxMsg->Data[cmdLen + 1]);
;;;107    				}
;;;108    				else if((CAN1_RxMsg->Data[0]==0x03)&&(CAN1_RxMsg->Data[1]==0x7F))
000278  7ae0              LDRB     r0,[r4,#0xb]
00027a  2803              CMP      r0,#3
00027c  d1fb              BNE      |L3.630|
00027e  7b20              LDRB     r0,[r4,#0xc]
000280  287f              CMP      r0,#0x7f
000282  d1f8              BNE      |L3.630|
;;;109    				{
;;;110    					if(cmdNum != 10)
000284  2e0a              CMP      r6,#0xa
000286  d00e              BEQ      |L3.678|
;;;111    						LogReport("\r\n05-ECU report:03 7F;PID:%d err:%d,%d,%d,%d,%d,%d;",cmdNum,
000288  7ca0              LDRB     r0,[r4,#0x12]
00028a  7c61              LDRB     r1,[r4,#0x11]
00028c  7c22              LDRB     r2,[r4,#0x10]
00028e  7be3              LDRB     r3,[r4,#0xf]
000290  e9cd3200          STRD     r3,r2,[sp,#0]
000294  e9cd1002          STRD     r1,r0,[sp,#8]
000298  7ba3              LDRB     r3,[r4,#0xe]
00029a  7b62              LDRB     r2,[r4,#0xd]
00029c  4631              MOV      r1,r6
00029e  a062              ADR      r0,|L3.1064|
0002a0  f7fffffe          BL       LogReport
0002a4  e0a9              B        |L3.1018|
                  |L3.678|
;;;112    							CAN1_RxMsg->Data[2],CAN1_RxMsg -> Data[3],CAN1_RxMsg->Data[4],CAN1_RxMsg->Data[5],
;;;113    							CAN1_RxMsg->Data[6],CAN1_RxMsg -> Data[7]);
;;;114    					else if(cmdNum == 10 && strengthFuelFlash.modeOrder == 2)//重汽故障码读取  03 7F 78
0002a6  2e0a              CMP      r6,#0xa
0002a8  d1e5              BNE      |L3.630|
0002aa  486c              LDR      r0,|L3.1116|
0002ac  f890003a          LDRB     r0,[r0,#0x3a]  ; strengthFuelFlash
0002b0  2802              CMP      r0,#2
0002b2  d1e0              BNE      |L3.630|
;;;115    					{
;;;116    						Mem_free(CAN1_RxMsg);
0002b4  4620              MOV      r0,r4
0002b6  f7fffffe          BL       Mem_free
;;;117    						varOperation.pidRun = 0;//停止发送PID指令
0002ba  2000              MOVS     r0,#0
0002bc  4951              LDR      r1,|L3.1028|
0002be  f8810095          STRB     r0,[r1,#0x95]
;;;118    						CAN1_RxMsg = OSQPend(canRecieveQ,2000,&err); // 接收到OBD回复
0002c2  aa05              ADD      r2,sp,#0x14
0002c4  f44f61fa          MOV      r1,#0x7d0
0002c8  4851              LDR      r0,|L3.1040|
0002ca  6800              LDR      r0,[r0,#0]  ; canRecieveQ
0002cc  f7fffffe          BL       OSQPend
0002d0  4604              MOV      r4,r0
;;;119    						if(err == OS_ERR_NONE)
0002d2  f89d0014          LDRB     r0,[sp,#0x14]
0002d6  2800              CMP      r0,#0
                  |L3.728|
0002d8  d17e              BNE      |L3.984|
;;;120    							if(CAN1_RxMsg->Data[0] == 0x10)          // 多包处理
0002da  7ae0              LDRB     r0,[r4,#0xb]
0002dc  2810              CMP      r0,#0x10
0002de  d1fb              BNE      |L3.728|
;;;121    							{
;;;122    								ptrSaveBuff = Mem_malloc(CAN1_RxMsg->Data[1] + 10);      //申请的内存块足够长
0002e0  7b21              LDRB     r1,[r4,#0xc]
0002e2  f101000a          ADD      r0,r1,#0xa
0002e6  f7fffffe          BL       Mem_malloc
0002ea  4605              MOV      r5,r0
;;;123    								if(ptrSaveBuff != NULL)
0002ec  2d00              CMP      r5,#0
0002ee  d073              BEQ      |L3.984|
;;;124    								{
;;;125    									ptrSaveBuff[0] = CAN1_RxMsg -> Data[1] + 4;
0002f0  7b20              LDRB     r0,[r4,#0xc]
0002f2  1d00              ADDS     r0,r0,#4
0002f4  7028              STRB     r0,[r5,#0]
;;;126    									ptrSaveBuff[1] = 0x60;
0002f6  2060              MOVS     r0,#0x60
0002f8  7068              STRB     r0,[r5,#1]
;;;127    									ptrSaveBuff[2] = cmdNum;
0002fa  70ae              STRB     r6,[r5,#2]
;;;128    									ptrSaveBuff[3] = CAN1_RxMsg -> Data[1];              //故障码长度
0002fc  7b20              LDRB     r0,[r4,#0xc]
0002fe  70e8              STRB     r0,[r5,#3]
;;;129    									
;;;130    									memcpy(&ptrSaveBuff[4],&CAN1_RxMsg->Data[2],6);
000300  f8d4100d          LDR      r1,[r4,#0xd]
000304  6069              STR      r1,[r5,#4]
000306  f8b40011          LDRH     r0,[r4,#0x11]
00030a  8128              STRH     r0,[r5,#8]
;;;131    									cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6) % 7 == 0 ? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
00030c  7b20              LDRB     r0,[r4,#0xc]
00030e  1f80              SUBS     r0,r0,#6
000310  2107              MOVS     r1,#7
000312  fb90f2f1          SDIV     r2,r0,r1
000316  fb010012          MLS      r0,r1,r2,r0
00031a  b920              CBNZ     r0,|L3.806|
00031c  7b20              LDRB     r0,[r4,#0xc]
00031e  1f80              SUBS     r0,r0,#6
000320  fb90f0f1          SDIV     r0,r0,r1
000324  e005              B        |L3.818|
                  |L3.806|
000326  7b20              LDRB     r0,[r4,#0xc]
000328  1f80              SUBS     r0,r0,#6
00032a  2107              MOVS     r1,#7
00032c  fb90f0f1          SDIV     r0,r0,r1
000330  1c40              ADDS     r0,r0,#1
                  |L3.818|
000332  f0000aff          AND      r10,r0,#0xff
;;;132    									Mem_free(CAN1_RxMsg);
000336  4620              MOV      r0,r4
000338  f7fffffe          BL       Mem_free
;;;133    									
;;;134    									dataToSend.pdat = pidManyBag;                        //发送 0x30 请求接下来的多包
00033c  4836              LDR      r0,|L3.1048|
00033e  4933              LDR      r1,|L3.1036|
000340  6088              STR      r0,[r1,#8]  ; dataToSend
;;;135    									OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
000342  460b              MOV      r3,r1
000344  689a              LDR      r2,[r3,#8]  ; dataToSend
000346  6859              LDR      r1,[r3,#4]  ; dataToSend
000348  6818              LDR      r0,[r3,#0]  ; dataToSend
00034a  f7fffffe          BL       OBD_CAN_SendData
;;;136    									
;;;137    									for(i = 0;i < cmdManyPackNum;i++)
00034e  2700              MOVS     r7,#0
000350  e01a              B        |L3.904|
                  |L3.850|
;;;138    									{
;;;139    										CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);       //接收多包
000352  aa05              ADD      r2,sp,#0x14
000354  2119              MOVS     r1,#0x19
000356  482e              LDR      r0,|L3.1040|
000358  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00035a  f7fffffe          BL       OSQPend
00035e  4604              MOV      r4,r0
;;;140    										if(err == OS_ERR_NONE)
000360  f89d0014          LDRB     r0,[sp,#0x14]
000364  b968              CBNZ     r0,|L3.898|
;;;141    										{
;;;142    											memcpy(&ptrSaveBuff[7*i + 10],&CAN1_RxMsg->Data[1],7);
000366  ebc700c7          RSB      r0,r7,r7,LSL #3
00036a  300a              ADDS     r0,r0,#0xa
00036c  1941              ADDS     r1,r0,r5
00036e  68e2              LDR      r2,[r4,#0xc]
000370  600a              STR      r2,[r1,#0]
000372  8a22              LDRH     r2,[r4,#0x10]
000374  808a              STRH     r2,[r1,#4]
000376  7ca0              LDRB     r0,[r4,#0x12]
000378  7188              STRB     r0,[r1,#6]
;;;143    											Mem_free(CAN1_RxMsg);
00037a  4620              MOV      r0,r4
00037c  f7fffffe          BL       Mem_free
000380  e000              B        |L3.900|
                  |L3.898|
;;;144    										}
;;;145    										else 
;;;146    											break;
000382  e003              B        |L3.908|
                  |L3.900|
000384  1c78              ADDS     r0,r7,#1              ;137
000386  b2c7              UXTB     r7,r0                 ;137
                  |L3.904|
000388  4557              CMP      r7,r10                ;137
00038a  dbe2              BLT      |L3.850|
                  |L3.908|
00038c  bf00              NOP      
;;;147    									} 
;;;148    									if(i == cmdManyPackNum && varOperation.isDataFlow != 1)
00038e  4557              CMP      r7,r10
000390  d12c              BNE      |L3.1004|
000392  481c              LDR      r0,|L3.1028|
000394  f890002d          LDRB     r0,[r0,#0x2d]  ; varOperation
000398  2801              CMP      r0,#1
00039a  d027              BEQ      |L3.1004|
;;;149    									{
;;;150    										OSMutexPend(CDMASendMutex,0,&err);
00039c  aa05              ADD      r2,sp,#0x14
00039e  2100              MOVS     r1,#0
0003a0  481e              LDR      r0,|L3.1052|
0003a2  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0003a4  f7fffffe          BL       OSMutexPend
;;;151    										
;;;152    										memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrSaveBuff,ptrSaveBuff[0]);
0003a8  491d              LDR      r1,|L3.1056|
0003aa  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0003ac  684b              LDR      r3,[r1,#4]
0003ae  4915              LDR      r1,|L3.1028|
0003b0  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
0003b4  311b              ADDS     r1,r1,#0x1b
0003b6  1858              ADDS     r0,r3,r1
0003b8  782a              LDRB     r2,[r5,#0]
0003ba  4629              MOV      r1,r5
0003bc  f7fffffe          BL       __aeabi_memcpy
;;;153    										cdmaDataToSend->datLength += ptrSaveBuff[0];
0003c0  4817              LDR      r0,|L3.1056|
0003c2  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0003c4  8800              LDRH     r0,[r0,#0]
0003c6  7829              LDRB     r1,[r5,#0]
0003c8  4408              ADD      r0,r0,r1
0003ca  4915              LDR      r1,|L3.1056|
0003cc  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0003ce  8008              STRH     r0,[r1,#0]
;;;154    										varOperation.datOKLeng += ptrSaveBuff[0];    //记录不可拆卸的包长度
0003d0  480c              LDR      r0,|L3.1028|
0003d2  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
0003d6  e000              B        |L3.986|
                  |L3.984|
0003d8  e00b              B        |L3.1010|
                  |L3.986|
0003da  7829              LDRB     r1,[r5,#0]
0003dc  4408              ADD      r0,r0,r1
0003de  4909              LDR      r1,|L3.1028|
0003e0  f8a10096          STRH     r0,[r1,#0x96]
;;;155    										
;;;156    										OSMutexPost(CDMASendMutex);
0003e4  480d              LDR      r0,|L3.1052|
0003e6  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0003e8  f7fffffe          BL       OSMutexPost
                  |L3.1004|
;;;157    									}
;;;158    //									PIDVarGet(cmdNum,&ptrSaveBuff[3]);
;;;159    									Mem_free(ptrSaveBuff);
0003ec  4628              MOV      r0,r5
0003ee  f7fffffe          BL       Mem_free
                  |L3.1010|
;;;160    								}
;;;161    							}
;;;162    						varOperation.pidRun = 1;   //启动 PID 向 OBD 发送指令
0003f2  2001              MOVS     r0,#1
0003f4  4903              LDR      r1,|L3.1028|
0003f6  f8810095          STRB     r0,[r1,#0x95]
                  |L3.1018|
;;;163    					}
;;;164    				}
;;;165    				Mem_free(CAN1_RxMsg);
0003fa  4620              MOV      r0,r4
0003fc  f7fffffe          BL       Mem_free
000400  e035              B        |L3.1134|
000402  0000              DCW      0x0000
                  |L3.1028|
                          DCD      varOperation
                  |L3.1032|
                          DCD      canSendQ
                  |L3.1036|
                          DCD      dataToSend
                  |L3.1040|
                          DCD      canRecieveQ
                  |L3.1044|
                          DCD      freOBDLed
                  |L3.1048|
                          DCD      pidManyBag
                  |L3.1052|
                          DCD      CDMASendMutex
                  |L3.1056|
                          DCD      cdmaDataToSend
                  |L3.1060|
                          DCD      pPid
                  |L3.1064|
000428  0d0a3035          DCB      "\r\n05-ECU report:03 7F;PID:%d err:%d,%d,%d,%d,%d,%d;",0
00042c  2d454355
000430  20726570
000434  6f72743a
000438  30332037
00043c  463b5049
000440  443a2564
000444  20657272
000448  3a25642c
00044c  25642c25
000450  642c2564
000454  2c25642c
000458  25643b00
                  |L3.1116|
                          DCD      strengthFuelFlash
                  |L3.1120|
;;;166    			}
;;;167    		}
;;;168    		else
;;;169    		{
;;;170    			freOBDLed = LEDFAST; 
000460  20c8              MOVS     r0,#0xc8
000462  4905              LDR      r1,|L3.1144|
000464  8008              STRH     r0,[r1,#0]
;;;171    			LogReport("\r\n04 - PIDcmd don't report:%d;",cmdNum);//发送 PID 指令，ECU 不回复
000466  4631              MOV      r1,r6
000468  a004              ADR      r0,|L3.1148|
00046a  f7fffffe          BL       LogReport
                  |L3.1134|
;;;172    		}
;;;173    		Mem_free(can1_Txbuff);      //释放内存块
00046e  4648              MOV      r0,r9
000470  f7fffffe          BL       Mem_free
000474  bf00              NOP                            ;34
                  |L3.1142|
000476  e5d3              B        |L3.32|
;;;174    	}
;;;175    }
;;;176    
                          ENDP

                  |L3.1144|
                          DCD      freOBDLed
                  |L3.1148|
00047c  0d0a3034          DCB      "\r\n04 - PIDcmd don't report:%d;",0
000480  202d2050
000484  4944636d
000488  6420646f
00048c  6e277420
000490  7265706f
000494  72743a25
000498  643b00  
00049b  00                DCB      0

                          AREA ||i.PIDVarGet||, CODE, READONLY, ALIGN=2

                  PIDVarGet PROC
;;;408    extern VARConfig* ptrPIDVars;      //指向第二配置区
;;;409    void PIDVarGet(uint8_t cmdId,uint8_t ptrData[])
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;410    {
000004  b089              SUB      sp,sp,#0x24
000006  468a              MOV      r10,r1
;;;411    	uint8_t  i,j,err;	
;;;412    	uint64_t saveDate;
;;;413    	uint8_t  byteNum = 0;
000008  f04f0900          MOV      r9,#0
;;;414    	uint8_t  temp = 0;
00000c  2700              MOVS     r7,#0
;;;415    	uint16_t temp1 = 0;
00000e  2000              MOVS     r0,#0
000010  9003              STR      r0,[sp,#0xc]
;;;416    	uint8_t* ptr;
;;;417    	static uint8_t  curFuelTimes = 0;     //四次一计算
;;;418    	static uint32_t allFuelCom   = 0;     //累加喷油量
;;;419    	for(i = 0;i < varOperation.pidVarNum;i ++)
000012  2400              MOVS     r4,#0
000014  e3fe              B        |L4.2068|
                  |L4.22|
;;;420    	{
;;;421    		if((ptrPIDVars + i)->pidId != cmdId)
000016  ebc400c4          RSB      r0,r4,r4,LSL #3
00001a  49fe              LDR      r1,|L4.1044|
00001c  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00001e  eb010040          ADD      r0,r1,r0,LSL #1
000022  7841              LDRB     r1,[r0,#1]
000024  9809              LDR      r0,[sp,#0x24]
000026  4281              CMP      r1,r0
000028  d000              BEQ      |L4.44|
;;;422    			continue;
00002a  e3f4              B        |L4.2070|
                  |L4.44|
;;;423    		//获得字节数
;;;424    		byteNum = ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)%8 ==0?       \
00002c  ebc403c4          RSB      r3,r4,r4,LSL #3
000030  f8dfc3e0          LDR      r12,|L4.1044|
000034  f8dcc000          LDR      r12,[r12,#0]  ; ptrPIDVars
000038  eb0c0343          ADD      r3,r12,r3,LSL #1
00003c  795b              LDRB     r3,[r3,#5]
00003e  ebc40cc4          RSB      r12,r4,r4,LSL #3
000042  f8dfe3d0          LDR      lr,|L4.1044|
000046  f8dee000          LDR      lr,[lr,#0]  ; ptrPIDVars
00004a  eb0e0c4c          ADD      r12,lr,r12,LSL #1
00004e  f89cc004          LDRB     r12,[r12,#4]
000052  eb03020c          ADD      r2,r3,r12
000056  17d3              ASRS     r3,r2,#31
000058  eb027353          ADD      r3,r2,r3,LSR #29
00005c  10db              ASRS     r3,r3,#3
00005e  eba203c3          SUB      r3,r2,r3,LSL #3
000062  b9cb              CBNZ     r3,|L4.152|
;;;425    						((ptrPIDVars + i)->bitLen + (ptrPIDVars + i)->startBit) / 8 : \
000064  ebc403c4          RSB      r3,r4,r4,LSL #3
000068  f8dfc3a8          LDR      r12,|L4.1044|
00006c  f8dcc000          LDR      r12,[r12,#0]  ; ptrPIDVars
000070  eb0c0343          ADD      r3,r12,r3,LSL #1
000074  795b              LDRB     r3,[r3,#5]
000076  ebc40cc4          RSB      r12,r4,r4,LSL #3
00007a  f8dfe398          LDR      lr,|L4.1044|
00007e  f8dee000          LDR      lr,[lr,#0]  ; ptrPIDVars
000082  eb0e0c4c          ADD      r12,lr,r12,LSL #1
000086  f89cc004          LDRB     r12,[r12,#4]
00008a  eb03010c          ADD      r1,r3,r12
00008e  17cb              ASRS     r3,r1,#31
000090  eb017353          ADD      r3,r1,r3,LSR #29
000094  10db              ASRS     r3,r3,#3
000096  e019              B        |L4.204|
                  |L4.152|
;;;426    						((ptrPIDVars + i)->bitLen + (ptrPIDVars + i)->startBit) / 8 + 1;
000098  ebc403c4          RSB      r3,r4,r4,LSL #3
00009c  f8dfc374          LDR      r12,|L4.1044|
0000a0  f8dcc000          LDR      r12,[r12,#0]  ; ptrPIDVars
0000a4  eb0c0343          ADD      r3,r12,r3,LSL #1
0000a8  795b              LDRB     r3,[r3,#5]
0000aa  ebc40cc4          RSB      r12,r4,r4,LSL #3
0000ae  f8dfe364          LDR      lr,|L4.1044|
0000b2  f8dee000          LDR      lr,[lr,#0]  ; ptrPIDVars
0000b6  eb0e0c4c          ADD      r12,lr,r12,LSL #1
0000ba  f89cc004          LDRB     r12,[r12,#4]
0000be  eb03000c          ADD      r0,r3,r12
0000c2  17c3              ASRS     r3,r0,#31
0000c4  eb007353          ADD      r3,r0,r3,LSR #29
0000c8  10db              ASRS     r3,r3,#3
0000ca  1c5b              ADDS     r3,r3,#1
                  |L4.204|
0000cc  f00309ff          AND      r9,r3,#0xff
;;;427    		if((ptrPIDVars + i)->dataHL == 1)     //大端在前
0000d0  ebc400c4          RSB      r0,r4,r4,LSL #3
0000d4  49cf              LDR      r1,|L4.1044|
0000d6  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0000d8  f8110010          LDRB     r0,[r1,r0,LSL #1]
0000dc  2801              CMP      r0,#1
0000de  d17d              BNE      |L4.476|
;;;428    		{
;;;429    			j = 0;
0000e0  f04f0800          MOV      r8,#0
;;;430    			do{
0000e4  bf00              NOP      
                  |L4.230|
;;;431    				if(j == 0)
0000e6  f1b80f00          CMP      r8,#0
0000ea  d140              BNE      |L4.366|
;;;432    				{
;;;433    					temp = ptrData[ptrPIDVars->startByte + j];
0000ec  48c9              LDR      r0,|L4.1044|
0000ee  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0000f0  78c0              LDRB     r0,[r0,#3]
0000f2  4440              ADD      r0,r0,r8
0000f4  f81a7000          LDRB     r7,[r10,r0]
;;;434    					if(((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)<8)
0000f8  ebc400c4          RSB      r0,r4,r4,LSL #3
0000fc  49c5              LDR      r1,|L4.1044|
0000fe  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000100  eb010040          ADD      r0,r1,r0,LSL #1
000104  7940              LDRB     r0,[r0,#5]
000106  ebc401c4          RSB      r1,r4,r4,LSL #3
00010a  4ac2              LDR      r2,|L4.1044|
00010c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00010e  eb020141          ADD      r1,r2,r1,LSL #1
000112  7909              LDRB     r1,[r1,#4]
000114  4408              ADD      r0,r0,r1
000116  2808              CMP      r0,#8
000118  da1e              BGE      |L4.344|
;;;435    					{
;;;436    						temp &= (0xff>>(8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)));
00011a  ebc400c4          RSB      r0,r4,r4,LSL #3
00011e  49bd              LDR      r1,|L4.1044|
000120  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000122  eb010040          ADD      r0,r1,r0,LSL #1
000126  7940              LDRB     r0,[r0,#5]
000128  ebc401c4          RSB      r1,r4,r4,LSL #3
00012c  4ab9              LDR      r2,|L4.1044|
00012e  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000130  eb020141          ADD      r1,r2,r1,LSL #1
000134  7909              LDRB     r1,[r1,#4]
000136  4408              ADD      r0,r0,r1
000138  f1c00108          RSB      r1,r0,#8
00013c  20ff              MOVS     r0,#0xff
00013e  4108              ASRS     r0,r0,r1
000140  4007              ANDS     r7,r7,r0
;;;437    						temp >>= (ptrPIDVars + i)->startBit;
000142  ebc400c4          RSB      r0,r4,r4,LSL #3
000146  49b3              LDR      r1,|L4.1044|
000148  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00014a  eb010040          ADD      r0,r1,r0,LSL #1
00014e  7900              LDRB     r0,[r0,#4]
000150  4107              ASRS     r7,r7,r0
;;;438    						saveDate = temp;
000152  2600              MOVS     r6,#0
000154  463d              MOV      r5,r7
;;;439    						break;
000156  e05c              B        |L4.530|
                  |L4.344|
;;;440    					}
;;;441    					temp >>= (ptrPIDVars + i) -> startBit;
000158  ebc400c4          RSB      r0,r4,r4,LSL #3
00015c  49ad              LDR      r1,|L4.1044|
00015e  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000160  eb010040          ADD      r0,r1,r0,LSL #1
000164  7900              LDRB     r0,[r0,#4]
000166  4107              ASRS     r7,r7,r0
;;;442    					saveDate = temp;
000168  2600              MOVS     r6,#0
00016a  463d              MOV      r5,r7
00016c  e04a              B        |L4.516|
                  |L4.366|
;;;443    				}else if(j == (byteNum - 1))
00016e  f1a90001          SUB      r0,r9,#1
000172  4540              CMP      r0,r8
000174  d139              BNE      |L4.490|
;;;444    				{
;;;445    					saveDate <<= (((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit + 8) - byteNum * 8);
000176  ebc400c4          RSB      r0,r4,r4,LSL #3
00017a  49a6              LDR      r1,|L4.1044|
00017c  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00017e  eb010040          ADD      r0,r1,r0,LSL #1
000182  7940              LDRB     r0,[r0,#5]
000184  ebc401c4          RSB      r1,r4,r4,LSL #3
000188  4aa2              LDR      r2,|L4.1044|
00018a  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00018c  eb020141          ADD      r1,r2,r1,LSL #1
000190  7909              LDRB     r1,[r1,#4]
000192  4408              ADD      r0,r0,r1
000194  3008              ADDS     r0,r0,#8
000196  eba002c9          SUB      r2,r0,r9,LSL #3
00019a  4628              MOV      r0,r5
00019c  4631              MOV      r1,r6
00019e  e9cd6505          STRD     r6,r5,[sp,#0x14]
0001a2  f7fffffe          BL       __aeabi_llsl
0001a6  4605              MOV      r5,r0
0001a8  460e              MOV      r6,r1
;;;446    					temp = ptrData[ptrPIDVars->startByte + j];
0001aa  489a              LDR      r0,|L4.1044|
0001ac  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0001ae  78c0              LDRB     r0,[r0,#3]
0001b0  4440              ADD      r0,r0,r8
0001b2  f81a7000          LDRB     r7,[r10,r0]
;;;447    					temp &= 0xff>>(byteNum * 8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit));
0001b6  ebc400c4          RSB      r0,r4,r4,LSL #3
0001ba  4996              LDR      r1,|L4.1044|
0001bc  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0001be  eb010040          ADD      r0,r1,r0,LSL #1
0001c2  7940              LDRB     r0,[r0,#5]
0001c4  ebc401c4          RSB      r1,r4,r4,LSL #3
0001c8  4a92              LDR      r2,|L4.1044|
0001ca  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0001cc  eb020141          ADD      r1,r2,r1,LSL #1
0001d0  7909              LDRB     r1,[r1,#4]
0001d2  4408              ADD      r0,r0,r1
0001d4  ebc001c9          RSB      r1,r0,r9,LSL #3
0001d8  20ff              MOVS     r0,#0xff
0001da  e000              B        |L4.478|
                  |L4.476|
0001dc  e01a              B        |L4.532|
                  |L4.478|
0001de  4108              ASRS     r0,r0,r1
0001e0  4007              ANDS     r7,r7,r0
;;;448    					saveDate += temp;
0001e2  19ed              ADDS     r5,r5,r7
0001e4  f1460600          ADC      r6,r6,#0
0001e8  e00c              B        |L4.516|
                  |L4.490|
;;;449    				}else
;;;450    				{
;;;451    					saveDate <<= 8;
0001ea  0230              LSLS     r0,r6,#8
0001ec  ea406615          ORR      r6,r0,r5,LSR #24
0001f0  022d              LSLS     r5,r5,#8
;;;452    					temp = ptrData[ptrPIDVars -> startByte + j];
0001f2  4888              LDR      r0,|L4.1044|
0001f4  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0001f6  78c0              LDRB     r0,[r0,#3]
0001f8  4440              ADD      r0,r0,r8
0001fa  f81a7000          LDRB     r7,[r10,r0]
;;;453    					saveDate += temp;
0001fe  19ed              ADDS     r5,r5,r7
000200  f1460600          ADC      r6,r6,#0
                  |L4.516|
;;;454    				}
;;;455    				j++;
000204  f1080001          ADD      r0,r8,#1
000208  f00008ff          AND      r8,r0,#0xff
;;;456    			}while(j < byteNum);	
00020c  45c8              CMP      r8,r9
00020e  f6ffaf6a          BLT      |L4.230|
                  |L4.530|
000212  e09a              B        |L4.842|
                  |L4.532|
;;;457    		}else if((ptrPIDVars + i)->dataHL == 2)      //小端在前
000214  ebc400c4          RSB      r0,r4,r4,LSL #3
000218  497e              LDR      r1,|L4.1044|
00021a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00021c  f8110010          LDRB     r0,[r1,r0,LSL #1]
000220  2802              CMP      r0,#2
000222  d1f6              BNE      |L4.530|
;;;458    		{
;;;459    			j = byteNum - 1;
000224  f1a90001          SUB      r0,r9,#1
000228  f00008ff          AND      r8,r0,#0xff
;;;460    			do{
00022c  bf00              NOP      
                  |L4.558|
;;;461    				if(j ==( byteNum - 1))
00022e  f1a90001          SUB      r0,r9,#1
000232  4540              CMP      r0,r8
000234  d14c              BNE      |L4.720|
;;;462    				{
;;;463    					temp = ptrData[ptrPIDVars->startByte + j];
000236  4877              LDR      r0,|L4.1044|
000238  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
00023a  78c0              LDRB     r0,[r0,#3]
00023c  4440              ADD      r0,r0,r8
00023e  f81a7000          LDRB     r7,[r10,r0]
;;;464    					if(((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)<8)
000242  ebc400c4          RSB      r0,r4,r4,LSL #3
000246  4973              LDR      r1,|L4.1044|
000248  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00024a  eb010040          ADD      r0,r1,r0,LSL #1
00024e  7940              LDRB     r0,[r0,#5]
000250  ebc401c4          RSB      r1,r4,r4,LSL #3
000254  4a6f              LDR      r2,|L4.1044|
000256  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000258  eb020141          ADD      r1,r2,r1,LSL #1
00025c  7909              LDRB     r1,[r1,#4]
00025e  4408              ADD      r0,r0,r1
000260  2808              CMP      r0,#8
000262  da1e              BGE      |L4.674|
;;;465    					{
;;;466    						temp &= (0xff>>(8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)));
000264  ebc400c4          RSB      r0,r4,r4,LSL #3
000268  496a              LDR      r1,|L4.1044|
00026a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00026c  eb010040          ADD      r0,r1,r0,LSL #1
000270  7940              LDRB     r0,[r0,#5]
000272  ebc401c4          RSB      r1,r4,r4,LSL #3
000276  4a67              LDR      r2,|L4.1044|
000278  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00027a  eb020141          ADD      r1,r2,r1,LSL #1
00027e  7909              LDRB     r1,[r1,#4]
000280  4408              ADD      r0,r0,r1
000282  f1c00108          RSB      r1,r0,#8
000286  20ff              MOVS     r0,#0xff
000288  4108              ASRS     r0,r0,r1
00028a  4007              ANDS     r7,r7,r0
;;;467    						temp >>= (ptrPIDVars + i)->startBit;
00028c  ebc400c4          RSB      r0,r4,r4,LSL #3
000290  4960              LDR      r1,|L4.1044|
000292  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000294  eb010040          ADD      r0,r1,r0,LSL #1
000298  7900              LDRB     r0,[r0,#4]
00029a  4107              ASRS     r7,r7,r0
;;;468    						saveDate = temp;
00029c  2600              MOVS     r6,#0
00029e  463d              MOV      r5,r7
;;;469    						break;
0002a0  e052              B        |L4.840|
                  |L4.674|
;;;470    					}
;;;471    					temp &= (0xff>>(byteNum*8 - ((ptrPIDVars + i)->bitLen +(ptrPIDVars + i)->startBit)));
0002a2  ebc400c4          RSB      r0,r4,r4,LSL #3
0002a6  495b              LDR      r1,|L4.1044|
0002a8  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0002aa  eb010040          ADD      r0,r1,r0,LSL #1
0002ae  7940              LDRB     r0,[r0,#5]
0002b0  ebc401c4          RSB      r1,r4,r4,LSL #3
0002b4  4a57              LDR      r2,|L4.1044|
0002b6  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0002b8  eb020141          ADD      r1,r2,r1,LSL #1
0002bc  7909              LDRB     r1,[r1,#4]
0002be  4408              ADD      r0,r0,r1
0002c0  ebc001c9          RSB      r1,r0,r9,LSL #3
0002c4  20ff              MOVS     r0,#0xff
0002c6  4108              ASRS     r0,r0,r1
0002c8  4007              ANDS     r7,r7,r0
;;;472    					saveDate = temp;
0002ca  2600              MOVS     r6,#0
0002cc  463d              MOV      r5,r7
0002ce  e032              B        |L4.822|
                  |L4.720|
;;;473    				}else if(j == 0)
0002d0  f1b80f00          CMP      r8,#0
0002d4  d122              BNE      |L4.796|
;;;474    				{
;;;475    					saveDate <<= (8 - (ptrPIDVars + i)->startBit);
0002d6  ebc400c4          RSB      r0,r4,r4,LSL #3
0002da  494e              LDR      r1,|L4.1044|
0002dc  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0002de  eb010040          ADD      r0,r1,r0,LSL #1
0002e2  7900              LDRB     r0,[r0,#4]
0002e4  f1c00208          RSB      r2,r0,#8
0002e8  4628              MOV      r0,r5
0002ea  4631              MOV      r1,r6
0002ec  e9cd6507          STRD     r6,r5,[sp,#0x1c]
0002f0  f7fffffe          BL       __aeabi_llsl
0002f4  4605              MOV      r5,r0
0002f6  460e              MOV      r6,r1
;;;476    					temp = ptrData[ptrPIDVars->startByte + j];
0002f8  4846              LDR      r0,|L4.1044|
0002fa  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
0002fc  78c0              LDRB     r0,[r0,#3]
0002fe  4440              ADD      r0,r0,r8
000300  f81a7000          LDRB     r7,[r10,r0]
;;;477    					temp >>= (ptrPIDVars + i)->startBit;
000304  ebc400c4          RSB      r0,r4,r4,LSL #3
000308  4942              LDR      r1,|L4.1044|
00030a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00030c  eb010040          ADD      r0,r1,r0,LSL #1
000310  7900              LDRB     r0,[r0,#4]
000312  4107              ASRS     r7,r7,r0
;;;478    					saveDate += temp;
000314  19ed              ADDS     r5,r5,r7
000316  f1460600          ADC      r6,r6,#0
00031a  e00c              B        |L4.822|
                  |L4.796|
;;;479    				}else
;;;480    				{
;;;481    					saveDate <<= 8;
00031c  0230              LSLS     r0,r6,#8
00031e  ea406615          ORR      r6,r0,r5,LSR #24
000322  022d              LSLS     r5,r5,#8
;;;482    					temp = ptrData[ptrPIDVars->startByte + j];
000324  483b              LDR      r0,|L4.1044|
000326  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
000328  78c0              LDRB     r0,[r0,#3]
00032a  4440              ADD      r0,r0,r8
00032c  f81a7000          LDRB     r7,[r10,r0]
;;;483    					saveDate += temp;
000330  19ed              ADDS     r5,r5,r7
000332  f1460600          ADC      r6,r6,#0
                  |L4.822|
;;;484    				}
;;;485    				if(j == 0)
000336  f1b80f00          CMP      r8,#0
00033a  d100              BNE      |L4.830|
;;;486    				{
;;;487    					break;
00033c  e004              B        |L4.840|
                  |L4.830|
;;;488    				}
;;;489    				j--;
00033e  f1a80001          SUB      r0,r8,#1
000342  f00008ff          AND      r8,r0,#0xff
;;;490    			}while(1);	
000346  e772              B        |L4.558|
                  |L4.840|
000348  bf00              NOP                            ;469
                  |L4.842|
;;;491    		}
;;;492    		switch((ptrPIDVars + i)->varId)
00034a  ebc400c4          RSB      r0,r4,r4,LSL #3
00034e  4931              LDR      r1,|L4.1044|
000350  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
000352  eb010040          ADD      r0,r1,r0,LSL #1
000356  7880              LDRB     r0,[r0,#2]
000358  280c              CMP      r0,#0xc
00035a  d27c              BCS      |L4.1110|
00035c  e8dff000          TBB      [pc,r0]
000360  7b062e64          DCB      0x7b,0x06,0x2e,0x64
000364  96bef6f4          DCB      0x96,0xbe,0xf6,0xf4
000368  f3f2f1f0          DCB      0xf3,0xf2,0xf1,0xf0
;;;493    		{
;;;494    			case 1://计算车速
;;;495    				if(carAllRecord.carSpeedTemp != 1)
00036c  482a              LDR      r0,|L4.1048|
00036e  f8900031          LDRB     r0,[r0,#0x31]  ; carAllRecord
000372  2801              CMP      r0,#1
000374  d021              BEQ      |L4.954|
;;;496    					carAllRecord.carSpeed = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000376  4628              MOV      r0,r5
000378  4631              MOV      r1,r6
00037a  f7fffffe          BL       __aeabi_ul2f
00037e  9000              STR      r0,[sp,#0]
000380  ebc400c4          RSB      r0,r4,r4,LSL #3
000384  4a23              LDR      r2,|L4.1044|
000386  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000388  eb020040          ADD      r0,r2,r0,LSL #1
00038c  f8d01006          LDR      r1,[r0,#6]
000390  9800              LDR      r0,[sp,#0]
000392  f7fffffe          BL       __aeabi_fmul
000396  9001              STR      r0,[sp,#4]
000398  ebc400c4          RSB      r0,r4,r4,LSL #3
00039c  4a1d              LDR      r2,|L4.1044|
00039e  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0003a0  eb020040          ADD      r0,r2,r0,LSL #1
0003a4  f8d0100a          LDR      r1,[r0,#0xa]
0003a8  9801              LDR      r0,[sp,#4]
0003aa  f7fffffe          BL       __aeabi_fadd
0003ae  9002              STR      r0,[sp,#8]
0003b0  f7fffffe          BL       __aeabi_f2uiz
0003b4  4918              LDR      r1,|L4.1048|
0003b6  f8a1002f          STRH     r0,[r1,#0x2f]
                  |L4.954|
;;;497    				break;
0003ba  e282              B        |L4.2242|
;;;498    			case 2://转速
;;;499    				if(carAllRecord.engineSpeedTemp != 1)
0003bc  4816              LDR      r0,|L4.1048|
0003be  f8900034          LDRB     r0,[r0,#0x34]  ; carAllRecord
0003c2  2801              CMP      r0,#1
0003c4  d020              BEQ      |L4.1032|
;;;500    					carAllRecord.engineSpeed = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0003c6  4628              MOV      r0,r5
0003c8  4631              MOV      r1,r6
0003ca  f7fffffe          BL       __aeabi_ul2f
0003ce  9000              STR      r0,[sp,#0]
0003d0  ebc400c4          RSB      r0,r4,r4,LSL #3
0003d4  4a0f              LDR      r2,|L4.1044|
0003d6  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0003d8  eb020040          ADD      r0,r2,r0,LSL #1
0003dc  f8d01006          LDR      r1,[r0,#6]
0003e0  9800              LDR      r0,[sp,#0]
0003e2  f7fffffe          BL       __aeabi_fmul
0003e6  9001              STR      r0,[sp,#4]
0003e8  ebc400c4          RSB      r0,r4,r4,LSL #3
0003ec  4a09              LDR      r2,|L4.1044|
0003ee  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0003f0  eb020040          ADD      r0,r2,r0,LSL #1
0003f4  f8d0100a          LDR      r1,[r0,#0xa]
0003f8  9801              LDR      r0,[sp,#4]
0003fa  f7fffffe          BL       __aeabi_fadd
0003fe  9002              STR      r0,[sp,#8]
000400  f7fffffe          BL       __aeabi_f2uiz
000404  4904              LDR      r1,|L4.1048|
000406  8648              STRH     r0,[r1,#0x32]
                  |L4.1032|
;;;501    				if(carAllRecord.engineSpeed > carAllRecord.engineSpeedMax)//获得发动机最高转速
000408  4803              LDR      r0,|L4.1048|
00040a  8e40              LDRH     r0,[r0,#0x32]  ; carAllRecord
00040c  4902              LDR      r1,|L4.1048|
00040e  8c49              LDRH     r1,[r1,#0x22]  ; carAllRecord
000410  4288              CMP      r0,r1
000412  e003              B        |L4.1052|
                  |L4.1044|
                          DCD      ptrPIDVars
                  |L4.1048|
                          DCD      carAllRecord
                  |L4.1052|
00041c  dd03              BLE      |L4.1062|
;;;502    					carAllRecord.engineSpeedMax = carAllRecord.engineSpeed;
00041e  48fe              LDR      r0,|L4.2072|
000420  8e40              LDRH     r0,[r0,#0x32]  ; carAllRecord
000422  49fd              LDR      r1,|L4.2072|
000424  8448              STRH     r0,[r1,#0x22]
                  |L4.1062|
;;;503    				break;
000426  e24c              B        |L4.2242|
;;;504    			case 3://总喷油量
;;;505    				if(carAllRecord.allFuelTemp != 1)
000428  48fb              LDR      r0,|L4.2072|
00042a  f8900039          LDRB     r0,[r0,#0x39]  ; carAllRecord
00042e  2801              CMP      r0,#1
000430  d02b              BEQ      |L4.1162|
;;;506    				{
;;;507    					carAllRecord.allFuel = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000432  4628              MOV      r0,r5
000434  4631              MOV      r1,r6
000436  f7fffffe          BL       __aeabi_ul2f
00043a  9000              STR      r0,[sp,#0]
00043c  ebc400c4          RSB      r0,r4,r4,LSL #3
000440  4af6              LDR      r2,|L4.2076|
000442  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000444  eb020040          ADD      r0,r2,r0,LSL #1
000448  f8d01006          LDR      r1,[r0,#6]
00044c  9800              LDR      r0,[sp,#0]
00044e  f7fffffe          BL       __aeabi_fmul
000452  9001              STR      r0,[sp,#4]
000454  e000              B        |L4.1112|
                  |L4.1110|
000456  e233              B        |L4.2240|
                  |L4.1112|
000458  ebc400c4          RSB      r0,r4,r4,LSL #3
00045c  4aef              LDR      r2,|L4.2076|
00045e  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000460  eb020040          ADD      r0,r2,r0,LSL #1
000464  f8d0100a          LDR      r1,[r0,#0xa]
000468  9801              LDR      r0,[sp,#4]
00046a  f7fffffe          BL       __aeabi_fadd
00046e  9002              STR      r0,[sp,#8]
000470  f7fffffe          BL       __aeabi_f2uiz
000474  b280              UXTH     r0,r0
000476  49e8              LDR      r1,|L4.2072|
000478  f8c10035          STR      r0,[r1,#0x35]  ; carAllRecord
;;;508    					carAllRecord.totalFuel += carAllRecord.allFuel;
00047c  4608              MOV      r0,r1
00047e  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000480  f8d11035          LDR      r1,[r1,#0x35]  ; carAllRecord
000484  4408              ADD      r0,r0,r1
000486  49e4              LDR      r1,|L4.2072|
000488  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
                  |L4.1162|
;;;509    				}break;
00048a  e21a              B        |L4.2242|
;;;510    			case 4://主喷油量
;;;511    				carAllRecord.primaryFuel = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
00048c  4628              MOV      r0,r5
00048e  4631              MOV      r1,r6
000490  f7fffffe          BL       __aeabi_ul2f
000494  9000              STR      r0,[sp,#0]
000496  ebc400c4          RSB      r0,r4,r4,LSL #3
00049a  4ae0              LDR      r2,|L4.2076|
00049c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00049e  eb020040          ADD      r0,r2,r0,LSL #1
0004a2  f8d01006          LDR      r1,[r0,#6]
0004a6  9800              LDR      r0,[sp,#0]
0004a8  f7fffffe          BL       __aeabi_fmul
0004ac  9001              STR      r0,[sp,#4]
0004ae  ebc400c4          RSB      r0,r4,r4,LSL #3
0004b2  4ada              LDR      r2,|L4.2076|
0004b4  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0004b6  eb020040          ADD      r0,r2,r0,LSL #1
0004ba  f8d0100a          LDR      r1,[r0,#0xa]
0004be  9801              LDR      r0,[sp,#4]
0004c0  f7fffffe          BL       __aeabi_fadd
0004c4  9002              STR      r0,[sp,#8]
0004c6  f7fffffe          BL       __aeabi_f2uiz
0004ca  49d3              LDR      r1,|L4.2072|
0004cc  8748              STRH     r0,[r1,#0x3a]
;;;512    				carAllRecord.totalFuel += carAllRecord.primaryFuel;
0004ce  4608              MOV      r0,r1
0004d0  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
0004d2  8f49              LDRH     r1,[r1,#0x3a]  ; carAllRecord
0004d4  4408              ADD      r0,r0,r1
0004d6  49d0              LDR      r1,|L4.2072|
0004d8  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;513    				break;
0004da  e1f2              B        |L4.2242|
;;;514    			case 5://预喷油量 1
;;;515    				carAllRecord.beforeFuel1 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0004dc  4628              MOV      r0,r5
0004de  4631              MOV      r1,r6
0004e0  f7fffffe          BL       __aeabi_ul2f
0004e4  9000              STR      r0,[sp,#0]
0004e6  ebc400c4          RSB      r0,r4,r4,LSL #3
0004ea  4acc              LDR      r2,|L4.2076|
0004ec  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0004ee  eb020040          ADD      r0,r2,r0,LSL #1
0004f2  f8d01006          LDR      r1,[r0,#6]
0004f6  9800              LDR      r0,[sp,#0]
0004f8  f7fffffe          BL       __aeabi_fmul
0004fc  9001              STR      r0,[sp,#4]
0004fe  ebc400c4          RSB      r0,r4,r4,LSL #3
000502  4ac6              LDR      r2,|L4.2076|
000504  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000506  eb020040          ADD      r0,r2,r0,LSL #1
00050a  f8d0100a          LDR      r1,[r0,#0xa]
00050e  9801              LDR      r0,[sp,#4]
000510  f7fffffe          BL       __aeabi_fadd
000514  9002              STR      r0,[sp,#8]
000516  f7fffffe          BL       __aeabi_f2uiz
00051a  49bf              LDR      r1,|L4.2072|
00051c  f8a1003f          STRH     r0,[r1,#0x3f]
;;;516    				carAllRecord.totalFuel += carAllRecord.beforeFuel1;
000520  4608              MOV      r0,r1
000522  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000524  f8b1103f          LDRH     r1,[r1,#0x3f]  ; carAllRecord
000528  4408              ADD      r0,r0,r1
00052a  49bb              LDR      r1,|L4.2072|
00052c  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;517    				allFuelCom             += carAllRecord.beforeFuel1;
00052e  4608              MOV      r0,r1
000530  f8b0003f          LDRH     r0,[r0,#0x3f]  ; carAllRecord
000534  49ba              LDR      r1,|L4.2080|
000536  6809              LDR      r1,[r1,#0]  ; allFuelCom
000538  4408              ADD      r0,r0,r1
00053a  49b9              LDR      r1,|L4.2080|
00053c  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;518    				break;
00053e  e1c0              B        |L4.2242|
000540  e0e6              B        |L4.1808|
000542  e0bb              B        |L4.1724|
000544  e090              B        |L4.1640|
000546  e065              B        |L4.1556|
000548  e032              B        |L4.1456|
00054a  e7ff              B        |L4.1356|
                  |L4.1356|
;;;519    			case 6://预喷油量 2
;;;520    				carAllRecord.beforeFuel2 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
00054c  4628              MOV      r0,r5
00054e  4631              MOV      r1,r6
000550  f7fffffe          BL       __aeabi_ul2f
000554  9000              STR      r0,[sp,#0]
000556  ebc400c4          RSB      r0,r4,r4,LSL #3
00055a  4ab0              LDR      r2,|L4.2076|
00055c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00055e  eb020040          ADD      r0,r2,r0,LSL #1
000562  f8d01006          LDR      r1,[r0,#6]
000566  9800              LDR      r0,[sp,#0]
000568  f7fffffe          BL       __aeabi_fmul
00056c  9001              STR      r0,[sp,#4]
00056e  ebc400c4          RSB      r0,r4,r4,LSL #3
000572  4aaa              LDR      r2,|L4.2076|
000574  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000576  eb020040          ADD      r0,r2,r0,LSL #1
00057a  f8d0100a          LDR      r1,[r0,#0xa]
00057e  9801              LDR      r0,[sp,#4]
000580  f7fffffe          BL       __aeabi_fadd
000584  9002              STR      r0,[sp,#8]
000586  f7fffffe          BL       __aeabi_f2uiz
00058a  49a3              LDR      r1,|L4.2072|
00058c  f8a10041          STRH     r0,[r1,#0x41]
;;;521    				carAllRecord.totalFuel += carAllRecord.beforeFuel2;
000590  4608              MOV      r0,r1
000592  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000594  f8b11041          LDRH     r1,[r1,#0x41]  ; carAllRecord
000598  4408              ADD      r0,r0,r1
00059a  499f              LDR      r1,|L4.2072|
00059c  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;522    				allFuelCom += carAllRecord.beforeFuel2;
00059e  4608              MOV      r0,r1
0005a0  f8b00041          LDRH     r0,[r0,#0x41]  ; carAllRecord
0005a4  499e              LDR      r1,|L4.2080|
0005a6  6809              LDR      r1,[r1,#0]  ; allFuelCom
0005a8  4408              ADD      r0,r0,r1
0005aa  499d              LDR      r1,|L4.2080|
0005ac  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;523    				break;
0005ae  e188              B        |L4.2242|
                  |L4.1456|
;;;524    			case 7://预喷油量 3
;;;525    				carAllRecord.beforeFuel3 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0005b0  4628              MOV      r0,r5
0005b2  4631              MOV      r1,r6
0005b4  f7fffffe          BL       __aeabi_ul2f
0005b8  9000              STR      r0,[sp,#0]
0005ba  ebc400c4          RSB      r0,r4,r4,LSL #3
0005be  4a97              LDR      r2,|L4.2076|
0005c0  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0005c2  eb020040          ADD      r0,r2,r0,LSL #1
0005c6  f8d01006          LDR      r1,[r0,#6]
0005ca  9800              LDR      r0,[sp,#0]
0005cc  f7fffffe          BL       __aeabi_fmul
0005d0  9001              STR      r0,[sp,#4]
0005d2  ebc400c4          RSB      r0,r4,r4,LSL #3
0005d6  4a91              LDR      r2,|L4.2076|
0005d8  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0005da  eb020040          ADD      r0,r2,r0,LSL #1
0005de  f8d0100a          LDR      r1,[r0,#0xa]
0005e2  9801              LDR      r0,[sp,#4]
0005e4  f7fffffe          BL       __aeabi_fadd
0005e8  9002              STR      r0,[sp,#8]
0005ea  f7fffffe          BL       __aeabi_f2uiz
0005ee  498a              LDR      r1,|L4.2072|
0005f0  f8a10043          STRH     r0,[r1,#0x43]
;;;526    				carAllRecord.totalFuel += carAllRecord.beforeFuel3;
0005f4  4608              MOV      r0,r1
0005f6  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
0005f8  f8b11043          LDRH     r1,[r1,#0x43]  ; carAllRecord
0005fc  4408              ADD      r0,r0,r1
0005fe  4986              LDR      r1,|L4.2072|
000600  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;527    				allFuelCom += carAllRecord.beforeFuel3;
000602  4608              MOV      r0,r1
000604  f8b00043          LDRH     r0,[r0,#0x43]  ; carAllRecord
000608  4985              LDR      r1,|L4.2080|
00060a  6809              LDR      r1,[r1,#0]  ; allFuelCom
00060c  4408              ADD      r0,r0,r1
00060e  4984              LDR      r1,|L4.2080|
000610  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;528    				break;
000612  e156              B        |L4.2242|
                  |L4.1556|
;;;529    			case 8://后喷油量 1
;;;530    				carAllRecord.afterFuel1 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000614  4628              MOV      r0,r5
000616  4631              MOV      r1,r6
000618  f7fffffe          BL       __aeabi_ul2f
00061c  9000              STR      r0,[sp,#0]
00061e  ebc400c4          RSB      r0,r4,r4,LSL #3
000622  4a7e              LDR      r2,|L4.2076|
000624  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000626  eb020040          ADD      r0,r2,r0,LSL #1
00062a  f8d01006          LDR      r1,[r0,#6]
00062e  9800              LDR      r0,[sp,#0]
000630  f7fffffe          BL       __aeabi_fmul
000634  9001              STR      r0,[sp,#4]
000636  ebc400c4          RSB      r0,r4,r4,LSL #3
00063a  4a78              LDR      r2,|L4.2076|
00063c  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00063e  eb020040          ADD      r0,r2,r0,LSL #1
000642  f8d0100a          LDR      r1,[r0,#0xa]
000646  9801              LDR      r0,[sp,#4]
000648  f7fffffe          BL       __aeabi_fadd
00064c  9002              STR      r0,[sp,#8]
00064e  f7fffffe          BL       __aeabi_f2uiz
000652  4971              LDR      r1,|L4.2072|
000654  f8a10048          STRH     r0,[r1,#0x48]
;;;531    				carAllRecord.totalFuel += carAllRecord.afterFuel1;
000658  4608              MOV      r0,r1
00065a  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
00065c  f8b11048          LDRH     r1,[r1,#0x48]  ; carAllRecord
000660  4408              ADD      r0,r0,r1
000662  496d              LDR      r1,|L4.2072|
000664  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;532    				break;
000666  e12c              B        |L4.2242|
                  |L4.1640|
;;;533    			case 9://后喷油量 2
;;;534    				carAllRecord.afterFuel2 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000668  4628              MOV      r0,r5
00066a  4631              MOV      r1,r6
00066c  f7fffffe          BL       __aeabi_ul2f
000670  9000              STR      r0,[sp,#0]
000672  ebc400c4          RSB      r0,r4,r4,LSL #3
000676  4a69              LDR      r2,|L4.2076|
000678  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00067a  eb020040          ADD      r0,r2,r0,LSL #1
00067e  f8d01006          LDR      r1,[r0,#6]
000682  9800              LDR      r0,[sp,#0]
000684  f7fffffe          BL       __aeabi_fmul
000688  9001              STR      r0,[sp,#4]
00068a  ebc400c4          RSB      r0,r4,r4,LSL #3
00068e  4a63              LDR      r2,|L4.2076|
000690  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000692  eb020040          ADD      r0,r2,r0,LSL #1
000696  f8d0100a          LDR      r1,[r0,#0xa]
00069a  9801              LDR      r0,[sp,#4]
00069c  f7fffffe          BL       __aeabi_fadd
0006a0  9002              STR      r0,[sp,#8]
0006a2  f7fffffe          BL       __aeabi_f2uiz
0006a6  495c              LDR      r1,|L4.2072|
0006a8  f8a1004a          STRH     r0,[r1,#0x4a]
;;;535    				carAllRecord.totalFuel += carAllRecord.afterFuel2;
0006ac  4608              MOV      r0,r1
0006ae  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
0006b0  f8b1104a          LDRH     r1,[r1,#0x4a]  ; carAllRecord
0006b4  4408              ADD      r0,r0,r1
0006b6  4958              LDR      r1,|L4.2072|
0006b8  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;536    				break;
0006ba  e102              B        |L4.2242|
                  |L4.1724|
;;;537    			case 10://后喷油量3
;;;538    				carAllRecord.afterFuel3 = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
0006bc  4628              MOV      r0,r5
0006be  4631              MOV      r1,r6
0006c0  f7fffffe          BL       __aeabi_ul2f
0006c4  9000              STR      r0,[sp,#0]
0006c6  ebc400c4          RSB      r0,r4,r4,LSL #3
0006ca  4a54              LDR      r2,|L4.2076|
0006cc  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0006ce  eb020040          ADD      r0,r2,r0,LSL #1
0006d2  f8d01006          LDR      r1,[r0,#6]
0006d6  9800              LDR      r0,[sp,#0]
0006d8  f7fffffe          BL       __aeabi_fmul
0006dc  9001              STR      r0,[sp,#4]
0006de  ebc400c4          RSB      r0,r4,r4,LSL #3
0006e2  4a4e              LDR      r2,|L4.2076|
0006e4  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0006e6  eb020040          ADD      r0,r2,r0,LSL #1
0006ea  f8d0100a          LDR      r1,[r0,#0xa]
0006ee  9801              LDR      r0,[sp,#4]
0006f0  f7fffffe          BL       __aeabi_fadd
0006f4  9002              STR      r0,[sp,#8]
0006f6  f7fffffe          BL       __aeabi_f2uiz
0006fa  4947              LDR      r1,|L4.2072|
0006fc  f8a1004c          STRH     r0,[r1,#0x4c]
;;;539    				carAllRecord.totalFuel += carAllRecord.afterFuel3;
000700  4608              MOV      r0,r1
000702  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000704  f8b1104c          LDRH     r1,[r1,#0x4c]  ; carAllRecord
000708  4408              ADD      r0,r0,r1
00070a  4943              LDR      r1,|L4.2072|
00070c  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;540    				break;
00070e  e0d8              B        |L4.2242|
                  |L4.1808|
;;;541    			case 11://当前喷油量
;;;542    				carAllRecord.curFuel    = (uint16_t)(saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset);
000710  4628              MOV      r0,r5
000712  4631              MOV      r1,r6
000714  f7fffffe          BL       __aeabi_ul2f
000718  9000              STR      r0,[sp,#0]
00071a  ebc400c4          RSB      r0,r4,r4,LSL #3
00071e  4a3f              LDR      r2,|L4.2076|
000720  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000722  eb020040          ADD      r0,r2,r0,LSL #1
000726  f8d01006          LDR      r1,[r0,#6]
00072a  9800              LDR      r0,[sp,#0]
00072c  f7fffffe          BL       __aeabi_fmul
000730  9001              STR      r0,[sp,#4]
000732  ebc400c4          RSB      r0,r4,r4,LSL #3
000736  4a39              LDR      r2,|L4.2076|
000738  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
00073a  eb020040          ADD      r0,r2,r0,LSL #1
00073e  f8d0100a          LDR      r1,[r0,#0xa]
000742  9801              LDR      r0,[sp,#4]
000744  f7fffffe          BL       __aeabi_fadd
000748  9002              STR      r0,[sp,#8]
00074a  f7fffffe          BL       __aeabi_f2uiz
00074e  4932              LDR      r1,|L4.2072|
000750  f8a1004f          STRH     r0,[r1,#0x4f]
;;;543    				carAllRecord.totalFuel += carAllRecord.curFuel;
000754  4608              MOV      r0,r1
000756  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
000758  f8b1104f          LDRH     r1,[r1,#0x4f]  ; carAllRecord
00075c  4408              ADD      r0,r0,r1
00075e  492e              LDR      r1,|L4.2072|
000760  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;544    				allFuelCom             += carAllRecord.curFuel;
000762  4608              MOV      r0,r1
000764  f8b0004f          LDRH     r0,[r0,#0x4f]  ; carAllRecord
000768  492d              LDR      r1,|L4.2080|
00076a  6809              LDR      r1,[r1,#0]  ; allFuelCom
00076c  4408              ADD      r0,r0,r1
00076e  492c              LDR      r1,|L4.2080|
000770  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;545    				curFuelTimes ++;
000772  482c              LDR      r0,|L4.2084|
000774  7800              LDRB     r0,[r0,#0]  ; curFuelTimes
000776  1c40              ADDS     r0,r0,#1
000778  492a              LDR      r1,|L4.2084|
00077a  7008              STRB     r0,[r1,#0]
;;;546    				if(curFuelTimes >= 4)//计算瞬时油耗  1s 的
00077c  4608              MOV      r0,r1
00077e  7800              LDRB     r0,[r0,#0]  ; curFuelTimes
000780  2804              CMP      r0,#4
000782  db7c              BLT      |L4.2174|
;;;547    				{
;;;548    					carAllRecord.instantFuel = allFuelCom * carAllRecord.engineSpeed / 7;
000784  4824              LDR      r0,|L4.2072|
000786  8e40              LDRH     r0,[r0,#0x32]  ; carAllRecord
000788  4925              LDR      r1,|L4.2080|
00078a  6809              LDR      r1,[r1,#0]  ; allFuelCom
00078c  4348              MULS     r0,r1,r0
00078e  2107              MOVS     r1,#7
000790  fbb0f0f1          UDIV     r0,r0,r1
000794  4920              LDR      r1,|L4.2072|
000796  f8a10052          STRH     r0,[r1,#0x52]
;;;549    					LogReport("\r\n60-oil:%d,r:%d;",allFuelCom,carAllRecord.engineSpeed);
00079a  4608              MOV      r0,r1
00079c  8e42              LDRH     r2,[r0,#0x32]  ; carAllRecord
00079e  4820              LDR      r0,|L4.2080|
0007a0  6801              LDR      r1,[r0,#0]  ; allFuelCom
0007a2  a021              ADR      r0,|L4.2088|
0007a4  f7fffffe          BL       LogReport
;;;550    					ptr = Mem_malloc(6);
0007a8  2006              MOVS     r0,#6
0007aa  f7fffffe          BL       Mem_malloc
0007ae  4683              MOV      r11,r0
;;;551    					
;;;552    					memset(ptr,0,6);
0007b0  2000              MOVS     r0,#0
0007b2  f8cb0000          STR      r0,[r11,#0]
0007b6  f8ab0004          STRH     r0,[r11,#4]
;;;553    					
;;;554    					temp1 = t_htons(carAllRecord.instantFuel);	 
0007ba  4917              LDR      r1,|L4.2072|
0007bc  f8b10052          LDRH     r0,[r1,#0x52]  ; carAllRecord
0007c0  f7fffffe          BL       t_htons
0007c4  9003              STR      r0,[sp,#0xc]
;;;555    					memcpy(&ptr[0],&temp1,2);
0007c6  f8bd000c          LDRH     r0,[sp,#0xc]
0007ca  f8ab0000          STRH     r0,[r11,#0]
;;;556    					if(carAllRecord.carSpeed > 0)    //todo:需要确认单位
0007ce  4812              LDR      r0,|L4.2072|
0007d0  f8b0002f          LDRH     r0,[r0,#0x2f]  ; carAllRecord
0007d4  2800              CMP      r0,#0
0007d6  dd06              BLE      |L4.2022|
;;;557    						temp1 = t_htons(carAllRecord.carSpeed);
0007d8  490f              LDR      r1,|L4.2072|
0007da  f8b1002f          LDRH     r0,[r1,#0x2f]  ; carAllRecord
0007de  f7fffffe          BL       t_htons
0007e2  9003              STR      r0,[sp,#0xc]
0007e4  e005              B        |L4.2034|
                  |L4.2022|
;;;558    					else 
;;;559    						temp1 = t_htons(gpsMC.speed);
0007e6  4915              LDR      r1,|L4.2108|
0007e8  f8b10069          LDRH     r0,[r1,#0x69]  ; gpsMC
0007ec  f7fffffe          BL       t_htons
0007f0  9003              STR      r0,[sp,#0xc]
                  |L4.2034|
;;;560    					memcpy(&ptr[2],&temp1,2);        //当前车速
0007f2  f8bd000c          LDRH     r0,[sp,#0xc]
0007f6  f8ab0002          STRH     r0,[r11,#2]
;;;561    					
;;;562    					temp1 = t_htons(carAllRecord.engineSpeed);
0007fa  4907              LDR      r1,|L4.2072|
0007fc  8e48              LDRH     r0,[r1,#0x32]  ; carAllRecord
0007fe  f7fffffe          BL       t_htons
000802  9003              STR      r0,[sp,#0xc]
;;;563    					memcpy(&ptr[4],&temp1,2);        //当前转速
000804  f8bd000c          LDRH     r0,[sp,#0xc]
000808  f8ab0004          STRH     r0,[r11,#4]
;;;564    					
;;;565    					if(varOperation.isDataFlow != 1)
00080c  480c              LDR      r0,|L4.2112|
00080e  f890002d          LDRB     r0,[r0,#0x2d]  ; varOperation
000812  e017              B        |L4.2116|
                  |L4.2068|
000814  e059              B        |L4.2250|
                  |L4.2070|
000816  e056              B        |L4.2246|
                  |L4.2072|
                          DCD      carAllRecord
                  |L4.2076|
                          DCD      ptrPIDVars
                  |L4.2080|
                          DCD      allFuelCom
                  |L4.2084|
                          DCD      curFuelTimes
                  |L4.2088|
000828  0d0a3630          DCB      "\r\n60-oil:%d,r:%d;",0
00082c  2d6f696c
000830  3a25642c
000834  723a2564
000838  3b00    
00083a  00                DCB      0
00083b  00                DCB      0
                  |L4.2108|
                          DCD      gpsMC
                  |L4.2112|
                          DCD      varOperation
                  |L4.2116|
000844  2801              CMP      r0,#1
000846  d029              BEQ      |L4.2204|
;;;566    					{
;;;567    						OSMutexPend(CDMASendMutex,0,&err);
000848  aa04              ADD      r2,sp,#0x10
00084a  2100              MOVS     r1,#0
00084c  4823              LDR      r0,|L4.2268|
00084e  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000850  f7fffffe          BL       OSMutexPend
;;;568    						
;;;569    						memcpy(&pPid[50][pPid[50][0]],ptr,6);
000854  4822              LDR      r0,|L4.2272|
000856  f8d000c8          LDR      r0,[r0,#0xc8]  ; pPid
00085a  4921              LDR      r1,|L4.2272|
00085c  f8d110c8          LDR      r1,[r1,#0xc8]  ; pPid
000860  7809              LDRB     r1,[r1,#0]
000862  4408              ADD      r0,r0,r1
000864  f8db1000          LDR      r1,[r11,#0]
000868  6001              STR      r1,[r0,#0]
00086a  f8bb1004          LDRH     r1,[r11,#4]
00086e  8081              STRH     r1,[r0,#4]
;;;570    						pPid[50][0] += 6;
000870  481b              LDR      r0,|L4.2272|
000872  f8d000c8          LDR      r0,[r0,#0xc8]  ; pPid
000876  7800              LDRB     r0,[r0,#0]
000878  1d80              ADDS     r0,r0,#6
00087a  4919              LDR      r1,|L4.2272|
00087c  e000              B        |L4.2176|
                  |L4.2174|
00087e  e01e              B        |L4.2238|
                  |L4.2176|
000880  f8d110c8          LDR      r1,[r1,#0xc8]  ; pPid
000884  7008              STRB     r0,[r1,#0]
;;;571    						cdmaDataToSend->datLength += 6;
000886  4817              LDR      r0,|L4.2276|
000888  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00088a  8800              LDRH     r0,[r0,#0]
00088c  1d80              ADDS     r0,r0,#6
00088e  4915              LDR      r1,|L4.2276|
000890  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000892  8008              STRH     r0,[r1,#0]
;;;572    						
;;;573    						OSMutexPost(CDMASendMutex);
000894  4811              LDR      r0,|L4.2268|
000896  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000898  f7fffffe          BL       OSMutexPost
                  |L4.2204|
;;;574    					}
;;;575    					
;;;576    					
;;;577    					Mem_free(ptr);
00089c  4658              MOV      r0,r11
00089e  f7fffffe          BL       Mem_free
;;;578    					
;;;579    					carAllRecord.totalFuel += carAllRecord.instantFuel;
0008a2  4811              LDR      r0,|L4.2280|
0008a4  68c0              LDR      r0,[r0,#0xc]  ; carAllRecord
0008a6  4910              LDR      r1,|L4.2280|
0008a8  f8b11052          LDRH     r1,[r1,#0x52]  ; carAllRecord
0008ac  4408              ADD      r0,r0,r1
0008ae  490e              LDR      r1,|L4.2280|
0008b0  60c8              STR      r0,[r1,#0xc]  ; carAllRecord
;;;580    					temp         = 0;
0008b2  2700              MOVS     r7,#0
;;;581    					allFuelCom   = 0;
0008b4  2000              MOVS     r0,#0
0008b6  490d              LDR      r1,|L4.2284|
0008b8  6008              STR      r0,[r1,#0]  ; allFuelCom
;;;582    					curFuelTimes = 0;
0008ba  490d              LDR      r1,|L4.2288|
0008bc  7008              STRB     r0,[r1,#0]
                  |L4.2238|
;;;583    				}
;;;584    				break;
0008be  e000              B        |L4.2242|
                  |L4.2240|
;;;585    			default:break;
0008c0  bf00              NOP      
                  |L4.2242|
0008c2  bf00              NOP                            ;497
0008c4  bf00              NOP                            ;422
                  |L4.2246|
0008c6  1c60              ADDS     r0,r4,#1              ;419
0008c8  b2c4              UXTB     r4,r0                 ;419
                  |L4.2250|
0008ca  480a              LDR      r0,|L4.2292|
0008cc  f8b00084          LDRH     r0,[r0,#0x84]         ;419  ; varOperation
0008d0  42a0              CMP      r0,r4                 ;419
0008d2  f73faba0          BGT      |L4.22|
;;;586    		}
;;;587    	}
;;;588    }
0008d6  b00b              ADD      sp,sp,#0x2c
0008d8  e8bd8ff0          POP      {r4-r11,pc}
;;;589    
                          ENDP

                  |L4.2268|
                          DCD      CDMASendMutex
                  |L4.2272|
                          DCD      pPid
                  |L4.2276|
                          DCD      cdmaDataToSend
                  |L4.2280|
                          DCD      carAllRecord
                  |L4.2284|
                          DCD      allFuelCom
                  |L4.2288|
                          DCD      curFuelTimes
                  |L4.2292|
                          DCD      varOperation

                          AREA ||i.TestServer||, CODE, READONLY, ALIGN=2

                  TestServer PROC
;;;178    
;;;179    void TestServer(void)               //用服务器下发的 ID、Baud 等等进行 CAN 配置
000000  b57f              PUSH     {r0-r6,lr}
;;;180    {
;;;181    	uint8_t   err,temp;
;;;182    	CanRxMsg* CAN1_RxMsg;
;;;183    	CAN_InitTypeDef CAN_InitStructure;
;;;184    	varOperation.pidRun = 0;
000002  2000              MOVS     r0,#0
000004  4970              LDR      r1,|L5.456|
000006  f8810095          STRB     r0,[r1,#0x95]
;;;185    	OSSemPend(LoginMes,0,&err);     //1394606080
00000a  aa03              ADD      r2,sp,#0xc
00000c  2100              MOVS     r1,#0
00000e  486f              LDR      r0,|L5.460|
000010  6800              LDR      r0,[r0,#0]  ; LoginMes
000012  f7fffffe          BL       OSSemPend
;;;186    	if((varOperation.pidVersion == 0xFFFFFFFF )||(varOperation.pidNum == 0xFFFF)||(varOperation.busType == 0xFF))
000016  486c              LDR      r0,|L5.456|
000018  f8d0007a          LDR      r0,[r0,#0x7a]  ; varOperation
00001c  1c40              ADDS     r0,r0,#1
00001e  b158              CBZ      r0,|L5.56|
000020  4869              LDR      r0,|L5.456|
000022  f8b00078          LDRH     r0,[r0,#0x78]  ; varOperation
000026  f64f71ff          MOV      r1,#0xffff
00002a  4288              CMP      r0,r1
00002c  d004              BEQ      |L5.56|
00002e  4866              LDR      r0,|L5.456|
000030  f8900086          LDRB     r0,[r0,#0x86]  ; varOperation
000034  28ff              CMP      r0,#0xff
000036  d109              BNE      |L5.76|
                  |L5.56|
;;;187    	{
;;;188    		varOperation.canTest = 0;
000038  2000              MOVS     r0,#0
00003a  4963              LDR      r1,|L5.456|
00003c  f8a10091          STRH     r0,[r1,#0x91]
;;;189    		LogReport("\r\n06-Unknown Equipment;");
000040  a063              ADR      r0,|L5.464|
000042  f7fffffe          BL       LogReport
;;;190    		CANTestChannel();
000046  f7fffffe          BL       CANTestChannel
                  |L5.74|
;;;191    		return;
;;;192    	}	
;;;193    	
;;;194    	if(varOperation.pidVersion == 0)
;;;195    	{
;;;196    		LogReport("\r\n07-ECUID don't Config:%d;",canDataConfig.pidVersion);
;;;197    		CANTestChannel();
;;;198    		return	;
;;;199    	}
;;;200    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能CAN1时钟
;;;201    	
;;;202    	varOperation.canTest = 2;             //Flash中的CAN配置成功
;;;203    	
;;;204    	CAN_DeInit(CAN1);  
;;;205    	CAN_StructInit(&CAN_InitStructure);  
;;;206    	CAN1_BaudSet(canDataConfig.canBaud);  //先用flash中的CAN配置进行测试
;;;207    	CAN1_SetFilter(varOperation.canRxId ,CAN_ID_EXT); 
;;;208    	CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
;;;209    	
;;;210    	dataToSend.canId = canDataConfig.canTxId;
;;;211    	dataToSend.ide   = canDataConfig.canIdType;
;;;212    	dataToSend.pdat  = &configData[9];    //CAN PID 的第一包数据
;;;213    	
;;;214    	OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
;;;215    	
;;;216    	CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
;;;217    	if(err == OS_ERR_NONE)
;;;218    	{
;;;219    		Mem_free(CAN1_RxMsg);
;;;220    		LogReport("\r\n08-ECUID Right:%d;",canDataConfig.pidVersion);    //ECU有回应，配置文件正确
;;;221    		
;;;222    		dataToSend.ide   = canDataConfig.canIdType;
;;;223    		dataToSend.canId = canDataConfig.canTxId;
;;;224    		
;;;225    		temp = ReadECUVersion(canDataConfig.pidVerCmd);
;;;226    		if(temp < 100)                  //读取ECU版本号，读取不成功则不进行动力提升
;;;227    		{
;;;228    			Get_Q_FromECU();            //读取喷油量的原始值，得到当前车辆系数
;;;229    		
;;;230    			CAN_DeInit(CAN1);
;;;231    			CAN_StructInit(&CAN_InitStructure);
;;;232    			CAN1_BaudSet(canDataConfig.canBaud);  
;;;233    			CAN1_SetFilter(varOperation.canRxId ,CAN_ID_EXT);
;;;234    			CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
;;;235    			OSTimeDlyHMSM(0,0,5,0);    //标定结束后，需要等待 20s 读取故障码，若不等待的话，读出来都是拒绝应答
;;;236    			
;;;237    			CAN_DeInit(CAN1);  
;;;238    			CAN_StructInit(&CAN_InitStructure);
;;;239    			CAN1_BaudSet(canDataConfig.canBaud);   
;;;240    			CAN1_ClearFilter();                    
;;;241    			CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
;;;242    			varOperation.canTest = 2;  //启动CAN，开始与ECU进行数据交互
;;;243    		}
;;;244    		else if(temp == 200)           //读取版本号失败（ 配置文件有误 ）
;;;245    		{
;;;246    			CAN_DeInit(CAN1);  
;;;247    			CAN_StructInit(&CAN_InitStructure);
;;;248    			CAN1_BaudSet(canDataConfig.canBaud);   
;;;249    			CAN1_ClearFilter();                    
;;;250    			CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
;;;251    			varOperation.canTest = 2; 
;;;252    			CANTestChannel();
;;;253    		}
;;;254    		else     //版本号读取出来了，但是不能提升动力，那就正常跑吧
;;;255    		{
;;;256    			OSTimeDlyHMSM(0,0,20,0);   //读取故障码是需要时间的
;;;257    		}
;;;258    	}
;;;259    	else
;;;260    	{
;;;261    		LogReport("\r\n09-ECUID Error:%d!",canDataConfig.pidVersion);
;;;262    		CANTestChannel();
;;;263    	}
;;;264        varOperation.pidRun = 1;
;;;265    } 
00004a  bd7f              POP      {r0-r6,pc}
                  |L5.76|
00004c  485e              LDR      r0,|L5.456|
00004e  f8d0007a          LDR      r0,[r0,#0x7a]         ;194  ; varOperation
000052  b938              CBNZ     r0,|L5.100|
000054  4864              LDR      r0,|L5.488|
000056  6801              LDR      r1,[r0,#0]            ;196  ; canDataConfig
000058  a064              ADR      r0,|L5.492|
00005a  f7fffffe          BL       LogReport
00005e  f7fffffe          BL       CANTestChannel
000062  e7f2              B        |L5.74|
                  |L5.100|
000064  2101              MOVS     r1,#1                 ;200
000066  0648              LSLS     r0,r1,#25             ;200
000068  f7fffffe          BL       RCC_APB1PeriphClockCmd
00006c  2002              MOVS     r0,#2                 ;202
00006e  4956              LDR      r1,|L5.456|
000070  f8a10091          STRH     r0,[r1,#0x91]         ;202
000074  4864              LDR      r0,|L5.520|
000076  f7fffffe          BL       CAN_DeInit
00007a  4668              MOV      r0,sp                 ;205
00007c  f7fffffe          BL       CAN_StructInit
000080  4959              LDR      r1,|L5.488|
000082  7c88              LDRB     r0,[r1,#0x12]         ;206  ; canDataConfig
000084  f7fffffe          BL       CAN1_BaudSet
000088  494f              LDR      r1,|L5.456|
00008a  f8d1008c          LDR      r0,[r1,#0x8c]         ;207  ; varOperation
00008e  2104              MOVS     r1,#4                 ;207
000090  f7fffffe          BL       CAN1_SetFilter
000094  2201              MOVS     r2,#1                 ;208
000096  2110              MOVS     r1,#0x10              ;208
000098  485b              LDR      r0,|L5.520|
00009a  f7fffffe          BL       CAN_ITConfig
00009e  4852              LDR      r0,|L5.488|
0000a0  f8d0000a          LDR      r0,[r0,#0xa]          ;210  ; canDataConfig
0000a4  4959              LDR      r1,|L5.524|
0000a6  6008              STR      r0,[r1,#0]            ;210  ; dataToSend
0000a8  484f              LDR      r0,|L5.488|
0000aa  7a40              LDRB     r0,[r0,#9]            ;211  ; canDataConfig
0000ac  6048              STR      r0,[r1,#4]            ;211  ; dataToSend
0000ae  4858              LDR      r0,|L5.528|
0000b0  6088              STR      r0,[r1,#8]            ;212  ; dataToSend
0000b2  460b              MOV      r3,r1                 ;214
0000b4  689a              LDR      r2,[r3,#8]            ;214  ; dataToSend
0000b6  6859              LDR      r1,[r3,#4]            ;214  ; dataToSend
0000b8  6818              LDR      r0,[r3,#0]            ;214  ; dataToSend
0000ba  f7fffffe          BL       OBD_CAN_SendData
0000be  aa03              ADD      r2,sp,#0xc            ;216
0000c0  f44f71fa          MOV      r1,#0x1f4             ;216
0000c4  4853              LDR      r0,|L5.532|
0000c6  6800              LDR      r0,[r0,#0]            ;216  ; canRecieveQ
0000c8  f7fffffe          BL       OSQPend
0000cc  4605              MOV      r5,r0                 ;216
0000ce  f89d000c          LDRB     r0,[sp,#0xc]          ;217
0000d2  2800              CMP      r0,#0                 ;217
0000d4  d16a              BNE      |L5.428|
0000d6  4628              MOV      r0,r5                 ;219
0000d8  f7fffffe          BL       Mem_free
0000dc  4842              LDR      r0,|L5.488|
0000de  6801              LDR      r1,[r0,#0]            ;220  ; canDataConfig
0000e0  a04d              ADR      r0,|L5.536|
0000e2  f7fffffe          BL       LogReport
0000e6  4840              LDR      r0,|L5.488|
0000e8  7a40              LDRB     r0,[r0,#9]            ;222  ; canDataConfig
0000ea  4948              LDR      r1,|L5.524|
0000ec  6048              STR      r0,[r1,#4]            ;222  ; dataToSend
0000ee  483e              LDR      r0,|L5.488|
0000f0  f8d0000a          LDR      r0,[r0,#0xa]          ;223  ; canDataConfig
0000f4  6008              STR      r0,[r1,#0]            ;223  ; dataToSend
0000f6  483c              LDR      r0,|L5.488|
0000f8  3013              ADDS     r0,r0,#0x13           ;225
0000fa  f7fffffe          BL       ReadECUVersion
0000fe  4604              MOV      r4,r0                 ;225
000100  2c64              CMP      r4,#0x64              ;226
000102  da32              BGE      |L5.362|
000104  f7fffffe          BL       Get_Q_FromECU
000108  483f              LDR      r0,|L5.520|
00010a  f7fffffe          BL       CAN_DeInit
00010e  4668              MOV      r0,sp                 ;231
000110  f7fffffe          BL       CAN_StructInit
000114  4934              LDR      r1,|L5.488|
000116  7c88              LDRB     r0,[r1,#0x12]         ;232  ; canDataConfig
000118  f7fffffe          BL       CAN1_BaudSet
00011c  492a              LDR      r1,|L5.456|
00011e  f8d1008c          LDR      r0,[r1,#0x8c]         ;233  ; varOperation
000122  2104              MOVS     r1,#4                 ;233
000124  f7fffffe          BL       CAN1_SetFilter
000128  2201              MOVS     r2,#1                 ;234
00012a  2110              MOVS     r1,#0x10              ;234
00012c  4836              LDR      r0,|L5.520|
00012e  f7fffffe          BL       CAN_ITConfig
000132  2300              MOVS     r3,#0                 ;235
000134  2205              MOVS     r2,#5                 ;235
000136  4619              MOV      r1,r3                 ;235
000138  4618              MOV      r0,r3                 ;235
00013a  f7fffffe          BL       OSTimeDlyHMSM
00013e  4832              LDR      r0,|L5.520|
000140  f7fffffe          BL       CAN_DeInit
000144  4668              MOV      r0,sp                 ;238
000146  f7fffffe          BL       CAN_StructInit
00014a  4927              LDR      r1,|L5.488|
00014c  7c88              LDRB     r0,[r1,#0x12]         ;239  ; canDataConfig
00014e  f7fffffe          BL       CAN1_BaudSet
000152  f7fffffe          BL       CAN1_ClearFilter
000156  2201              MOVS     r2,#1                 ;241
000158  2110              MOVS     r1,#0x10              ;241
00015a  482b              LDR      r0,|L5.520|
00015c  f7fffffe          BL       CAN_ITConfig
000160  2002              MOVS     r0,#2                 ;242
000162  4919              LDR      r1,|L5.456|
000164  f8a10091          STRH     r0,[r1,#0x91]         ;242
000168  e027              B        |L5.442|
                  |L5.362|
00016a  2cc8              CMP      r4,#0xc8              ;244
00016c  d117              BNE      |L5.414|
00016e  4826              LDR      r0,|L5.520|
000170  f7fffffe          BL       CAN_DeInit
000174  4668              MOV      r0,sp                 ;247
000176  f7fffffe          BL       CAN_StructInit
00017a  491b              LDR      r1,|L5.488|
00017c  7c88              LDRB     r0,[r1,#0x12]         ;248  ; canDataConfig
00017e  f7fffffe          BL       CAN1_BaudSet
000182  f7fffffe          BL       CAN1_ClearFilter
000186  2201              MOVS     r2,#1                 ;250
000188  2110              MOVS     r1,#0x10              ;250
00018a  481f              LDR      r0,|L5.520|
00018c  f7fffffe          BL       CAN_ITConfig
000190  2002              MOVS     r0,#2                 ;251
000192  490d              LDR      r1,|L5.456|
000194  f8a10091          STRH     r0,[r1,#0x91]         ;251
000198  f7fffffe          BL       CANTestChannel
00019c  e00d              B        |L5.442|
                  |L5.414|
00019e  2300              MOVS     r3,#0                 ;256
0001a0  2214              MOVS     r2,#0x14              ;256
0001a2  4619              MOV      r1,r3                 ;256
0001a4  4618              MOV      r0,r3                 ;256
0001a6  f7fffffe          BL       OSTimeDlyHMSM
0001aa  e006              B        |L5.442|
                  |L5.428|
0001ac  480e              LDR      r0,|L5.488|
0001ae  6801              LDR      r1,[r0,#0]            ;261  ; canDataConfig
0001b0  a01f              ADR      r0,|L5.560|
0001b2  f7fffffe          BL       LogReport
0001b6  f7fffffe          BL       CANTestChannel
                  |L5.442|
0001ba  2001              MOVS     r0,#1                 ;264
0001bc  4902              LDR      r1,|L5.456|
0001be  f8810095          STRB     r0,[r1,#0x95]         ;264
0001c2  bf00              NOP      
0001c4  e741              B        |L5.74|
;;;266    
                          ENDP

0001c6  0000              DCW      0x0000
                  |L5.456|
                          DCD      varOperation
                  |L5.460|
                          DCD      LoginMes
                  |L5.464|
0001d0  0d0a3036          DCB      "\r\n06-Unknown Equipment;",0
0001d4  2d556e6b
0001d8  6e6f776e
0001dc  20457175
0001e0  69706d65
0001e4  6e743b00
                  |L5.488|
                          DCD      canDataConfig
                  |L5.492|
0001ec  0d0a3037          DCB      "\r\n07-ECUID don't Config:%d;",0
0001f0  2d454355
0001f4  49442064
0001f8  6f6e2774
0001fc  20436f6e
000200  6669673a
000204  25643b00
                  |L5.520|
                          DCD      0x40006400
                  |L5.524|
                          DCD      dataToSend
                  |L5.528|
                          DCD      configData+0x9
                  |L5.532|
                          DCD      canRecieveQ
                  |L5.536|
000218  0d0a3038          DCB      "\r\n08-ECUID Right:%d;",0
00021c  2d454355
000220  49442052
000224  69676874
000228  3a25643b
00022c  00      
00022d  00                DCB      0
00022e  00                DCB      0
00022f  00                DCB      0
                  |L5.560|
000230  0d0a3039          DCB      "\r\n09-ECUID Error:%d!",0
000234  2d454355
000238  49442045
00023c  72726f72
000240  3a256421
000244  00      
000245  00                DCB      0
000246  00                DCB      0
000247  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  dataToSend
                          %        12

                          AREA ||.data||, DATA, ALIGN=2

                  pidManyBag
000000  30000000          DCB      0x30,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  curFuelTimes
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  allFuelCom
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\OBD\\OBDTask.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REV16|
#line 465 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.2.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_OBDTask_c_bbcd6d9f____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REVSH|
#line 480
|__asm___9_OBDTask_c_bbcd6d9f____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____RRX|
#line 667
|__asm___9_OBDTask_c_bbcd6d9f____RRX| PROC
#line 668

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
