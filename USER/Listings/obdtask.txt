; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\obdtask.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\obdtask.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I..\CORE -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\obdtask.crf ..\OBD\OBDTask.c]
                          THUMB

                          AREA ||i.CANTestChannel||, CODE, READONLY, ALIGN=2

                  CANTestChannel PROC
;;;189    
;;;190    void CANTestChannel(void )
000000  b57f              PUSH     {r0-r6,lr}
;;;191    {
;;;192    	uint8_t err,i;
;;;193    	CanRxMsg* CAN1_RxMsg;
;;;194    	uint8_t*  ptrOK;
;;;195    	CAN_InitTypeDef   CAN_InitStructure;
;;;196    	
;;;197    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能CAN1时钟
000002  2101              MOVS     r1,#1
000004  0648              LSLS     r0,r1,#25
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;198    
;;;199    	varOperation.canTest = 0;
00000a  2000              MOVS     r0,#0
00000c  4993              LDR      r1,|L1.604|
00000e  f8a10090          STRH     r0,[r1,#0x90]
;;;200    	for(i = 0;i<NUMOfCANBaud;i++)       //获得CAN的波特率
000012  2400              MOVS     r4,#0
000014  e02b              B        |L1.110|
                  |L1.22|
;;;201    	{
;;;202    		CAN_DeInit(CAN1);
000016  4892              LDR      r0,|L1.608|
000018  f7fffffe          BL       CAN_DeInit
;;;203    		CAN_StructInit(&CAN_InitStructure);
00001c  4668              MOV      r0,sp
00001e  f7fffffe          BL       CAN_StructInit
;;;204    		CAN1_BaudSet(canBaudEnum[i]); 
000022  4990              LDR      r1,|L1.612|
000024  5d08              LDRB     r0,[r1,r4]
000026  f7fffffe          BL       CAN1_BaudSet
;;;205    		CAN1_ClearFilter();
00002a  f7fffffe          BL       CAN1_ClearFilter
;;;206    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);
00002e  2201              MOVS     r2,#1
000030  2110              MOVS     r1,#0x10
000032  488b              LDR      r0,|L1.608|
000034  f7fffffe          BL       CAN_ITConfig
;;;207    		
;;;208    		//只要此波特率下有数据，CAN波特率就确定了
;;;209    		CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
000038  aa03              ADD      r2,sp,#0xc
00003a  f44f71fa          MOV      r1,#0x1f4
00003e  488a              LDR      r0,|L1.616|
000040  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000042  f7fffffe          BL       OSQPend
000046  4606              MOV      r6,r0
;;;210    		if(err == OS_ERR_NONE)
000048  f89d000c          LDRB     r0,[sp,#0xc]
00004c  b968              CBNZ     r0,|L1.106|
;;;211    		{
;;;212    			varOperation.canBaud = canBaudEnum[i];
00004e  4885              LDR      r0,|L1.612|
000050  5d00              LDRB     r0,[r0,r4]
000052  4982              LDR      r1,|L1.604|
000054  f881008f          STRB     r0,[r1,#0x8f]
;;;213    			Mem_free(CAN1_RxMsg);
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       Mem_free
;;;214    			LogReport("Baud %d Test Success.",canBaudEnum[i]);
00005e  4881              LDR      r0,|L1.612|
000060  5d01              LDRB     r1,[r0,r4]
000062  a082              ADR      r0,|L1.620|
000064  f7fffffe          BL       LogReport
;;;215    			break;
000068  e003              B        |L1.114|
                  |L1.106|
00006a  1c60              ADDS     r0,r4,#1              ;200
00006c  b2c4              UXTB     r4,r0                 ;200
                  |L1.110|
00006e  2c03              CMP      r4,#3                 ;200
000070  dbd1              BLT      |L1.22|
                  |L1.114|
000072  bf00              NOP      
;;;216    		}
;;;217    	}//如果波特率没有确定，就一直去确定波特率
;;;218    	if((i >= NUMOfCANBaud) && (err != OS_ERR_NONE))
000074  2c03              CMP      r4,#3
000076  db0a              BLT      |L1.142|
000078  f89d000c          LDRB     r0,[sp,#0xc]
00007c  b138              CBZ      r0,|L1.142|
;;;219    	{
;;;220    		LogReport("Baud Test Fail!!!");
00007e  a081              ADR      r0,|L1.644|
000080  f7fffffe          BL       LogReport
;;;221    		varOperation.canTest = 0;
000084  2000              MOVS     r0,#0
000086  4975              LDR      r1,|L1.604|
000088  f8a10090          STRH     r0,[r1,#0x90]
;;;222    		goto idOK;
00008c  e0e0              B        |L1.592|
                  |L1.142|
;;;223    	}
;;;224    		
;;;225    	dataToSend.ide = CAN_ID_EXT;
00008e  2004              MOVS     r0,#4
000090  4981              LDR      r1,|L1.664|
000092  6048              STR      r0,[r1,#4]  ; dataToSend
;;;226    	for(i=0;i<NUMOfCANID_EXT;i++)
000094  2400              MOVS     r4,#0
000096  e0cc              B        |L1.562|
                  |L1.152|
;;;227    	{
;;;228    		varOperation.canRxId  =(canIdExt[i]>>24) &0x000000FF;
000098  4880              LDR      r0,|L1.668|
00009a  f8500024          LDR      r0,[r0,r4,LSL #2]
00009e  0e00              LSRS     r0,r0,#24
0000a0  496e              LDR      r1,|L1.604|
0000a2  f8c1008b          STR      r0,[r1,#0x8b]  ; varOperation
;;;229    		varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i]>>16) & 0x000000FF);
0000a6  487d              LDR      r0,|L1.668|
0000a8  f8500024          LDR      r0,[r0,r4,LSL #2]
0000ac  f3c04007          UBFX     r0,r0,#16,#8
0000b0  f8d1108b          LDR      r1,[r1,#0x8b]  ; varOperation
0000b4  eb002001          ADD      r0,r0,r1,LSL #8
0000b8  4968              LDR      r1,|L1.604|
0000ba  f8c1008b          STR      r0,[r1,#0x8b]  ; varOperation
;;;230    		varOperation.canRxId  =(varOperation.canRxId  << 8)+(canIdExt[i]&0x000000FF);
0000be  4608              MOV      r0,r1
0000c0  f8d0108b          LDR      r1,[r0,#0x8b]  ; varOperation
0000c4  4875              LDR      r0,|L1.668|
0000c6  f8500024          LDR      r0,[r0,r4,LSL #2]
0000ca  f361201f          BFI      r0,r1,#8,#24
0000ce  4963              LDR      r1,|L1.604|
0000d0  f8c1008b          STR      r0,[r1,#0x8b]  ; varOperation
;;;231    		varOperation.canRxId  =(varOperation.canRxId  << 8)+((canIdExt[i]>>8) &0x000000FF);
0000d4  4871              LDR      r0,|L1.668|
0000d6  f8300024          LDRH     r0,[r0,r4,LSL #2]
0000da  f3c02007          UBFX     r0,r0,#8,#8
0000de  f8d1108b          LDR      r1,[r1,#0x8b]  ; varOperation
0000e2  eb002001          ADD      r0,r0,r1,LSL #8
0000e6  495d              LDR      r1,|L1.604|
0000e8  f8c1008b          STR      r0,[r1,#0x8b]  ; varOperation
;;;232    		
;;;233    		CAN_DeInit(CAN1);
0000ec  485c              LDR      r0,|L1.608|
0000ee  f7fffffe          BL       CAN_DeInit
;;;234    		CAN_StructInit(&CAN_InitStructure);
0000f2  4668              MOV      r0,sp
0000f4  f7fffffe          BL       CAN_StructInit
;;;235    		CAN1_BaudSet(varOperation.canBaud);
0000f8  4958              LDR      r1,|L1.604|
0000fa  f891008f          LDRB     r0,[r1,#0x8f]  ; varOperation
0000fe  f7fffffe          BL       CAN1_BaudSet
;;;236    		CAN1_SetFilter(varOperation.canRxId ,CAN_ID_EXT);
000102  4956              LDR      r1,|L1.604|
000104  f8d1008b          LDR      r0,[r1,#0x8b]  ; varOperation
000108  2104              MOVS     r1,#4
00010a  f7fffffe          BL       CAN1_SetFilter
;;;237    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
00010e  2201              MOVS     r2,#1
000110  2110              MOVS     r1,#0x10
000112  4853              LDR      r0,|L1.608|
000114  f7fffffe          BL       CAN_ITConfig
;;;238    		
;;;239    		dataToSend.canId = canIdExt[i];
000118  4860              LDR      r0,|L1.668|
00011a  f8500024          LDR      r0,[r0,r4,LSL #2]
00011e  495e              LDR      r1,|L1.664|
000120  6008              STR      r0,[r1,#0]  ; dataToSend
;;;240    		dataToSend.ide     = CAN_ID_EXT;
000122  2004              MOVS     r0,#4
000124  6048              STR      r0,[r1,#4]  ; dataToSend
;;;241    		varOperation.canTest = 0;
000126  2000              MOVS     r0,#0
000128  494c              LDR      r1,|L1.604|
00012a  f8a10090          STRH     r0,[r1,#0x90]
;;;242    		ReadECUVersion(); 
00012e  f7fffffe          BL       ReadECUVersion
;;;243    		
;;;244    	    if(varOperation.ecuVersion[0] != 0)
000132  484a              LDR      r0,|L1.604|
000134  f8900064          LDRB     r0,[r0,#0x64]  ; varOperation
000138  2800              CMP      r0,#0
00013a  d078              BEQ      |L1.558|
;;;245    		{
;;;246    			i=0;
00013c  2400              MOVS     r4,#0
;;;247    			ptrOK = Mem_malloc(60);
00013e  203c              MOVS     r0,#0x3c
000140  f7fffffe          BL       Mem_malloc
000144  4605              MOV      r5,r0
;;;248    			ptrOK[i++] = 32;
000146  2220              MOVS     r2,#0x20
000148  4621              MOV      r1,r4
00014a  1c64              ADDS     r4,r4,#1
00014c  546a              STRB     r2,[r5,r1]
;;;249    			ptrOK[i++] = 0x50;
00014e  2250              MOVS     r2,#0x50
000150  4621              MOV      r1,r4
000152  1c64              ADDS     r4,r4,#1
000154  546a              STRB     r2,[r5,r1]
;;;250    			ptrOK[i++] = 0x13;
000156  2213              MOVS     r2,#0x13
000158  4621              MOV      r1,r4
00015a  1c64              ADDS     r4,r4,#1
00015c  546a              STRB     r2,[r5,r1]
;;;251    			ptrOK[i++] = varOperation.canBaud;
00015e  483f              LDR      r0,|L1.604|
000160  f890208f          LDRB     r2,[r0,#0x8f]  ; varOperation
000164  4621              MOV      r1,r4
000166  1c64              ADDS     r4,r4,#1
000168  546a              STRB     r2,[r5,r1]
;;;252    			ptrOK[i++] = (varOperation.canRxId>>24) & 0x000000FF;ptrOK[i++] = (varOperation.canRxId>>16) & 0x000000FF;
00016a  f8d0008b          LDR      r0,[r0,#0x8b]  ; varOperation
00016e  0e01              LSRS     r1,r0,#24
000170  4622              MOV      r2,r4
000172  1c64              ADDS     r4,r4,#1
000174  54a9              STRB     r1,[r5,r2]
000176  4839              LDR      r0,|L1.604|
000178  f8d0008b          LDR      r0,[r0,#0x8b]  ; varOperation
00017c  f3c04207          UBFX     r2,r0,#16,#8
000180  4621              MOV      r1,r4
000182  1c64              ADDS     r4,r4,#1
000184  546a              STRB     r2,[r5,r1]
;;;253    			ptrOK[i++] = (varOperation.canRxId>>8) & 0x000000FF;ptrOK[i++] = (varOperation.canRxId>>0) & 0x000000FF;
000186  4835              LDR      r0,|L1.604|
000188  f8b0008b          LDRH     r0,[r0,#0x8b]  ; varOperation
00018c  f3c02207          UBFX     r2,r0,#8,#8
000190  4621              MOV      r1,r4
000192  1c64              ADDS     r4,r4,#1
000194  546a              STRB     r2,[r5,r1]
000196  4831              LDR      r0,|L1.604|
000198  f890208b          LDRB     r2,[r0,#0x8b]  ; varOperation
00019c  4620              MOV      r0,r4
00019e  1c61              ADDS     r1,r4,#1
0001a0  b2cc              UXTB     r4,r1
0001a2  542a              STRB     r2,[r5,r0]
;;;254    			ptrOK[i++] = (dataToSend.canId>>24) & 0x000000FF;ptrOK[i++] = (dataToSend.canId>>16) & 0x000000FF;
0001a4  483c              LDR      r0,|L1.664|
0001a6  6800              LDR      r0,[r0,#0]  ; dataToSend
0001a8  0e00              LSRS     r0,r0,#24
0001aa  4621              MOV      r1,r4
0001ac  1c62              ADDS     r2,r4,#1
0001ae  b2d4              UXTB     r4,r2
0001b0  5468              STRB     r0,[r5,r1]
0001b2  4839              LDR      r0,|L1.664|
0001b4  6800              LDR      r0,[r0,#0]  ; dataToSend
0001b6  f3c04207          UBFX     r2,r0,#16,#8
0001ba  4620              MOV      r0,r4
0001bc  1c61              ADDS     r1,r4,#1
0001be  b2cc              UXTB     r4,r1
0001c0  542a              STRB     r2,[r5,r0]
;;;255    			ptrOK[i++] = (dataToSend.canId>>8) & 0x000000FF;ptrOK[i++] = (dataToSend.canId>>0) & 0x000000FF;
0001c2  4835              LDR      r0,|L1.664|
0001c4  8800              LDRH     r0,[r0,#0]  ; dataToSend
0001c6  f3c02207          UBFX     r2,r0,#8,#8
0001ca  4620              MOV      r0,r4
0001cc  1c61              ADDS     r1,r4,#1
0001ce  b2cc              UXTB     r4,r1
0001d0  542a              STRB     r2,[r5,r0]
0001d2  4831              LDR      r0,|L1.664|
0001d4  7802              LDRB     r2,[r0,#0]  ; dataToSend
0001d6  4620              MOV      r0,r4
0001d8  1c61              ADDS     r1,r4,#1
0001da  b2cc              UXTB     r4,r1
0001dc  542a              STRB     r2,[r5,r0]
;;;256    			memcpy(&ptrOK[i],varOperation.ecuVersion,20);
0001de  1928              ADDS     r0,r5,r4
0001e0  2214              MOVS     r2,#0x14
0001e2  491e              LDR      r1,|L1.604|
0001e4  3164              ADDS     r1,r1,#0x64
0001e6  f7fffffe          BL       __aeabi_memcpy
;;;257    			
;;;258    			OSMutexPend(CDMASendMutex,0,&err);
0001ea  aa03              ADD      r2,sp,#0xc
0001ec  2100              MOVS     r1,#0
0001ee  482c              LDR      r0,|L1.672|
0001f0  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0001f2  f7fffffe          BL       OSMutexPend
;;;259    				
;;;260    			memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],ptrOK,ptrOK[0]);
0001f6  492b              LDR      r1,|L1.676|
0001f8  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0001fa  6849              LDR      r1,[r1,#4]
0001fc  4b29              LDR      r3,|L1.676|
0001fe  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
000200  881b              LDRH     r3,[r3,#0]
000202  18c8              ADDS     r0,r1,r3
000204  782a              LDRB     r2,[r5,#0]
000206  4629              MOV      r1,r5
000208  f7fffffe          BL       __aeabi_memcpy
;;;261    			cdmaDataToSend->datLength += ptrOK[0];
00020c  4825              LDR      r0,|L1.676|
00020e  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000210  8800              LDRH     r0,[r0,#0]
000212  7829              LDRB     r1,[r5,#0]
000214  4408              ADD      r0,r0,r1
000216  4923              LDR      r1,|L1.676|
000218  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00021a  8008              STRH     r0,[r1,#0]
;;;262    
;;;263    			OSMutexPost(CDMASendMutex);
00021c  4820              LDR      r0,|L1.672|
00021e  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000220  f7fffffe          BL       OSMutexPost
;;;264    			
;;;265    			Mem_free(ptrOK);
000224  4628              MOV      r0,r5
000226  f7fffffe          BL       Mem_free
;;;266    			break;
00022a  e005              B        |L1.568|
00022c  e7ff              B        |L1.558|
                  |L1.558|
00022e  1c60              ADDS     r0,r4,#1              ;226
000230  b2c4              UXTB     r4,r0                 ;226
                  |L1.562|
000232  2c04              CMP      r4,#4                 ;226
000234  f6ffaf30          BLT      |L1.152|
                  |L1.568|
000238  bf00              NOP      
;;;267    		}
;;;268    	}
;;;269    	if(i >= NUMOfCANID_EXT && varOperation.canTest == 0)
00023a  2c04              CMP      r4,#4
00023c  db07              BLT      |L1.590|
00023e  4807              LDR      r0,|L1.604|
000240  f8b00090          LDRH     r0,[r0,#0x90]  ; varOperation
000244  b918              CBNZ     r0,|L1.590|
;;;270    	{
;;;271    		LogReport("CANID EXT Test Fail!");
000246  a018              ADR      r0,|L1.680|
000248  f7fffffe          BL       LogReport
                  |L1.588|
;;;272    		return;
;;;273    	}
;;;274    //	SafeALG();
;;;275    //	Get_Q_FromECU();
;;;276    	
;;;277    
;;;278    idOK:
;;;279    	varOperation.canTest = 0;
;;;280    	return;
;;;281    }
00024c  bd7f              POP      {r0-r6,pc}
                  |L1.590|
00024e  bf00              NOP                            ;278
                  |L1.592|
000250  2000              MOVS     r0,#0                 ;279
000252  4902              LDR      r1,|L1.604|
000254  f8a10090          STRH     r0,[r1,#0x90]         ;279
000258  bf00              NOP                            ;280
00025a  e7f7              B        |L1.588|
;;;282    extern VARConfig* ptrPIDVars;//指向第二配置区
                          ENDP

                  |L1.604|
                          DCD      varOperation
                  |L1.608|
                          DCD      0x40006400
                  |L1.612|
                          DCD      canBaudEnum
                  |L1.616|
                          DCD      canRecieveQ
                  |L1.620|
00026c  42617564          DCB      "Baud %d Test Success.",0
000270  20256420
000274  54657374
000278  20537563
00027c  63657373
000280  2e00    
000282  00                DCB      0
000283  00                DCB      0
                  |L1.644|
000284  42617564          DCB      "Baud Test Fail!!!",0
000288  20546573
00028c  74204661
000290  696c2121
000294  2100    
000296  00                DCB      0
000297  00                DCB      0
                  |L1.664|
                          DCD      dataToSend
                  |L1.668|
                          DCD      canIdExt
                  |L1.672|
                          DCD      CDMASendMutex
                  |L1.676|
                          DCD      cdmaDataToSend
                  |L1.680|
0002a8  43414e49          DCB      "CANID EXT Test Fail!",0
0002ac  44204558
0002b0  54205465
0002b4  73742046
0002b8  61696c21
0002bc  00      
0002bd  00                DCB      0
0002be  00                DCB      0
0002bf  00                DCB      0

                          AREA ||i.Get_Q_FromECU||, CODE, READONLY, ALIGN=2

                  Get_Q_FromECU PROC
;;;337    const uint16_t qMax = 0x045C;
;;;338    void Get_Q_FromECU(void)
000000  e92d4ffe          PUSH     {r1-r11,lr}
;;;339    {
;;;340    	uint8_t* ptrSetCmd;
;;;341    	CanRxMsg* CAN1_RxMsg;
;;;342    	uint8_t  i,err;
;;;343    	uint16_t dat1,dat2,datSma;
;;;344    	uint8_t qNum = 0;
000004  2500              MOVS     r5,#0
;;;345    	//temp = 0;
;;;346    	uint8_t textEcu[8] = {0x05,0x23,0x05,0x60,0xF8,0x02,0x00,0x00};
000006  a13a              ADR      r1,|L2.240|
000008  c903              LDM      r1,{r0,r1}
00000a  e9cd0100          STRD     r0,r1,[sp,#0]
;;;347    	
;;;348    	ptrSetCmd  = Mem_malloc(8);
00000e  2008              MOVS     r0,#8
000010  f7fffffe          BL       Mem_malloc
000014  4681              MOV      r9,r0
;;;349    
;;;350    	memcpy(ptrSetCmd,textEcu,8);
000016  9800              LDR      r0,[sp,#0]
000018  f8c90000          STR      r0,[r9,#0]
00001c  9801              LDR      r0,[sp,#4]
00001e  f8c90004          STR      r0,[r9,#4]
;;;351    	dataToSend.pdat   = textEcu;
000022  4935              LDR      r1,|L2.248|
000024  f8c1d008          STR      sp,[r1,#8]  ; dataToSend
;;;352    	OBD_CAN_SendData(dataToSend); 
000028  4608              MOV      r0,r1
00002a  c807              LDM      r0,{r0-r2}
00002c  f7fffffe          BL       OBD_CAN_SendData
;;;353    	CAN1_RxMsg = OSQPend(canRecieveQ,50,&err);
000030  aa02              ADD      r2,sp,#8
000032  2132              MOVS     r1,#0x32
000034  4831              LDR      r0,|L2.252|
000036  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000038  f7fffffe          BL       OSQPend
00003c  4607              MOV      r7,r0
;;;354    	if(err == OS_ERR_NONE)
00003e  f89d0008          LDRB     r0,[sp,#8]
000042  2800              CMP      r0,#0
000044  d151              BNE      |L2.234|
;;;355    	{
;;;356    		qNum = CAN1_RxMsg->Data[2];
000046  7b7d              LDRB     r5,[r7,#0xd]
;;;357    		dat1 = textEcu[3];
000048  f89d4003          LDRB     r4,[sp,#3]
;;;358    		dat2 = textEcu[4]+qNum*2;
00004c  f89d0004          LDRB     r0,[sp,#4]
000050  eb000845          ADD      r8,r0,r5,LSL #1
;;;359    		if(dat2 >= 256)
000054  f1b80fff          CMP      r8,#0xff
000058  dd01              BLE      |L2.94|
;;;360    			dat1++;
00005a  1c60              ADDS     r0,r4,#1
00005c  b284              UXTH     r4,r0
                  |L2.94|
;;;361    		textEcu[3] = dat1;
00005e  b2e0              UXTB     r0,r4
000060  f88d0003          STRB     r0,[sp,#3]
;;;362    		textEcu[4] += qNum*2;
000064  f89d0004          LDRB     r0,[sp,#4]
000068  eb000045          ADD      r0,r0,r5,LSL #1
00006c  b2c0              UXTB     r0,r0
00006e  f88d0004          STRB     r0,[sp,#4]
;;;363    		Mem_free(CAN1_RxMsg);
000072  4638              MOV      r0,r7
000074  f7fffffe          BL       Mem_free
;;;364    		for(i=0;i<qNum;i++)
000078  2600              MOVS     r6,#0
00007a  e034              B        |L2.230|
                  |L2.124|
;;;365    		{
;;;366    			textEcu[4] += 2;
00007c  f89d0004          LDRB     r0,[sp,#4]
000080  1c80              ADDS     r0,r0,#2
000082  b2c0              UXTB     r0,r0
000084  f88d0004          STRB     r0,[sp,#4]
;;;367    			memcpy(ptrSetCmd,textEcu,8);
000088  9800              LDR      r0,[sp,#0]
00008a  f8c90000          STR      r0,[r9,#0]
00008e  9801              LDR      r0,[sp,#4]
000090  f8c90004          STR      r0,[r9,#4]
;;;368    			dataToSend.pdat   = textEcu;
000094  4918              LDR      r1,|L2.248|
000096  f8c1d008          STR      sp,[r1,#8]  ; dataToSend
;;;369    			OBD_CAN_SendData(dataToSend); 
00009a  4608              MOV      r0,r1
00009c  c807              LDM      r0,{r0-r2}
00009e  f7fffffe          BL       OBD_CAN_SendData
;;;370    			CAN1_RxMsg = OSQPend(canRecieveQ,50,&err);
0000a2  aa02              ADD      r2,sp,#8
0000a4  2132              MOVS     r1,#0x32
0000a6  4815              LDR      r0,|L2.252|
0000a8  6800              LDR      r0,[r0,#0]  ; canRecieveQ
0000aa  f7fffffe          BL       OSQPend
0000ae  4607              MOV      r7,r0
;;;371    			if(err == OS_ERR_NONE)
0000b0  f89d0008          LDRB     r0,[sp,#8]
0000b4  b9a8              CBNZ     r0,|L2.226|
;;;372    			{
;;;373    				dat1 = (dat1 << 8) + CAN1_RxMsg->Data[2];
0000b6  7b78              LDRB     r0,[r7,#0xd]
0000b8  eb002004          ADD      r0,r0,r4,LSL #8
0000bc  b284              UXTH     r4,r0
;;;374    				datSma = dat1/20;
0000be  2014              MOVS     r0,#0x14
0000c0  fb94f0f0          SDIV     r0,r4,r0
0000c4  fa1ffa80          UXTH     r10,r0
;;;375    				dat2 = dat1 + datSma;
0000c8  eb04000a          ADD      r0,r4,r10
0000cc  fa1ff880          UXTH     r8,r0
;;;376    				
;;;377    				Mem_free(CAN1_RxMsg);
0000d0  4638              MOV      r0,r7
0000d2  f7fffffe          BL       Mem_free
;;;378    				LogReport("ECU_Q_Data-%d:%d,%d",i+1,dat1,dat2);
0000d6  4643              MOV      r3,r8
0000d8  4622              MOV      r2,r4
0000da  1c71              ADDS     r1,r6,#1
0000dc  a008              ADR      r0,|L2.256|
0000de  f7fffffe          BL       LogReport
                  |L2.226|
0000e2  1c70              ADDS     r0,r6,#1              ;364
0000e4  b2c6              UXTB     r6,r0                 ;364
                  |L2.230|
0000e6  42ae              CMP      r6,r5                 ;364
0000e8  dbc8              BLT      |L2.124|
                  |L2.234|
;;;379    			}
;;;380    		}
;;;381    	}	
;;;382    	return;
;;;383    }
0000ea  e8bd8ffe          POP      {r1-r11,pc}
;;;384    
                          ENDP

0000ee  0000              DCW      0x0000
                  |L2.240|
0000f0  05230560          DCB      5,"#",5,"`",248,2,0
0000f4  f80200  
0000f7  00                DCB      0
                  |L2.248|
                          DCD      dataToSend
                  |L2.252|
                          DCD      canRecieveQ
                  |L2.256|
000100  4543555f          DCB      "ECU_Q_Data-%d:%d,%d",0
000104  515f4461
000108  74612d25
00010c  643a2564
000110  2c256400

                          AREA ||i.OBDTask||, CODE, READONLY, ALIGN=2

                  OBDTask PROC
;;;11     
;;;12     void OBDTask(void *pdata)
000000  b51c              PUSH     {r2-r4,lr}
;;;13     {
;;;14     	INT8U     err;
;;;15     	uint8_t   i      = 0;
000002  f04f0800          MOV      r8,#0
;;;16     	uint8_t   cmdLen = 0;        //封包的时候要减去指令的长度
000006  2600              MOVS     r6,#0
;;;17     	uint8_t   cmdNum = 0;        //指令序号
000008  46b1              MOV      r9,r6
;;;18     	uint8_t   cmdManyPackNum = 0;//要接受的多包的数量
00000a  46b2              MOV      r10,r6
;;;19     	uint32_t time1=0;
00000c  46b3              MOV      r11,r6
;;;20     	uint32_t time2=0;
00000e  2000              MOVS     r0,#0
000010  9000              STR      r0,[sp,#0]
;;;21     	
;;;22     	
;;;23     	CanRxMsg* CAN1_RxMsg;        //指向接收到的OBD信息
;;;24     	uint8_t * can1_Txbuff;       //指向要发送的OBD信息
;;;25     	uint8_t * ptrSaveBuff;
;;;26     	
;;;27     	
;;;28     	CAN1Config();                //CAN 配置
000012  f7fffffe          BL       CAN1Config
;;;29     	OSTimeDlyHMSM(0,0,10,4);
000016  2304              MOVS     r3,#4
000018  220a              MOVS     r2,#0xa
00001a  2100              MOVS     r1,#0
00001c  4608              MOV      r0,r1
00001e  f7fffffe          BL       OSTimeDlyHMSM
;;;30     	TestServer();                //测试服务器
000022  f7fffffe          BL       TestServer
;;;31     	
;;;32     //	Get_Q_FromECU();
;;;33     	while(1)
000026  e127              B        |L3.632|
                  |L3.40|
;;;34     	{	
;;;35     		if(varOperation.canTest == 0)//配置文件不成功，则停止CAN
000028  4894              LDR      r0,|L3.636|
00002a  f8b00090          LDRH     r0,[r0,#0x90]  ; varOperation
00002e  b930              CBNZ     r0,|L3.62|
;;;36     		{
;;;37     			OSTimeDlyHMSM(0,0,1,0);
000030  2300              MOVS     r3,#0
000032  2201              MOVS     r2,#1
000034  4619              MOV      r1,r3
000036  4618              MOV      r0,r3
000038  f7fffffe          BL       OSTimeDlyHMSM
;;;38     			continue;
00003c  e11c              B        |L3.632|
                  |L3.62|
;;;39     		}
;;;40     		time1 = RTC_GetCounter();
00003e  f7fffffe          BL       RTC_GetCounter
000042  4683              MOV      r11,r0
;;;41     		if((time1-time2)>90)//一分半采集一次喷油量，上报当前值和计算值。
000044  9800              LDR      r0,[sp,#0]
000046  ebab0000          SUB      r0,r11,r0
00004a  285a              CMP      r0,#0x5a
00004c  d903              BLS      |L3.86|
;;;42     		{
;;;43     			time2 = time1;
00004e  f8cdb000          STR      r11,[sp,#0]
;;;44     			Get_Q_FromECU();
000052  f7fffffe          BL       Get_Q_FromECU
                  |L3.86|
;;;45     		}
;;;46     		
;;;47     		can1_Txbuff = OSQPend(canSendQ,1000,&err);//收到PID指令，进行发送
000056  aa01              ADD      r2,sp,#4
000058  f44f717a          MOV      r1,#0x3e8
00005c  4888              LDR      r0,|L3.640|
00005e  6800              LDR      r0,[r0,#0]  ; canSendQ
000060  f7fffffe          BL       OSQPend
000064  4607              MOV      r7,r0
;;;48     		if(err != OS_ERR_NONE)
000066  f89d0004          LDRB     r0,[sp,#4]
00006a  b100              CBZ      r0,|L3.110|
;;;49     			continue;
00006c  e104              B        |L3.632|
                  |L3.110|
;;;50     		cmdNum = can1_Txbuff[0];               //记录PID指令序号
00006e  f8979000          LDRB     r9,[r7,#0]
;;;51     		cmdLen = can1_Txbuff[1];               //记录PID指令长度
000072  787e              LDRB     r6,[r7,#1]
;;;52     		
;;;53     		dataToSend.pdat = &can1_Txbuff[1];     
000074  1c78              ADDS     r0,r7,#1
000076  4983              LDR      r1,|L3.644|
000078  6088              STR      r0,[r1,#8]  ; dataToSend
;;;54     		OBD_CAN_SendData(dataToSend);          //发送PID指令
00007a  4608              MOV      r0,r1
00007c  c807              LDM      r0,{r0-r2}
00007e  f7fffffe          BL       OBD_CAN_SendData
;;;55     		
;;;56     		CAN1_RxMsg = OSQPend(canRecieveQ,25,&err); //接收到OBD回复
000082  aa01              ADD      r2,sp,#4
000084  2119              MOVS     r1,#0x19
000086  4880              LDR      r0,|L3.648|
000088  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00008a  f7fffffe          BL       OSQPend
00008e  4604              MOV      r4,r0
;;;57     		if(err == OS_ERR_NONE)
000090  f89d0004          LDRB     r0,[sp,#4]
000094  2800              CMP      r0,#0
000096  d17d              BNE      |L3.404|
;;;58     		{
;;;59     			freOBDLed = 500;                    //OBD 初始化成功
000098  f44f70fa          MOV      r0,#0x1f4
00009c  497b              LDR      r1,|L3.652|
00009e  8008              STRH     r0,[r1,#0]
;;;60     			if(CAN1_RxMsg->Data[0] == 0x10)     //多包处理
0000a0  7ae0              LDRB     r0,[r4,#0xb]
0000a2  2810              CMP      r0,#0x10
0000a4  d177              BNE      |L3.406|
;;;61     			{
;;;62     				ptrSaveBuff = Mem_malloc(CAN1_RxMsg->Data[1]+10);//申请的内存块足够长
0000a6  7b21              LDRB     r1,[r4,#0xc]
0000a8  f101000a          ADD      r0,r1,#0xa
0000ac  f7fffffe          BL       Mem_malloc
0000b0  4605              MOV      r5,r0
;;;63     				if(ptrSaveBuff != NULL)
0000b2  2d00              CMP      r5,#0
0000b4  d070              BEQ      |L3.408|
;;;64     				{
;;;65     					ptrSaveBuff[0] = CAN1_RxMsg->Data[1] - cmdLen + 3;
0000b6  7b20              LDRB     r0,[r4,#0xc]
0000b8  1b80              SUBS     r0,r0,r6
0000ba  1cc0              ADDS     r0,r0,#3
0000bc  7028              STRB     r0,[r5,#0]
;;;66     					ptrSaveBuff[1] = 0x60;
0000be  2060              MOVS     r0,#0x60
0000c0  7068              STRB     r0,[r5,#1]
;;;67     					ptrSaveBuff[2] = cmdNum;
0000c2  f8859002          STRB     r9,[r5,#2]
;;;68     					memcpy(&ptrSaveBuff[3],&CAN1_RxMsg->Data[cmdLen + 2],(6 - cmdLen));
0000c6  f1c60206          RSB      r2,r6,#6
0000ca  f104000b          ADD      r0,r4,#0xb
0000ce  1cb3              ADDS     r3,r6,#2
0000d0  18c1              ADDS     r1,r0,r3
0000d2  1ce8              ADDS     r0,r5,#3
0000d4  f7fffffe          BL       __aeabi_memcpy
;;;69     					cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6)%7 == 0? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
0000d8  7b20              LDRB     r0,[r4,#0xc]
0000da  1f80              SUBS     r0,r0,#6
0000dc  2107              MOVS     r1,#7
0000de  fb90f2f1          SDIV     r2,r0,r1
0000e2  fb010012          MLS      r0,r1,r2,r0
0000e6  b920              CBNZ     r0,|L3.242|
0000e8  7b20              LDRB     r0,[r4,#0xc]
0000ea  1f80              SUBS     r0,r0,#6
0000ec  fb90f0f1          SDIV     r0,r0,r1
0000f0  e005              B        |L3.254|
                  |L3.242|
0000f2  7b20              LDRB     r0,[r4,#0xc]
0000f4  1f80              SUBS     r0,r0,#6
0000f6  2107              MOVS     r1,#7
0000f8  fb90f0f1          SDIV     r0,r0,r1
0000fc  1c40              ADDS     r0,r0,#1
                  |L3.254|
0000fe  f0000aff          AND      r10,r0,#0xff
;;;70     					Mem_free(CAN1_RxMsg);
000102  4620              MOV      r0,r4
000104  f7fffffe          BL       Mem_free
;;;71     					
;;;72     					dataToSend.pdat = pidManyBag;//发送0x30 请求接下来的多包
000108  4861              LDR      r0,|L3.656|
00010a  495e              LDR      r1,|L3.644|
00010c  6088              STR      r0,[r1,#8]  ; dataToSend
;;;73     					OBD_CAN_SendData(dataToSend);
00010e  4608              MOV      r0,r1
000110  c807              LDM      r0,{r0-r2}
000112  f7fffffe          BL       OBD_CAN_SendData
;;;74     					
;;;75     					for(i=0;i<cmdManyPackNum;i++)
000116  f04f0800          MOV      r8,#0
00011a  e01d              B        |L3.344|
                  |L3.284|
;;;76     					{
;;;77     						CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);//接收多包
00011c  aa01              ADD      r2,sp,#4
00011e  2119              MOVS     r1,#0x19
000120  4859              LDR      r0,|L3.648|
000122  6800              LDR      r0,[r0,#0]  ; canRecieveQ
000124  f7fffffe          BL       OSQPend
000128  4604              MOV      r4,r0
;;;78     						if(err == OS_ERR_NONE)
00012a  f89d0004          LDRB     r0,[sp,#4]
00012e  b970              CBNZ     r0,|L3.334|
;;;79     						{
;;;80     							memcpy(&ptrSaveBuff[7*i + 9 - cmdLen],&CAN1_RxMsg->Data[1],7);
000130  ebc800c8          RSB      r0,r8,r8,LSL #3
000134  3009              ADDS     r0,r0,#9
000136  1b80              SUBS     r0,r0,r6
000138  1941              ADDS     r1,r0,r5
00013a  68e2              LDR      r2,[r4,#0xc]
00013c  600a              STR      r2,[r1,#0]
00013e  8a22              LDRH     r2,[r4,#0x10]
000140  808a              STRH     r2,[r1,#4]
000142  7ca0              LDRB     r0,[r4,#0x12]
000144  7188              STRB     r0,[r1,#6]
;;;81     							Mem_free(CAN1_RxMsg);
000146  4620              MOV      r0,r4
000148  f7fffffe          BL       Mem_free
00014c  e000              B        |L3.336|
                  |L3.334|
;;;82     						}
;;;83     						else break;
00014e  e005              B        |L3.348|
                  |L3.336|
000150  f1080001          ADD      r0,r8,#1              ;75
000154  f00008ff          AND      r8,r0,#0xff           ;75
                  |L3.344|
000158  45d0              CMP      r8,r10                ;75
00015a  dbdf              BLT      |L3.284|
                  |L3.348|
00015c  bf00              NOP      
;;;84     					}
;;;85     					if(i == cmdManyPackNum)
00015e  45d0              CMP      r8,r10
000160  d120              BNE      |L3.420|
;;;86     					{
;;;87     						OSMutexPend(CDMASendMutex,0,&err);
000162  aa01              ADD      r2,sp,#4
000164  2100              MOVS     r1,#0
000166  484b              LDR      r0,|L3.660|
000168  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00016a  f7fffffe          BL       OSMutexPend
;;;88     						
;;;89     						memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],ptrSaveBuff,ptrSaveBuff[0]);
00016e  494a              LDR      r1,|L3.664|
000170  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000172  6849              LDR      r1,[r1,#4]
000174  4b48              LDR      r3,|L3.664|
000176  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
000178  881b              LDRH     r3,[r3,#0]
00017a  18c8              ADDS     r0,r1,r3
00017c  782a              LDRB     r2,[r5,#0]
00017e  4629              MOV      r1,r5
000180  f7fffffe          BL       __aeabi_memcpy
;;;90     						cdmaDataToSend->datLength += ptrSaveBuff[0];
000184  4844              LDR      r0,|L3.664|
000186  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000188  8800              LDRH     r0,[r0,#0]
00018a  7829              LDRB     r1,[r5,#0]
00018c  4408              ADD      r0,r0,r1
00018e  4942              LDR      r1,|L3.664|
000190  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000192  e002              B        |L3.410|
                  |L3.404|
000194  e066              B        |L3.612|
                  |L3.406|
000196  e009              B        |L3.428|
                  |L3.408|
000198  e06a              B        |L3.624|
                  |L3.410|
00019a  8008              STRH     r0,[r1,#0]
;;;91     						
;;;92     						OSMutexPost(CDMASendMutex);
00019c  483d              LDR      r0,|L3.660|
00019e  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0001a0  f7fffffe          BL       OSMutexPost
                  |L3.420|
;;;93     					}
;;;94     					Mem_free(ptrSaveBuff);
0001a4  4628              MOV      r0,r5
0001a6  f7fffffe          BL       Mem_free
0001aa  e061              B        |L3.624|
                  |L3.428|
;;;95     				}
;;;96     			}
;;;97     			else  //单包处理
;;;98     			{
;;;99     				OSMutexPend(CDMASendMutex,0,&err);
0001ac  aa01              ADD      r2,sp,#4
0001ae  2100              MOVS     r1,#0
0001b0  4838              LDR      r0,|L3.660|
0001b2  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0001b4  f7fffffe          BL       OSMutexPend
;;;100    				
;;;101    				cdmaDataToSend->data[cdmaDataToSend->datLength++] = CAN1_RxMsg->Data[0] - cmdLen + 3;
0001b8  7ae0              LDRB     r0,[r4,#0xb]
0001ba  1b80              SUBS     r0,r0,r6
0001bc  1cc0              ADDS     r0,r0,#3
0001be  b2c1              UXTB     r1,r0
0001c0  4835              LDR      r0,|L3.664|
0001c2  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001c4  8802              LDRH     r2,[r0,#0]
0001c6  4834              LDR      r0,|L3.664|
0001c8  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001ca  8800              LDRH     r0,[r0,#0]
0001cc  1c40              ADDS     r0,r0,#1
0001ce  4b32              LDR      r3,|L3.664|
0001d0  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0001d2  8018              STRH     r0,[r3,#0]
0001d4  4830              LDR      r0,|L3.664|
0001d6  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001d8  6840              LDR      r0,[r0,#4]
0001da  5481              STRB     r1,[r0,r2]
;;;102    				cdmaDataToSend->data[cdmaDataToSend->datLength++] = 0x60;
0001dc  2160              MOVS     r1,#0x60
0001de  482e              LDR      r0,|L3.664|
0001e0  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001e2  8802              LDRH     r2,[r0,#0]
0001e4  482c              LDR      r0,|L3.664|
0001e6  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001e8  8800              LDRH     r0,[r0,#0]
0001ea  1c40              ADDS     r0,r0,#1
0001ec  4b2a              LDR      r3,|L3.664|
0001ee  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
0001f0  8018              STRH     r0,[r3,#0]
0001f2  4829              LDR      r0,|L3.664|
0001f4  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001f6  6840              LDR      r0,[r0,#4]
0001f8  5481              STRB     r1,[r0,r2]
;;;103    				cdmaDataToSend->data[cdmaDataToSend->datLength++] = cmdNum;
0001fa  4827              LDR      r0,|L3.664|
0001fc  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0001fe  8801              LDRH     r1,[r0,#0]
000200  4825              LDR      r0,|L3.664|
000202  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000204  8800              LDRH     r0,[r0,#0]
000206  1c40              ADDS     r0,r0,#1
000208  4a23              LDR      r2,|L3.664|
00020a  6812              LDR      r2,[r2,#0]  ; cdmaDataToSend
00020c  8010              STRH     r0,[r2,#0]
00020e  4822              LDR      r0,|L3.664|
000210  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000212  6840              LDR      r0,[r0,#4]
000214  f8009001          STRB     r9,[r0,r1]
;;;104    				memcpy(&cdmaDataToSend->data[cdmaDataToSend->datLength],&CAN1_RxMsg->Data[cmdLen+1],(CAN1_RxMsg->Data[0] - cmdLen));
000218  4b1f              LDR      r3,|L3.664|
00021a  681b              LDR      r3,[r3,#0]  ; cdmaDataToSend
00021c  685b              LDR      r3,[r3,#4]
00021e  f8dfc078          LDR      r12,|L3.664|
000222  f8dcc000          LDR      r12,[r12,#0]  ; cdmaDataToSend
000226  f8bcc000          LDRH     r12,[r12,#0]
00022a  eb03000c          ADD      r0,r3,r12
00022e  7ae3              LDRB     r3,[r4,#0xb]
000230  1b9a              SUBS     r2,r3,r6
000232  f104030b          ADD      r3,r4,#0xb
000236  f1060c01          ADD      r12,r6,#1
00023a  eb03010c          ADD      r1,r3,r12
00023e  f7fffffe          BL       __aeabi_memcpy
;;;105    				cdmaDataToSend->datLength += CAN1_RxMsg->Data[0] - cmdLen;
000242  4815              LDR      r0,|L3.664|
000244  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000246  8800              LDRH     r0,[r0,#0]
000248  7ae1              LDRB     r1,[r4,#0xb]
00024a  1b89              SUBS     r1,r1,r6
00024c  4408              ADD      r0,r0,r1
00024e  4912              LDR      r1,|L3.664|
000250  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000252  8008              STRH     r0,[r1,#0]
;;;106    	
;;;107    				OSMutexPost(CDMASendMutex);
000254  480f              LDR      r0,|L3.660|
000256  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000258  f7fffffe          BL       OSMutexPost
;;;108    				
;;;109    				Mem_free(CAN1_RxMsg);
00025c  4620              MOV      r0,r4
00025e  f7fffffe          BL       Mem_free
000262  e005              B        |L3.624|
                  |L3.612|
;;;110    			}
;;;111    		}
;;;112    		else
;;;113    		{
;;;114    			OSTimeDlyHMSM(0,0,0,4);
000264  2304              MOVS     r3,#4
000266  2200              MOVS     r2,#0
000268  4611              MOV      r1,r2
00026a  4610              MOV      r0,r2
00026c  f7fffffe          BL       OSTimeDlyHMSM
                  |L3.624|
;;;115    		}
;;;116    		Mem_free(can1_Txbuff);                 //释放内存块
000270  4638              MOV      r0,r7
000272  f7fffffe          BL       Mem_free
000276  bf00              NOP                            ;38
                  |L3.632|
000278  e6d6              B        |L3.40|
;;;117    	}
;;;118    }
;;;119    
                          ENDP

00027a  0000              DCW      0x0000
                  |L3.636|
                          DCD      varOperation
                  |L3.640|
                          DCD      canSendQ
                  |L3.644|
                          DCD      dataToSend
                  |L3.648|
                          DCD      canRecieveQ
                  |L3.652|
                          DCD      freOBDLed
                  |L3.656|
                          DCD      pidManyBag
                  |L3.660|
                          DCD      CDMASendMutex
                  |L3.664|
                          DCD      cdmaDataToSend

                          AREA ||i.PIDVarGet||, CODE, READONLY, ALIGN=2

                  PIDVarGet PROC
;;;284    
;;;285    void PIDVarGet(uint8_t cmdId,uint8_t *ptrData)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;286    {
000004  4680              MOV      r8,r0
000006  460e              MOV      r6,r1
;;;287    	uint8_t  i; 
;;;288    	uint32_t saveDate;
;;;289    	uint8_t  saveLen = 0;
000008  2400              MOVS     r4,#0
;;;290    	uint32_t  temp = 0;
00000a  2700              MOVS     r7,#0
;;;291    	for(i = 0;i < varOperation.pidVarNum;i ++)
00000c  2500              MOVS     r5,#0
00000e  e0a8              B        |L4.354|
                  |L4.16|
;;;292    	{
;;;293    		if((ptrPIDVars + i)->pidId != cmdId)
000010  eb050085          ADD      r0,r5,r5,LSL #2
000014  eb0000c5          ADD      r0,r0,r5,LSL #3
000018  4956              LDR      r1,|L4.372|
00001a  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
00001c  5c08              LDRB     r0,[r1,r0]
00001e  4540              CMP      r0,r8
000020  d000              BEQ      |L4.36|
;;;294    			continue;
000022  e09c              B        |L4.350|
                  |L4.36|
;;;295    		while(saveLen < (ptrPIDVars + i)->bitLen)
000024  e02c              B        |L4.128|
                  |L4.38|
;;;296    		{
;;;297    			if(saveLen < 8)
000026  2c08              CMP      r4,#8
000028  da04              BGE      |L4.52|
;;;298    				temp = ptrData[ptrPIDVars->startByte];
00002a  4852              LDR      r0,|L4.372|
00002c  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
00002e  7880              LDRB     r0,[r0,#2]
000030  5c37              LDRB     r7,[r6,r0]
000032  e01f              B        |L4.116|
                  |L4.52|
;;;299    			else if(saveLen >= 8 && saveLen < 16)
000034  2c08              CMP      r4,#8
000036  db08              BLT      |L4.74|
000038  2c10              CMP      r4,#0x10
00003a  da06              BGE      |L4.74|
;;;300    			{
;;;301    				temp = ptrData[ptrPIDVars->startByte + 1];
00003c  484d              LDR      r0,|L4.372|
00003e  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
000040  7880              LDRB     r0,[r0,#2]
000042  1c40              ADDS     r0,r0,#1
000044  5c37              LDRB     r7,[r6,r0]
;;;302    				temp <<= 8;
000046  023f              LSLS     r7,r7,#8
000048  e014              B        |L4.116|
                  |L4.74|
;;;303    			}else if(saveLen >= 16 && saveLen < 24)
00004a  2c10              CMP      r4,#0x10
00004c  db08              BLT      |L4.96|
00004e  2c18              CMP      r4,#0x18
000050  da06              BGE      |L4.96|
;;;304    			{
;;;305    				temp = ptrData[ptrPIDVars->startByte + 2];
000052  4848              LDR      r0,|L4.372|
000054  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
000056  7880              LDRB     r0,[r0,#2]
000058  1c80              ADDS     r0,r0,#2
00005a  5c37              LDRB     r7,[r6,r0]
;;;306    				temp <<= 16;
00005c  043f              LSLS     r7,r7,#16
00005e  e009              B        |L4.116|
                  |L4.96|
;;;307    			}else if(saveLen >= 24 && saveLen < 32)
000060  2c18              CMP      r4,#0x18
000062  db07              BLT      |L4.116|
000064  2c20              CMP      r4,#0x20
000066  da05              BGE      |L4.116|
;;;308    			{
;;;309    				temp = ptrData[ptrPIDVars->startByte + 3];
000068  4842              LDR      r0,|L4.372|
00006a  6800              LDR      r0,[r0,#0]  ; ptrPIDVars
00006c  7880              LDRB     r0,[r0,#2]
00006e  1cc0              ADDS     r0,r0,#3
000070  5c37              LDRB     r7,[r6,r0]
;;;310    				temp <<= 24;
000072  063f              LSLS     r7,r7,#24
                  |L4.116|
;;;311    			}
;;;312    			saveDate += temp & (0x00000001 << saveLen);
000074  2001              MOVS     r0,#1
000076  40a0              LSLS     r0,r0,r4
000078  4038              ANDS     r0,r0,r7
00007a  4481              ADD      r9,r9,r0
;;;313    			saveLen ++;
00007c  1c60              ADDS     r0,r4,#1
00007e  b2c4              UXTB     r4,r0
                  |L4.128|
000080  eb050085          ADD      r0,r5,r5,LSL #2       ;295
000084  eb0000c5          ADD      r0,r0,r5,LSL #3       ;295
000088  493a              LDR      r1,|L4.372|
00008a  6809              LDR      r1,[r1,#0]            ;295  ; ptrPIDVars
00008c  4408              ADD      r0,r0,r1              ;295
00008e  7900              LDRB     r0,[r0,#4]            ;295
000090  42a0              CMP      r0,r4                 ;295
000092  dcc8              BGT      |L4.38|
;;;314    		}
;;;315    		
;;;316    		//1 - 车速 2 - 发动机转速 3 - 总喷油量 4-主喷油量 5-预喷油量 6-后喷油量 7-当前喷油量
;;;317    		switch((ptrPIDVars + i)->varId)
000094  eb050085          ADD      r0,r5,r5,LSL #2
000098  eb0000c5          ADD      r0,r0,r5,LSL #3
00009c  4935              LDR      r1,|L4.372|
00009e  6809              LDR      r1,[r1,#0]  ; ptrPIDVars
0000a0  4408              ADD      r0,r0,r1
0000a2  7840              LDRB     r0,[r0,#1]
0000a4  2808              CMP      r0,#8
0000a6  d257              BCS      |L4.344|
0000a8  e8dff000          TBB      [pc,r0]
0000ac  56042851          DCB      0x56,0x04,0x28,0x51
0000b0  52535455          DCB      0x52,0x53,0x54,0x55
;;;318    		{
;;;319    			case 1://计算车速
;;;320    				carAllRecord.carSpeed = saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset;
0000b4  eb050185          ADD      r1,r5,r5,LSL #2
0000b8  eb0101c5          ADD      r1,r1,r5,LSL #3
0000bc  4a2d              LDR      r2,|L4.372|
0000be  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0000c0  4411              ADD      r1,r1,r2
0000c2  f8d10009          LDR      r0,[r1,#9]
0000c6  f7fffffe          BL       __aeabi_i2f
0000ca  4683              MOV      r11,r0
0000cc  4648              MOV      r0,r9
0000ce  f7fffffe          BL       __aeabi_ui2f
0000d2  9000              STR      r0,[sp,#0]
0000d4  eb050085          ADD      r0,r5,r5,LSL #2
0000d8  eb0000c5          ADD      r0,r0,r5,LSL #3
0000dc  4a25              LDR      r2,|L4.372|
0000de  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
0000e0  4410              ADD      r0,r0,r2
0000e2  f8d01005          LDR      r1,[r0,#5]
0000e6  9800              LDR      r0,[sp,#0]
0000e8  f7fffffe          BL       __aeabi_fmul
0000ec  4682              MOV      r10,r0
0000ee  4659              MOV      r1,r11
0000f0  f7fffffe          BL       __aeabi_fadd
0000f4  4920              LDR      r1,|L4.376|
0000f6  f8c1002e          STR      r0,[r1,#0x2e]  ; carAllRecord
;;;321    				break;
0000fa  e02e              B        |L4.346|
;;;322    			case 2://转速
;;;323    				if(carAllRecord.engineSpeedTemp != 1)
0000fc  481e              LDR      r0,|L4.376|
0000fe  f8900037          LDRB     r0,[r0,#0x37]  ; carAllRecord
000102  2801              CMP      r0,#1
000104  d022              BEQ      |L4.332|
;;;324    				carAllRecord.engineSpeed = saveDate * ((ptrPIDVars + i)->ceo) + (ptrPIDVars + i)->offset;
000106  eb050185          ADD      r1,r5,r5,LSL #2
00010a  eb0101c5          ADD      r1,r1,r5,LSL #3
00010e  4a19              LDR      r2,|L4.372|
000110  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000112  4411              ADD      r1,r1,r2
000114  f8d10009          LDR      r0,[r1,#9]
000118  f7fffffe          BL       __aeabi_i2f
00011c  9000              STR      r0,[sp,#0]
00011e  4648              MOV      r0,r9
000120  f7fffffe          BL       __aeabi_ui2f
000124  4683              MOV      r11,r0
000126  eb050085          ADD      r0,r5,r5,LSL #2
00012a  eb0000c5          ADD      r0,r0,r5,LSL #3
00012e  4a11              LDR      r2,|L4.372|
000130  6812              LDR      r2,[r2,#0]  ; ptrPIDVars
000132  4410              ADD      r0,r0,r2
000134  f8d01005          LDR      r1,[r0,#5]
000138  4658              MOV      r0,r11
00013a  f7fffffe          BL       __aeabi_fmul
00013e  4682              MOV      r10,r0
000140  9900              LDR      r1,[sp,#0]
000142  f7fffffe          BL       __aeabi_fadd
000146  490c              LDR      r1,|L4.376|
000148  f8c10033          STR      r0,[r1,#0x33]  ; carAllRecord
                  |L4.332|
;;;325    				break;
00014c  e005              B        |L4.346|
;;;326    			case 3:break;
00014e  e004              B        |L4.346|
;;;327    			case 4:break;
000150  e003              B        |L4.346|
;;;328    			case 5:break;
000152  e002              B        |L4.346|
;;;329    			case 6:break;
000154  e001              B        |L4.346|
;;;330    			case 7:break;
000156  e000              B        |L4.346|
                  |L4.344|
;;;331    			default:break;
000158  bf00              NOP      
                  |L4.346|
00015a  bf00              NOP                            ;321
00015c  bf00              NOP                            ;294
                  |L4.350|
00015e  1c68              ADDS     r0,r5,#1              ;291
000160  b2c5              UXTB     r5,r0                 ;291
                  |L4.354|
000162  4806              LDR      r0,|L4.380|
000164  f8b00083          LDRH     r0,[r0,#0x83]         ;291  ; varOperation
000168  42a8              CMP      r0,r5                 ;291
00016a  f73faf51          BGT      |L4.16|
;;;332    		}
;;;333    	}
;;;334    }
00016e  e8bd8ff8          POP      {r3-r11,pc}
;;;335    extern const uint8_t weiChai[21][6];
                          ENDP

000172  0000              DCW      0x0000
                  |L4.372|
                          DCD      ptrPIDVars
                  |L4.376|
                          DCD      carAllRecord
                  |L4.380|
                          DCD      varOperation

                          AREA ||i.TestServer||, CODE, READONLY, ALIGN=2

                  TestServer PROC
;;;120    extern uint8_t configData[2048];
;;;121    void TestServer(void)
000000  b510              PUSH     {r4,lr}
;;;122    {
000002  b08a              SUB      sp,sp,#0x28
;;;123    	uint8_t err;
;;;124    	CanRxMsg* CAN1_RxMsg;
;;;125    	CanTxMsg CAN1_TxMsg;
;;;126    	CAN_InitTypeDef   CAN_InitStructure;
;;;127    	OSSemPend(LoginMes,0,&err);
000004  aa09              ADD      r2,sp,#0x24
000006  2100              MOVS     r1,#0
000008  484e              LDR      r0,|L5.324|
00000a  6800              LDR      r0,[r0,#0]  ; LoginMes
00000c  f7fffffe          BL       OSSemPend
;;;128    	
;;;129    	if(varOperation.pidVersion == 0)
000010  484d              LDR      r0,|L5.328|
000012  f8d0007a          LDR      r0,[r0,#0x7a]  ; varOperation
000016  b948              CBNZ     r0,|L5.44|
;;;130    	{
;;;131    		LogReport("01 - ECU Version %d,Need Config.",sysUpdateVar.pidVersion);
000018  484c              LDR      r0,|L5.332|
00001a  f8d01009          LDR      r1,[r0,#9]  ; sysUpdateVar
00001e  a04c              ADR      r0,|L5.336|
000020  f7fffffe          BL       LogReport
;;;132    		CANTestChannel();
000024  f7fffffe          BL       CANTestChannel
                  |L5.40|
;;;133    		return	;
;;;134    	}
;;;135    	
;;;136    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);//使能CAN1时钟
;;;137    	
;;;138    	CAN_DeInit(CAN1);  
;;;139    	CAN_StructInit(&CAN_InitStructure);
;;;140    	//先用flash中的CAN配置进行测试
;;;141    	CAN1_BaudSet(sysUpdateVar.canBaud);
;;;142    
;;;143    	CAN1_SetFilter(sysUpdateVar.canRxId,sysUpdateVar.canIdType);
;;;144    	CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
;;;145    	
;;;146    	CAN1_TxMsg.IDE     = sysUpdateVar.canIdType;
;;;147    	CAN1_TxMsg.StdId   = sysUpdateVar.canTxId ;
;;;148    	CAN1_TxMsg.ExtId   = sysUpdateVar.canTxId ;
;;;149    	CAN1_TxMsg.DLC     = 0x08;
;;;150    	
;;;151    	CAN1_TxMsg.Data[0] = configData[5];CAN1_TxMsg.Data[1] = configData[6];CAN1_TxMsg.Data[2] = configData[7];//todo:测试报文PID是什么？
;;;152    	CAN1_TxMsg.Data[3] = configData[8];CAN1_TxMsg.Data[4] = configData[9];CAN1_TxMsg.Data[5] = configData[10];
;;;153    	CAN1_TxMsg.Data[6] = configData[11];CAN1_TxMsg.Data[7] = configData[12];
;;;154    	CAN_Transmit(CAN1,&CAN1_TxMsg);
;;;155    	CAN1_RxMsg = OSQPend(canRecieveQ,500,&err);
;;;156    	if(err ==OS_ERR_NONE)
;;;157    	{
;;;158    		dataToSend.ide = sysUpdateVar.canIdType;
;;;159    		dataToSend.canId   = sysUpdateVar.canTxId;
;;;160    		Mem_free(CAN1_RxMsg);
;;;161    		LogReport("01 - ECU Version %d test Success.",sysUpdateVar.pidVersion);
;;;162    		ReadECUVersion();        //读取ECU版本号
;;;163    		
;;;164    		SafeALG();
;;;165    		Get_Q_FromECU();
;;;166    		
;;;167    		varOperation.canTest = 2;//Flash中的CAN配置成功
;;;168    		
;;;169    		CAN_DeInit(CAN1);  
;;;170    		CAN_StructInit(&CAN_InitStructure);
;;;171    		//先用flash中的CAN配置进行测试
;;;172    		CAN1_BaudSet(sysUpdateVar.canBaud);
;;;173    		
;;;174    		CAN1_ClearFilter();  //清除滤波器，进入侦听模式，接收一切CAN消息
;;;175    		CAN_ITConfig(CAN1,CAN_IT_FMP1,ENABLE);//重置CAN滤波器
;;;176    		//todo:进入正常程序
;;;177    	}
;;;178    	else
;;;179    	{
;;;180    		LogReport("ECU Version %d test Error!",sysUpdateVar.pidVersion);
;;;181    		CANTestChannel();
;;;182    	}
;;;183    		
;;;184    }
000028  b00a              ADD      sp,sp,#0x28
00002a  bd10              POP      {r4,pc}
                  |L5.44|
00002c  2101              MOVS     r1,#1                 ;136
00002e  0648              LSLS     r0,r1,#25             ;136
000030  f7fffffe          BL       RCC_APB1PeriphClockCmd
000034  484f              LDR      r0,|L5.372|
000036  f7fffffe          BL       CAN_DeInit
00003a  a801              ADD      r0,sp,#4              ;139
00003c  f7fffffe          BL       CAN_StructInit
000040  4942              LDR      r1,|L5.332|
000042  7ec8              LDRB     r0,[r1,#0x1b]         ;141  ; sysUpdateVar
000044  f7fffffe          BL       CAN1_BaudSet
000048  4a40              LDR      r2,|L5.332|
00004a  7c91              LDRB     r1,[r2,#0x12]         ;143  ; sysUpdateVar
00004c  f8d20017          LDR      r0,[r2,#0x17]         ;143  ; sysUpdateVar
000050  f7fffffe          BL       CAN1_SetFilter
000054  2201              MOVS     r2,#1                 ;144
000056  2110              MOVS     r1,#0x10              ;144
000058  4846              LDR      r0,|L5.372|
00005a  f7fffffe          BL       CAN_ITConfig
00005e  483b              LDR      r0,|L5.332|
000060  7c80              LDRB     r0,[r0,#0x12]         ;146  ; sysUpdateVar
000062  f88d0018          STRB     r0,[sp,#0x18]         ;146
000066  4839              LDR      r0,|L5.332|
000068  f8d00013          LDR      r0,[r0,#0x13]         ;147  ; sysUpdateVar
00006c  9004              STR      r0,[sp,#0x10]         ;147
00006e  4837              LDR      r0,|L5.332|
000070  f8d00013          LDR      r0,[r0,#0x13]         ;148  ; sysUpdateVar
000074  9005              STR      r0,[sp,#0x14]         ;148
000076  2008              MOVS     r0,#8                 ;149
000078  f88d001a          STRB     r0,[sp,#0x1a]         ;149
00007c  483e              LDR      r0,|L5.376|
00007e  7940              LDRB     r0,[r0,#5]            ;151  ; configData
000080  f88d001b          STRB     r0,[sp,#0x1b]         ;151
000084  483c              LDR      r0,|L5.376|
000086  7981              LDRB     r1,[r0,#6]            ;151  ; configData
000088  f88d101c          STRB     r1,[sp,#0x1c]         ;151
00008c  79c1              LDRB     r1,[r0,#7]            ;151  ; configData
00008e  f88d101d          STRB     r1,[sp,#0x1d]         ;151
000092  7a01              LDRB     r1,[r0,#8]            ;152  ; configData
000094  f88d101e          STRB     r1,[sp,#0x1e]         ;152
000098  7a41              LDRB     r1,[r0,#9]            ;152  ; configData
00009a  f88d101f          STRB     r1,[sp,#0x1f]         ;152
00009e  7a81              LDRB     r1,[r0,#0xa]          ;152  ; configData
0000a0  a804              ADD      r0,sp,#0x10           ;152
0000a2  7401              STRB     r1,[r0,#0x10]         ;152
0000a4  4834              LDR      r0,|L5.376|
0000a6  7ac1              LDRB     r1,[r0,#0xb]          ;153  ; configData
0000a8  a804              ADD      r0,sp,#0x10           ;153
0000aa  7441              STRB     r1,[r0,#0x11]         ;153
0000ac  4832              LDR      r0,|L5.376|
0000ae  7b01              LDRB     r1,[r0,#0xc]          ;153  ; configData
0000b0  a804              ADD      r0,sp,#0x10           ;153
0000b2  7481              STRB     r1,[r0,#0x12]         ;153
0000b4  a904              ADD      r1,sp,#0x10           ;154
0000b6  482f              LDR      r0,|L5.372|
0000b8  f7fffffe          BL       CAN_Transmit
0000bc  aa09              ADD      r2,sp,#0x24           ;155
0000be  f44f71fa          MOV      r1,#0x1f4             ;155
0000c2  482e              LDR      r0,|L5.380|
0000c4  6800              LDR      r0,[r0,#0]            ;155  ; canRecieveQ
0000c6  f7fffffe          BL       OSQPend
0000ca  4604              MOV      r4,r0                 ;155
0000cc  f89d0024          LDRB     r0,[sp,#0x24]         ;156
0000d0  2800              CMP      r0,#0                 ;156
0000d2  d12c              BNE      |L5.302|
0000d4  481d              LDR      r0,|L5.332|
0000d6  7c80              LDRB     r0,[r0,#0x12]         ;158  ; sysUpdateVar
0000d8  4929              LDR      r1,|L5.384|
0000da  6048              STR      r0,[r1,#4]            ;158  ; dataToSend
0000dc  481b              LDR      r0,|L5.332|
0000de  f8d00013          LDR      r0,[r0,#0x13]         ;159  ; sysUpdateVar
0000e2  6008              STR      r0,[r1,#0]            ;159  ; dataToSend
0000e4  4620              MOV      r0,r4                 ;160
0000e6  f7fffffe          BL       Mem_free
0000ea  4818              LDR      r0,|L5.332|
0000ec  f8d01009          LDR      r1,[r0,#9]            ;161  ; sysUpdateVar
0000f0  a024              ADR      r0,|L5.388|
0000f2  f7fffffe          BL       LogReport
0000f6  f7fffffe          BL       ReadECUVersion
0000fa  f7fffffe          BL       SafeALG
0000fe  f7fffffe          BL       Get_Q_FromECU
000102  2002              MOVS     r0,#2                 ;167
000104  4910              LDR      r1,|L5.328|
000106  f8a10090          STRH     r0,[r1,#0x90]         ;167
00010a  481a              LDR      r0,|L5.372|
00010c  f7fffffe          BL       CAN_DeInit
000110  a801              ADD      r0,sp,#4              ;170
000112  f7fffffe          BL       CAN_StructInit
000116  490d              LDR      r1,|L5.332|
000118  7ec8              LDRB     r0,[r1,#0x1b]         ;172  ; sysUpdateVar
00011a  f7fffffe          BL       CAN1_BaudSet
00011e  f7fffffe          BL       CAN1_ClearFilter
000122  2201              MOVS     r2,#1                 ;175
000124  2110              MOVS     r1,#0x10              ;175
000126  4813              LDR      r0,|L5.372|
000128  f7fffffe          BL       CAN_ITConfig
00012c  e007              B        |L5.318|
                  |L5.302|
00012e  4807              LDR      r0,|L5.332|
000130  f8d01009          LDR      r1,[r0,#9]            ;180  ; sysUpdateVar
000134  a01c              ADR      r0,|L5.424|
000136  f7fffffe          BL       LogReport
00013a  f7fffffe          BL       CANTestChannel
                  |L5.318|
00013e  bf00              NOP      
000140  e772              B        |L5.40|
;;;185    
                          ENDP

000142  0000              DCW      0x0000
                  |L5.324|
                          DCD      LoginMes
                  |L5.328|
                          DCD      varOperation
                  |L5.332|
                          DCD      sysUpdateVar
                  |L5.336|
000150  3031202d          DCB      "01 - ECU Version %d,Need Config.",0
000154  20454355
000158  20566572
00015c  73696f6e
000160  2025642c
000164  4e656564
000168  20436f6e
00016c  6669672e
000170  00      
000171  00                DCB      0
000172  00                DCB      0
000173  00                DCB      0
                  |L5.372|
                          DCD      0x40006400
                  |L5.376|
                          DCD      configData
                  |L5.380|
                          DCD      canRecieveQ
                  |L5.384|
                          DCD      dataToSend
                  |L5.388|
000184  3031202d          DCB      "01 - ECU Version %d test Success.",0
000188  20454355
00018c  20566572
000190  73696f6e
000194  20256420
000198  74657374
00019c  20537563
0001a0  63657373
0001a4  2e00    
0001a6  00                DCB      0
0001a7  00                DCB      0
                  |L5.424|
0001a8  45435520          DCB      "ECU Version %d test Error!",0
0001ac  56657273
0001b0  696f6e20
0001b4  25642074
0001b8  65737420
0001bc  4572726f
0001c0  722100  
0001c3  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  dataToSend
                          %        12

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  qMax
000000  045c              DCW      0x045c

                          AREA ||.data||, DATA, ALIGN=0

                  pidManyBag
000000  30000000          DCB      0x30,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
