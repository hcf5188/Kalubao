; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\obdtask.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\obdtask.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I.\RTE\_Project -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\obdtask.crf ..\OBD\OBDTask.c]
                          THUMB

                          AREA ||i.OBDTask||, CODE, READONLY, ALIGN=2

                  OBDTask PROC
;;;10     
;;;11     void OBDTask(void *pdata)
000000  b086              SUB      sp,sp,#0x18
;;;12     {
;;;13     	INT8U     err;
;;;14     	uint8_t   i      = 0;
000002  2700              MOVS     r7,#0
;;;15     	uint8_t   cmdLen = 0;        //封包的时候要减去指令的长度
000004  46b8              MOV      r8,r7
;;;16     	uint8_t   cmdNum = 0;        //指令序号
000006  2600              MOVS     r6,#0
;;;17     	uint8_t   cmdManyPackNum = 0;//要接受的多包的数量
000008  46b1              MOV      r9,r6
;;;18     	CanRxMsg* CAN1_RxMsg;        //指向接收到的OBD信息
;;;19     	uint8_t * can1_Txbuff;       //指向要发送的OBD信息
;;;20     	uint8_t * ptrSaveBuff;       //
;;;21     	uint8_t   pidErrCount = 0;
00000a  46b3              MOV      r11,r6
;;;22     	               //CAN 配置
;;;23     	OSTimeDlyHMSM(0,0,10,4);     
00000c  2304              MOVS     r3,#4
00000e  220a              MOVS     r2,#0xa
000010  2100              MOVS     r1,#0
000012  4608              MOV      r0,r1
000014  f7fffffe          BL       OSTimeDlyHMSM
;;;24     //	TestServer();                //测试服务器
;;;25     	while(1)
000018  e32d              B        |L1.1654|
                  |L1.26|
;;;26     	{	
;;;27     		StrengthFuel();
00001a  f7fffffe          BL       StrengthFuel
;;;28     		if((varOperation.canTest == 0)||(varOperation.pidTset == 1))      //配置文件不成功，或者在测试PID指令，则停止CAN
00001e  48fd              LDR      r0,|L1.1044|
000020  f8b00091          LDRH     r0,[r0,#0x91]  ; varOperation
000024  b120              CBZ      r0,|L1.48|
000026  48fb              LDR      r0,|L1.1044|
000028  f8900093          LDRB     r0,[r0,#0x93]  ; varOperation
00002c  2801              CMP      r0,#1
00002e  d106              BNE      |L1.62|
                  |L1.48|
;;;29     		{
;;;30     			OSTimeDlyHMSM(0,0,1,0);	
000030  2300              MOVS     r3,#0
000032  2201              MOVS     r2,#1
000034  4619              MOV      r1,r3
000036  4618              MOV      r0,r3
000038  f7fffffe          BL       OSTimeDlyHMSM
;;;31     			continue;
00003c  e31b              B        |L1.1654|
                  |L1.62|
;;;32     		}	 
;;;33     		can1_Txbuff = OSQPend(canSendQ,1000,&err);                        //收到 PID 指令，进行发送
00003e  aa05              ADD      r2,sp,#0x14
000040  f44f717a          MOV      r1,#0x3e8
000044  48f4              LDR      r0,|L1.1048|
000046  6800              LDR      r0,[r0,#0]  ; canSendQ
000048  f7fffffe          BL       OSQPend
00004c  4682              MOV      r10,r0
;;;34     		if(err != OS_ERR_NONE)
00004e  f89d0014          LDRB     r0,[sp,#0x14]
000052  b100              CBZ      r0,|L1.86|
;;;35     			continue;
000054  e30f              B        |L1.1654|
                  |L1.86|
;;;36     		cmdNum = can1_Txbuff[0];  //记录PID指令序号
000056  f89a6000          LDRB     r6,[r10,#0]
;;;37     		cmdLen = can1_Txbuff[1];  //记录PID指令长度
00005a  f89a8001          LDRB     r8,[r10,#1]
;;;38     //		OSTimeDlyHMSM(0,0,0,20);
;;;39     		dataToSend.pdat = &can1_Txbuff[1];   
00005e  f10a0001          ADD      r0,r10,#1
000062  49ee              LDR      r1,|L1.1052|
000064  6088              STR      r0,[r1,#8]  ; dataToSend
;;;40     		OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);//发送PID指令
000066  460b              MOV      r3,r1
000068  689a              LDR      r2,[r3,#8]  ; dataToSend
00006a  6859              LDR      r1,[r3,#4]  ; dataToSend
00006c  6818              LDR      r0,[r3,#0]  ; dataToSend
00006e  f7fffffe          BL       OBD_CAN_SendData
;;;41     		
;;;42     		CAN1_RxMsg = OSQPend(canRecieveQ,200,&err); // 接收到 OBD 回复
000072  aa05              ADD      r2,sp,#0x14
000074  21c8              MOVS     r1,#0xc8
000076  48ea              LDR      r0,|L1.1056|
000078  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00007a  f7fffffe          BL       OSQPend
00007e  4604              MOV      r4,r0
;;;43     		if(err == OS_ERR_NONE)
000080  f89d0014          LDRB     r0,[sp,#0x14]
000084  2800              CMP      r0,#0
000086  d17d              BNE      |L1.388|
;;;44     		{
;;;45     			pidErrCount = 0;
000088  4683              MOV      r11,r0
;;;46     			varOperation.flagCAN = 1;
00008a  2001              MOVS     r0,#1
00008c  49e1              LDR      r1,|L1.1044|
00008e  f88100a4          STRB     r0,[r1,#0xa4]
;;;47     			varOperation.flagECUID = 1;             // ECU 通信成功过  判断ECU运行时断电
000092  f88100a7          STRB     r0,[r1,#0xa7]
;;;48     			freOBDLed = LEDSLOW;                    // OBD 初始化成功
000096  f44f707a          MOV      r0,#0x3e8
00009a  49e2              LDR      r1,|L1.1060|
00009c  8008              STRH     r0,[r1,#0]
;;;49     			if(CAN1_RxMsg->Data[0] == 0x10)         //多包处理
00009e  7ae0              LDRB     r0,[r4,#0xb]
0000a0  2810              CMP      r0,#0x10
0000a2  d170              BNE      |L1.390|
;;;50     			{
;;;51     				ptrSaveBuff = Mem_malloc(CAN1_RxMsg->Data[1] + 10);       //申请的内存块足够长
0000a4  7b21              LDRB     r1,[r4,#0xc]
0000a6  f101000a          ADD      r0,r1,#0xa
0000aa  f7fffffe          BL       Mem_malloc
0000ae  4605              MOV      r5,r0
;;;52     				if(ptrSaveBuff != NULL)
0000b0  2d00              CMP      r5,#0
0000b2  d069              BEQ      |L1.392|
;;;53     				{
;;;54     					ptrSaveBuff[0] = CAN1_RxMsg -> Data[1] + 4;
0000b4  7b20              LDRB     r0,[r4,#0xc]
0000b6  1d00              ADDS     r0,r0,#4
0000b8  7028              STRB     r0,[r5,#0]
;;;55     					if(cmdNum == 236)
0000ba  2eec              CMP      r6,#0xec
0000bc  d104              BNE      |L1.200|
;;;56     					{
;;;57     						ptrSaveBuff[1] = 0x50;
0000be  2050              MOVS     r0,#0x50
0000c0  7068              STRB     r0,[r5,#1]
;;;58     						ptrSaveBuff[2] = 0x24;
0000c2  2024              MOVS     r0,#0x24
0000c4  70a8              STRB     r0,[r5,#2]
0000c6  e002              B        |L1.206|
                  |L1.200|
;;;59     					}
;;;60     					else{
;;;61     						ptrSaveBuff[1] = 0x60;
0000c8  2060              MOVS     r0,#0x60
0000ca  7068              STRB     r0,[r5,#1]
;;;62     						ptrSaveBuff[2] = cmdNum;
0000cc  70ae              STRB     r6,[r5,#2]
                  |L1.206|
;;;63     					}
;;;64     					ptrSaveBuff[3] = CAN1_RxMsg -> Data[1];              //故障码长度
0000ce  7b20              LDRB     r0,[r4,#0xc]
0000d0  70e8              STRB     r0,[r5,#3]
;;;65     					
;;;66     					memcpy(&ptrSaveBuff[4],&CAN1_RxMsg->Data[2],6);
0000d2  f8d4100d          LDR      r1,[r4,#0xd]
0000d6  6069              STR      r1,[r5,#4]
0000d8  f8b40011          LDRH     r0,[r4,#0x11]
0000dc  8128              STRH     r0,[r5,#8]
;;;67     					cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6) % 7 == 0 ? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
0000de  7b20              LDRB     r0,[r4,#0xc]
0000e0  1f80              SUBS     r0,r0,#6
0000e2  2107              MOVS     r1,#7
0000e4  fb90f2f1          SDIV     r2,r0,r1
0000e8  fb010012          MLS      r0,r1,r2,r0
0000ec  b920              CBNZ     r0,|L1.248|
0000ee  7b20              LDRB     r0,[r4,#0xc]
0000f0  1f80              SUBS     r0,r0,#6
0000f2  fb90f0f1          SDIV     r0,r0,r1
0000f6  e005              B        |L1.260|
                  |L1.248|
0000f8  7b20              LDRB     r0,[r4,#0xc]
0000fa  1f80              SUBS     r0,r0,#6
0000fc  2107              MOVS     r1,#7
0000fe  fb90f0f1          SDIV     r0,r0,r1
000102  1c40              ADDS     r0,r0,#1
                  |L1.260|
000104  f00009ff          AND      r9,r0,#0xff
;;;68     					Mem_free(CAN1_RxMsg);
000108  4620              MOV      r0,r4
00010a  f7fffffe          BL       Mem_free
;;;69     					
;;;70     					dataToSend.pdat = pidManyBag;                    //发送 0x30 请求接下来的多包
00010e  48c6              LDR      r0,|L1.1064|
000110  49c2              LDR      r1,|L1.1052|
000112  6088              STR      r0,[r1,#8]  ; dataToSend
;;;71     					OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
000114  460b              MOV      r3,r1
000116  689a              LDR      r2,[r3,#8]  ; dataToSend
000118  6859              LDR      r1,[r3,#4]  ; dataToSend
00011a  6818              LDR      r0,[r3,#0]  ; dataToSend
00011c  f7fffffe          BL       OBD_CAN_SendData
;;;72     					
;;;73     					for(i = 0;i < cmdManyPackNum;i++)
000120  2700              MOVS     r7,#0
000122  e01a              B        |L1.346|
                  |L1.292|
;;;74     					{
;;;75     						CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);   //接收多包
000124  aa05              ADD      r2,sp,#0x14
000126  2119              MOVS     r1,#0x19
000128  48bd              LDR      r0,|L1.1056|
00012a  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00012c  f7fffffe          BL       OSQPend
000130  4604              MOV      r4,r0
;;;76     						if(err == OS_ERR_NONE)
000132  f89d0014          LDRB     r0,[sp,#0x14]
000136  b968              CBNZ     r0,|L1.340|
;;;77     						{
;;;78     							memcpy(&ptrSaveBuff[7*i + 10],&CAN1_RxMsg->Data[1],7);
000138  ebc700c7          RSB      r0,r7,r7,LSL #3
00013c  300a              ADDS     r0,r0,#0xa
00013e  1941              ADDS     r1,r0,r5
000140  68e2              LDR      r2,[r4,#0xc]
000142  600a              STR      r2,[r1,#0]
000144  8a22              LDRH     r2,[r4,#0x10]
000146  808a              STRH     r2,[r1,#4]
000148  7ca0              LDRB     r0,[r4,#0x12]
00014a  7188              STRB     r0,[r1,#6]
;;;79     							Mem_free(CAN1_RxMsg);
00014c  4620              MOV      r0,r4
00014e  f7fffffe          BL       Mem_free
000152  e000              B        |L1.342|
                  |L1.340|
;;;80     						}
;;;81     						else 
;;;82     							break;
000154  e003              B        |L1.350|
                  |L1.342|
000156  1c78              ADDS     r0,r7,#1              ;73
000158  b2c7              UXTB     r7,r0                 ;73
                  |L1.346|
00015a  454f              CMP      r7,r9                 ;73
00015c  dbe2              BLT      |L1.292|
                  |L1.350|
00015e  bf00              NOP      
;;;83     					} 
;;;84     					if(i == cmdManyPackNum && varOperation.isDataFlow != 1)
000160  454f              CMP      r7,r9
000162  d12e              BNE      |L1.450|
000164  48ab              LDR      r0,|L1.1044|
000166  f890002d          LDRB     r0,[r0,#0x2d]  ; varOperation
00016a  2801              CMP      r0,#1
00016c  d029              BEQ      |L1.450|
;;;85     					{
;;;86     						OSMutexPend(CDMASendMutex,0,&err);
00016e  aa05              ADD      r2,sp,#0x14
000170  2100              MOVS     r1,#0
000172  48ae              LDR      r0,|L1.1068|
000174  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000176  f7fffffe          BL       OSMutexPend
;;;87     						
;;;88     						memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrSaveBuff,ptrSaveBuff[0]);
00017a  49ad              LDR      r1,|L1.1072|
00017c  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00017e  684b              LDR      r3,[r1,#4]
000180  49a4              LDR      r1,|L1.1044|
000182  e002              B        |L1.394|
                  |L1.388|
000184  e24d              B        |L1.1570|
                  |L1.390|
000186  e020              B        |L1.458|
                  |L1.392|
000188  e24a              B        |L1.1568|
                  |L1.394|
00018a  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
00018e  311b              ADDS     r1,r1,#0x1b
000190  1858              ADDS     r0,r3,r1
000192  782a              LDRB     r2,[r5,#0]
000194  4629              MOV      r1,r5
000196  f7fffffe          BL       __aeabi_memcpy
;;;89     						cdmaDataToSend->datLength += ptrSaveBuff[0];
00019a  48a5              LDR      r0,|L1.1072|
00019c  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
00019e  8800              LDRH     r0,[r0,#0]
0001a0  7829              LDRB     r1,[r5,#0]
0001a2  4408              ADD      r0,r0,r1
0001a4  49a2              LDR      r1,|L1.1072|
0001a6  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0001a8  8008              STRH     r0,[r1,#0]
;;;90     						varOperation.datOKLeng += ptrSaveBuff[0];    //记录不可拆卸的包长度
0001aa  489a              LDR      r0,|L1.1044|
0001ac  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
0001b0  7829              LDRB     r1,[r5,#0]
0001b2  4408              ADD      r0,r0,r1
0001b4  4997              LDR      r1,|L1.1044|
0001b6  f8a10096          STRH     r0,[r1,#0x96]
;;;91     						
;;;92     						OSMutexPost(CDMASendMutex);
0001ba  489c              LDR      r0,|L1.1068|
0001bc  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0001be  f7fffffe          BL       OSMutexPost
                  |L1.450|
;;;93     					}
;;;94     					Mem_free(ptrSaveBuff);
0001c2  4628              MOV      r0,r5
0001c4  f7fffffe          BL       Mem_free
0001c8  e251              B        |L1.1646|
                  |L1.458|
;;;95     				}
;;;96     			}
;;;97     			else  //单包处理
;;;98     			{
;;;99     				if(cmdNum < 100)
0001ca  2e64              CMP      r6,#0x64
0001cc  da2f              BGE      |L1.558|
;;;100    				{
;;;101    					OSMutexPend(CDMASendMutex,0,&err);
0001ce  aa05              ADD      r2,sp,#0x14
0001d0  2100              MOVS     r1,#0
0001d2  4896              LDR      r0,|L1.1068|
0001d4  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0001d6  f7fffffe          BL       OSMutexPend
;;;102    					
;;;103    					pPid[cmdNum - 1][1] = CAN1_RxMsg->Data[0];//得到指令的长度 + 1
0001da  7ae1              LDRB     r1,[r4,#0xb]
0001dc  1e70              SUBS     r0,r6,#1
0001de  4a95              LDR      r2,|L1.1076|
0001e0  f8520020          LDR      r0,[r2,r0,LSL #2]
0001e4  7041              STRB     r1,[r0,#1]
;;;104    					memcpy(&pPid[cmdNum - 1][2],&CAN1_RxMsg->Data[2],CAN1_RxMsg->Data[0]-1);
0001e6  7ae1              LDRB     r1,[r4,#0xb]
0001e8  1e4a              SUBS     r2,r1,#1
0001ea  1e71              SUBS     r1,r6,#1
0001ec  4b91              LDR      r3,|L1.1076|
0001ee  f8531021          LDR      r1,[r3,r1,LSL #2]
0001f2  1c88              ADDS     r0,r1,#2
0001f4  f104010d          ADD      r1,r4,#0xd
0001f8  f7fffffe          BL       __aeabi_memcpy
;;;105    					if(cmdNum == varOperation.pidNum)
0001fc  4885              LDR      r0,|L1.1044|
0001fe  f8b00078          LDRH     r0,[r0,#0x78]  ; varOperation
000202  42b0              CMP      r0,r6
000204  d106              BNE      |L1.532|
;;;106    					{
;;;107    						varOperation.pidSendFlag = 0;
000206  2000              MOVS     r0,#0
000208  4982              LDR      r1,|L1.1044|
00020a  f88100a3          STRB     r0,[r1,#0xa3]
;;;108    						varOperation.flagRecvOK  = 1;//数据采集完成
00020e  2001              MOVS     r0,#1
000210  f88100a6          STRB     r0,[r1,#0xa6]
                  |L1.532|
;;;109    					}
;;;110    						
;;;111    					cdmaDataToSend->datLength += CAN1_RxMsg->Data[0];
000214  4886              LDR      r0,|L1.1072|
000216  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000218  8800              LDRH     r0,[r0,#0]
00021a  7ae1              LDRB     r1,[r4,#0xb]
00021c  4408              ADD      r0,r0,r1
00021e  4984              LDR      r1,|L1.1072|
000220  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000222  8008              STRH     r0,[r1,#0]
;;;112    					OSMutexPost(CDMASendMutex);
000224  4881              LDR      r0,|L1.1068|
000226  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000228  f7fffffe          BL       OSMutexPost
                  |L1.556|
00022c  e1f5              B        |L1.1562|
                  |L1.558|
;;;113    				}
;;;114    				else if(CAN1_RxMsg->Data[0] > cmdLen)//正常的PID指令
00022e  7ae0              LDRB     r0,[r4,#0xb]
000230  4540              CMP      r0,r8
000232  dd7d              BLE      |L1.816|
;;;115    				{
;;;116    					OSMutexPend(CDMASendMutex,0,&err);
000234  aa05              ADD      r2,sp,#0x14
000236  2100              MOVS     r1,#0
000238  487c              LDR      r0,|L1.1068|
00023a  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00023c  f7fffffe          BL       OSMutexPend
;;;117    					// todo: 限制数据长度，不能越界
;;;118    					if(cmdNum != 236)
000240  2eec              CMP      r6,#0xec
000242  d051              BEQ      |L1.744|
;;;119    					{
;;;120    						pPid[cmdNum - 1][3]  = CAN1_RxMsg->Data[0] - cmdLen;
000244  7ae0              LDRB     r0,[r4,#0xb]
000246  eba00008          SUB      r0,r0,r8
00024a  b2c1              UXTB     r1,r0
00024c  1e70              SUBS     r0,r6,#1
00024e  4a79              LDR      r2,|L1.1076|
000250  f8520020          LDR      r0,[r2,r0,LSL #2]
000254  70c1              STRB     r1,[r0,#3]
;;;121    						if((cmdNum<12&&pPid[cmdNum - 1][0]<58)||(cmdNum>11&&cmdNum<60&&pPid[cmdNum - 1][0]<30))
000256  2e0c              CMP      r6,#0xc
000258  da06              BGE      |L1.616|
00025a  1e70              SUBS     r0,r6,#1
00025c  4611              MOV      r1,r2
00025e  f8510020          LDR      r0,[r1,r0,LSL #2]
000262  7800              LDRB     r0,[r0,#0]
000264  283a              CMP      r0,#0x3a
000266  db0a              BLT      |L1.638|
                  |L1.616|
000268  2e0b              CMP      r6,#0xb
00026a  dd38              BLE      |L1.734|
00026c  2e3c              CMP      r6,#0x3c
00026e  da36              BGE      |L1.734|
000270  1e70              SUBS     r0,r6,#1
000272  4970              LDR      r1,|L1.1076|
000274  f8510020          LDR      r0,[r1,r0,LSL #2]
000278  7800              LDRB     r0,[r0,#0]
00027a  281e              CMP      r0,#0x1e
00027c  da2f              BGE      |L1.734|
                  |L1.638|
;;;122    						{
;;;123    							memcpy(&pPid[cmdNum - 1][pPid[cmdNum - 1][0]],&CAN1_RxMsg->Data[cmdLen + 1],(CAN1_RxMsg->Data[0] - cmdLen));
00027e  1e73              SUBS     r3,r6,#1
000280  f8dfc1b0          LDR      r12,|L1.1076|
000284  f85cc023          LDR      r12,[r12,r3,LSL #2]
000288  f8dfe1a8          LDR      lr,|L1.1076|
00028c  f85e3023          LDR      r3,[lr,r3,LSL #2]
000290  781b              LDRB     r3,[r3,#0]
000292  eb0c0003          ADD      r0,r12,r3
000296  7ae3              LDRB     r3,[r4,#0xb]
000298  eba30208          SUB      r2,r3,r8
00029c  f104030b          ADD      r3,r4,#0xb
0002a0  f1080c01          ADD      r12,r8,#1
0002a4  eb03010c          ADD      r1,r3,r12
0002a8  f7fffffe          BL       __aeabi_memcpy
;;;124    							pPid[cmdNum - 1][0] += CAN1_RxMsg->Data[0] - cmdLen;
0002ac  1e70              SUBS     r0,r6,#1
0002ae  4961              LDR      r1,|L1.1076|
0002b0  f8510020          LDR      r0,[r1,r0,LSL #2]
0002b4  7800              LDRB     r0,[r0,#0]
0002b6  7ae1              LDRB     r1,[r4,#0xb]
0002b8  eba10108          SUB      r1,r1,r8
0002bc  4408              ADD      r0,r0,r1
0002be  b2c1              UXTB     r1,r0
0002c0  1e70              SUBS     r0,r6,#1
0002c2  4a5c              LDR      r2,|L1.1076|
0002c4  f8520020          LDR      r0,[r2,r0,LSL #2]
0002c8  7001              STRB     r1,[r0,#0]
;;;125    							cdmaDataToSend->datLength += CAN1_RxMsg->Data[0] - cmdLen;
0002ca  4859              LDR      r0,|L1.1072|
0002cc  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0002ce  8800              LDRH     r0,[r0,#0]
0002d0  7ae1              LDRB     r1,[r4,#0xb]
0002d2  eba10108          SUB      r1,r1,r8
0002d6  4408              ADD      r0,r0,r1
0002d8  4955              LDR      r1,|L1.1072|
0002da  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0002dc  8008              STRH     r0,[r1,#0]
                  |L1.734|
;;;126    						}
;;;127    						OSMutexPost(CDMASendMutex);
0002de  4853              LDR      r0,|L1.1068|
0002e0  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0002e2  f7fffffe          BL       OSMutexPost
                  |L1.742|
0002e6  e198              B        |L1.1562|
                  |L1.744|
;;;128    					}
;;;129    					else if(cmdNum == 236)	
0002e8  2eec              CMP      r6,#0xec
0002ea  d19f              BNE      |L1.556|
;;;130    					{
;;;131    						ptrSaveBuff = Mem_malloc(8);
0002ec  2008              MOVS     r0,#8
0002ee  f7fffffe          BL       Mem_malloc
0002f2  4605              MOV      r5,r0
;;;132    						ptrSaveBuff[0] = CAN1_RxMsg -> Data[0] + 4;
0002f4  7ae0              LDRB     r0,[r4,#0xb]
0002f6  1d00              ADDS     r0,r0,#4
0002f8  7028              STRB     r0,[r5,#0]
;;;133    						ptrSaveBuff[1] = 0x50;
0002fa  2050              MOVS     r0,#0x50
0002fc  7068              STRB     r0,[r5,#1]
;;;134    						ptrSaveBuff[2] = cmdNum - 200;
0002fe  f1a600c8          SUB      r0,r6,#0xc8
000302  70a8              STRB     r0,[r5,#2]
;;;135    						ptrSaveBuff[3] = CAN1_RxMsg -> Data[0];              //故障码长度
000304  7ae0              LDRB     r0,[r4,#0xb]
000306  70e8              STRB     r0,[r5,#3]
;;;136    						memcpy(&ptrSaveBuff[4],&CAN1_RxMsg->Data[1],CAN1_RxMsg->Data[0]);
000308  7ae2              LDRB     r2,[r4,#0xb]
00030a  f104010c          ADD      r1,r4,#0xc
00030e  1d28              ADDS     r0,r5,#4
000310  f7fffffe          BL       __aeabi_memcpy
;;;137    						
;;;138    						OSMutexPend(CDMASendMutex,0,&err);
000314  aa05              ADD      r2,sp,#0x14
000316  2100              MOVS     r1,#0
000318  4844              LDR      r0,|L1.1068|
00031a  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00031c  f7fffffe          BL       OSMutexPend
;;;139    								
;;;140    						memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrSaveBuff,ptrSaveBuff[0]);
000320  4943              LDR      r1,|L1.1072|
000322  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000324  684b              LDR      r3,[r1,#4]
000326  493b              LDR      r1,|L1.1044|
000328  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
00032c  311b              ADDS     r1,r1,#0x1b
00032e  e000              B        |L1.818|
                  |L1.816|
000330  e01c              B        |L1.876|
                  |L1.818|
000332  1858              ADDS     r0,r3,r1
000334  782a              LDRB     r2,[r5,#0]
000336  4629              MOV      r1,r5
000338  f7fffffe          BL       __aeabi_memcpy
;;;141    						cdmaDataToSend->datLength += ptrSaveBuff[0];
00033c  483c              LDR      r0,|L1.1072|
00033e  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000340  8800              LDRH     r0,[r0,#0]
000342  7829              LDRB     r1,[r5,#0]
000344  4408              ADD      r0,r0,r1
000346  493a              LDR      r1,|L1.1072|
000348  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00034a  8008              STRH     r0,[r1,#0]
;;;142    						varOperation.datOKLeng += ptrSaveBuff[0];    //记录不可拆卸的包长度
00034c  4831              LDR      r0,|L1.1044|
00034e  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
000352  7829              LDRB     r1,[r5,#0]
000354  4408              ADD      r0,r0,r1
000356  492f              LDR      r1,|L1.1044|
000358  f8a10096          STRH     r0,[r1,#0x96]
;;;143    						
;;;144    						OSMutexPost(CDMASendMutex);
00035c  4833              LDR      r0,|L1.1068|
00035e  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000360  f7fffffe          BL       OSMutexPost
;;;145    						Mem_free(ptrSaveBuff);
000364  4628              MOV      r0,r5
000366  f7fffffe          BL       Mem_free
                  |L1.874|
00036a  e156              B        |L1.1562|
                  |L1.876|
;;;146    					}
;;;147    				}
;;;148    				else if((CAN1_RxMsg->Data[0]==0x03)&&(CAN1_RxMsg->Data[1]==0x7F))
00036c  7ae0              LDRB     r0,[r4,#0xb]
00036e  2803              CMP      r0,#3
000370  d1b9              BNE      |L1.742|
000372  7b20              LDRB     r0,[r4,#0xc]
000374  287f              CMP      r0,#0x7f
000376  d1b6              BNE      |L1.742|
;;;149    				{
;;;150    					if(cmdNum == 201)                       //重汽清除故障码
000378  2ec9              CMP      r6,#0xc9
00037a  d13c              BNE      |L1.1014|
;;;151    					{	
;;;152    						Mem_free(CAN1_RxMsg);
00037c  4620              MOV      r0,r4
00037e  f7fffffe          BL       Mem_free
;;;153    						CAN1_RxMsg = OSQPend(canRecieveQ,50,&err); //延时收到清故障码结果
000382  aa05              ADD      r2,sp,#0x14
000384  2132              MOVS     r1,#0x32
000386  4826              LDR      r0,|L1.1056|
000388  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00038a  f7fffffe          BL       OSQPend
00038e  4604              MOV      r4,r0
;;;154    						OSMutexPend(CDMASendMutex,0,&err);
000390  aa05              ADD      r2,sp,#0x14
000392  2100              MOVS     r1,#0
000394  4825              LDR      r0,|L1.1068|
000396  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000398  f7fffffe          BL       OSMutexPend
;;;155    						if(err == OS_ERR_NONE)
00039c  f89d0014          LDRB     r0,[sp,#0x14]
0003a0  b9d0              CBNZ     r0,|L1.984|
;;;156    						{
;;;157    							if(CAN1_RxMsg->Data[1] == 0x54)	//清故障码成功
0003a2  7b20              LDRB     r0,[r4,#0xc]
0003a4  2854              CMP      r0,#0x54
0003a6  d10c              BNE      |L1.962|
;;;158    							{
;;;159    								pPid[100][0] = 4;
0003a8  2004              MOVS     r0,#4
0003aa  4922              LDR      r1,|L1.1076|
0003ac  f8d11190          LDR      r1,[r1,#0x190]  ; pPid
0003b0  7008              STRB     r0,[r1,#0]
;;;160    								pPid[100][3] = 0;
0003b2  2000              MOVS     r0,#0
0003b4  491f              LDR      r1,|L1.1076|
0003b6  f8d11190          LDR      r1,[r1,#0x190]  ; pPid
0003ba  70c8              STRB     r0,[r1,#3]
;;;161    								SendFaultCmd();
0003bc  f7fffffe          BL       SendFaultCmd
0003c0  e014              B        |L1.1004|
                  |L1.962|
;;;162    							}
;;;163    							else                            //清故障码失败
;;;164    							{
;;;165    								pPid[100][0] = 4;
0003c2  2004              MOVS     r0,#4
0003c4  491b              LDR      r1,|L1.1076|
0003c6  f8d11190          LDR      r1,[r1,#0x190]  ; pPid
0003ca  7008              STRB     r0,[r1,#0]
;;;166    								pPid[100][3] = 1;
0003cc  2001              MOVS     r0,#1
0003ce  4919              LDR      r1,|L1.1076|
0003d0  f8d11190          LDR      r1,[r1,#0x190]  ; pPid
0003d4  70c8              STRB     r0,[r1,#3]
0003d6  e009              B        |L1.1004|
                  |L1.984|
;;;167    							}										
;;;168    						}else                               //清故障码失败
;;;169    						{
;;;170    							pPid[100][0] = 4;
0003d8  2004              MOVS     r0,#4
0003da  4916              LDR      r1,|L1.1076|
0003dc  f8d11190          LDR      r1,[r1,#0x190]  ; pPid
0003e0  7008              STRB     r0,[r1,#0]
;;;171    							pPid[100][3] = 1;
0003e2  2001              MOVS     r0,#1
0003e4  4913              LDR      r1,|L1.1076|
0003e6  f8d11190          LDR      r1,[r1,#0x190]  ; pPid
0003ea  70c8              STRB     r0,[r1,#3]
                  |L1.1004|
;;;172    						}
;;;173    						OSMutexPost(CDMASendMutex);						
0003ec  480f              LDR      r0,|L1.1068|
0003ee  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0003f0  f7fffffe          BL       OSMutexPost
                  |L1.1012|
0003f4  e111              B        |L1.1562|
                  |L1.1014|
;;;174    					}
;;;175    					else if(cmdNum < 100)
0003f6  2e64              CMP      r6,#0x64
0003f8  da22              BGE      |L1.1088|
;;;176    						LogReport("\r\n05-ECU report:03 7F;PID:%d err:%d,%d,%d,%d,%d,%d;",cmdNum,
0003fa  7ca0              LDRB     r0,[r4,#0x12]
0003fc  7c61              LDRB     r1,[r4,#0x11]
0003fe  7c22              LDRB     r2,[r4,#0x10]
000400  7be3              LDRB     r3,[r4,#0xf]
000402  e9cd3200          STRD     r3,r2,[sp,#0]
000406  e9cd1002          STRD     r1,r0,[sp,#8]
00040a  7ba3              LDRB     r3,[r4,#0xe]
00040c  7b62              LDRB     r2,[r4,#0xd]
00040e  4631              MOV      r1,r6
000410  e012              B        |L1.1080|
000412  0000              DCW      0x0000
                  |L1.1044|
                          DCD      varOperation
                  |L1.1048|
                          DCD      canSendQ
                  |L1.1052|
                          DCD      dataToSend
                  |L1.1056|
                          DCD      canRecieveQ
                  |L1.1060|
                          DCD      freOBDLed
                  |L1.1064|
                          DCD      pidManyBag
                  |L1.1068|
                          DCD      CDMASendMutex
                  |L1.1072|
                          DCD      cdmaDataToSend
                  |L1.1076|
                          DCD      pPid
                  |L1.1080|
000438  a08f              ADR      r0,|L1.1656|
00043a  f7fffffe          BL       LogReport
00043e  e0ec              B        |L1.1562|
                  |L1.1088|
;;;177    							CAN1_RxMsg->Data[2],CAN1_RxMsg -> Data[3],CAN1_RxMsg->Data[4],CAN1_RxMsg->Data[5],
;;;178    							CAN1_RxMsg->Data[6],CAN1_RxMsg -> Data[7]);
;;;179    					else if((cmdNum == 234||cmdNum == 235) && strengthFuelFlash.modeOrder == 2)//重汽故障码读取  03 7F 78
000440  2eea              CMP      r6,#0xea
000442  d001              BEQ      |L1.1096|
000444  2eeb              CMP      r6,#0xeb
000446  d190              BNE      |L1.874|
                  |L1.1096|
000448  4898              LDR      r0,|L1.1708|
00044a  f890003a          LDRB     r0,[r0,#0x3a]  ; strengthFuelFlash
00044e  2802              CMP      r0,#2
000450  d18b              BNE      |L1.874|
;;;180    					{
;;;181    						Mem_free(CAN1_RxMsg);
000452  4620              MOV      r0,r4
000454  f7fffffe          BL       Mem_free
;;;182    						varOperation.pidRun = 0;//停止发送PID指令
000458  2000              MOVS     r0,#0
00045a  4995              LDR      r1,|L1.1712|
00045c  f8810095          STRB     r0,[r1,#0x95]
;;;183    						CAN1_RxMsg = OSQPend(canRecieveQ,2000,&err); // 接收到OBD回复
000460  aa05              ADD      r2,sp,#0x14
000462  f44f61fa          MOV      r1,#0x7d0
000466  4893              LDR      r0,|L1.1716|
000468  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00046a  f7fffffe          BL       OSQPend
00046e  4604              MOV      r4,r0
;;;184    						if(err == OS_ERR_NONE)
000470  f89d0014          LDRB     r0,[sp,#0x14]
000474  2800              CMP      r0,#0
000476  d1bd              BNE      |L1.1012|
;;;185    						{	
;;;186    							if(CAN1_RxMsg->Data[0] == 0x10)          // 多包处理
000478  7ae0              LDRB     r0,[r4,#0xb]
00047a  2810              CMP      r0,#0x10
00047c  d17e              BNE      |L1.1404|
;;;187    							{
;;;188    								ptrSaveBuff = Mem_malloc(CAN1_RxMsg->Data[1] + 10);      //申请的内存块足够长
00047e  7b21              LDRB     r1,[r4,#0xc]
000480  f101000a          ADD      r0,r1,#0xa
000484  f7fffffe          BL       Mem_malloc
000488  4605              MOV      r5,r0
;;;189    								if(ptrSaveBuff != NULL)
00048a  2d00              CMP      r5,#0
00048c  d077              BEQ      |L1.1406|
;;;190    								{
;;;191    									ptrSaveBuff[0] = CAN1_RxMsg -> Data[1] + 4;
00048e  7b20              LDRB     r0,[r4,#0xc]
000490  1d00              ADDS     r0,r0,#4
000492  7028              STRB     r0,[r5,#0]
;;;192    									ptrSaveBuff[1] = 0x50;
000494  2050              MOVS     r0,#0x50
000496  7068              STRB     r0,[r5,#1]
;;;193    									ptrSaveBuff[2] = cmdNum - 200;
000498  f1a600c8          SUB      r0,r6,#0xc8
00049c  70a8              STRB     r0,[r5,#2]
;;;194    									ptrSaveBuff[3] = CAN1_RxMsg -> Data[1];              //故障码长度
00049e  7b20              LDRB     r0,[r4,#0xc]
0004a0  70e8              STRB     r0,[r5,#3]
;;;195    									
;;;196    									memcpy(&ptrSaveBuff[4],&CAN1_RxMsg->Data[2],6);
0004a2  f8d4100d          LDR      r1,[r4,#0xd]
0004a6  6069              STR      r1,[r5,#4]
0004a8  f8b40011          LDRH     r0,[r4,#0x11]
0004ac  8128              STRH     r0,[r5,#8]
;;;197    									cmdManyPackNum = (CAN1_RxMsg->Data[1] - 6) % 7 == 0 ? (CAN1_RxMsg->Data[1] - 6)/7 : (CAN1_RxMsg->Data[1] - 6)/7 + 1;
0004ae  7b20              LDRB     r0,[r4,#0xc]
0004b0  1f80              SUBS     r0,r0,#6
0004b2  2107              MOVS     r1,#7
0004b4  fb90f2f1          SDIV     r2,r0,r1
0004b8  fb010012          MLS      r0,r1,r2,r0
0004bc  b920              CBNZ     r0,|L1.1224|
0004be  7b20              LDRB     r0,[r4,#0xc]
0004c0  1f80              SUBS     r0,r0,#6
0004c2  fb90f0f1          SDIV     r0,r0,r1
0004c6  e005              B        |L1.1236|
                  |L1.1224|
0004c8  7b20              LDRB     r0,[r4,#0xc]
0004ca  1f80              SUBS     r0,r0,#6
0004cc  2107              MOVS     r1,#7
0004ce  fb90f0f1          SDIV     r0,r0,r1
0004d2  1c40              ADDS     r0,r0,#1
                  |L1.1236|
0004d4  f00009ff          AND      r9,r0,#0xff
;;;198    									Mem_free(CAN1_RxMsg);
0004d8  4620              MOV      r0,r4
0004da  f7fffffe          BL       Mem_free
;;;199    									
;;;200    									dataToSend.pdat = pidManyBag;                        //发送 0x30 请求接下来的多包
0004de  4876              LDR      r0,|L1.1720|
0004e0  4976              LDR      r1,|L1.1724|
0004e2  6088              STR      r0,[r1,#8]  ; dataToSend
;;;201    									OBD_CAN_SendData(dataToSend.canId,dataToSend.ide,dataToSend.pdat);
0004e4  460b              MOV      r3,r1
0004e6  689a              LDR      r2,[r3,#8]  ; dataToSend
0004e8  6859              LDR      r1,[r3,#4]  ; dataToSend
0004ea  6818              LDR      r0,[r3,#0]  ; dataToSend
0004ec  f7fffffe          BL       OBD_CAN_SendData
;;;202    									
;;;203    									for(i = 0;i < cmdManyPackNum;i++)
0004f0  2700              MOVS     r7,#0
0004f2  e01a              B        |L1.1322|
                  |L1.1268|
;;;204    									{
;;;205    										CAN1_RxMsg = OSQPend(canRecieveQ,25,&err);       //接收多包
0004f4  aa05              ADD      r2,sp,#0x14
0004f6  2119              MOVS     r1,#0x19
0004f8  486e              LDR      r0,|L1.1716|
0004fa  6800              LDR      r0,[r0,#0]  ; canRecieveQ
0004fc  f7fffffe          BL       OSQPend
000500  4604              MOV      r4,r0
;;;206    										if(err == OS_ERR_NONE)
000502  f89d0014          LDRB     r0,[sp,#0x14]
000506  b968              CBNZ     r0,|L1.1316|
;;;207    										{
;;;208    											memcpy(&ptrSaveBuff[7*i + 10],&CAN1_RxMsg->Data[1],7);
000508  ebc700c7          RSB      r0,r7,r7,LSL #3
00050c  300a              ADDS     r0,r0,#0xa
00050e  1941              ADDS     r1,r0,r5
000510  68e2              LDR      r2,[r4,#0xc]
000512  600a              STR      r2,[r1,#0]
000514  8a22              LDRH     r2,[r4,#0x10]
000516  808a              STRH     r2,[r1,#4]
000518  7ca0              LDRB     r0,[r4,#0x12]
00051a  7188              STRB     r0,[r1,#6]
;;;209    											Mem_free(CAN1_RxMsg);
00051c  4620              MOV      r0,r4
00051e  f7fffffe          BL       Mem_free
000522  e000              B        |L1.1318|
                  |L1.1316|
;;;210    										}
;;;211    										else 
;;;212    											break;
000524  e003              B        |L1.1326|
                  |L1.1318|
000526  1c78              ADDS     r0,r7,#1              ;203
000528  b2c7              UXTB     r7,r0                 ;203
                  |L1.1322|
00052a  454f              CMP      r7,r9                 ;203
00052c  dbe2              BLT      |L1.1268|
                  |L1.1326|
00052e  bf00              NOP      
;;;213    									} 
;;;214    									if(i == cmdManyPackNum && varOperation.isDataFlow != 1)
000530  454f              CMP      r7,r9
000532  d12d              BNE      |L1.1424|
000534  485e              LDR      r0,|L1.1712|
000536  f890002d          LDRB     r0,[r0,#0x2d]  ; varOperation
00053a  2801              CMP      r0,#1
00053c  d028              BEQ      |L1.1424|
;;;215    									{
;;;216    										OSMutexPend(CDMASendMutex,0,&err);
00053e  aa05              ADD      r2,sp,#0x14
000540  2100              MOVS     r1,#0
000542  485f              LDR      r0,|L1.1728|
000544  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000546  f7fffffe          BL       OSMutexPend
;;;217    										
;;;218    										memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrSaveBuff,ptrSaveBuff[0]);
00054a  495e              LDR      r1,|L1.1732|
00054c  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
00054e  684b              LDR      r3,[r1,#4]
000550  4957              LDR      r1,|L1.1712|
000552  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
000556  311b              ADDS     r1,r1,#0x1b
000558  1858              ADDS     r0,r3,r1
00055a  782a              LDRB     r2,[r5,#0]
00055c  4629              MOV      r1,r5
00055e  f7fffffe          BL       __aeabi_memcpy
;;;219    										cdmaDataToSend->datLength += ptrSaveBuff[0];
000562  4858              LDR      r0,|L1.1732|
000564  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
000566  8800              LDRH     r0,[r0,#0]
000568  7829              LDRB     r1,[r5,#0]
00056a  4408              ADD      r0,r0,r1
00056c  4955              LDR      r1,|L1.1732|
00056e  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
000570  8008              STRH     r0,[r1,#0]
;;;220    										varOperation.datOKLeng += ptrSaveBuff[0];    //记录不可拆卸的包长度
000572  484f              LDR      r0,|L1.1712|
000574  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
000578  7829              LDRB     r1,[r5,#0]
00057a  e001              B        |L1.1408|
                  |L1.1404|
00057c  e00c              B        |L1.1432|
                  |L1.1406|
00057e  e048              B        |L1.1554|
                  |L1.1408|
000580  4408              ADD      r0,r0,r1
000582  494b              LDR      r1,|L1.1712|
000584  f8a10096          STRH     r0,[r1,#0x96]
;;;221    										
;;;222    										OSMutexPost(CDMASendMutex);
000588  484d              LDR      r0,|L1.1728|
00058a  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
00058c  f7fffffe          BL       OSMutexPost
                  |L1.1424|
;;;223    									}
;;;224    									Mem_free(ptrSaveBuff);
000590  4628              MOV      r0,r5
000592  f7fffffe          BL       Mem_free
000596  e03c              B        |L1.1554|
                  |L1.1432|
;;;225    								}
;;;226    							}else   //故障码是单包
;;;227    							{
;;;228    								ptrSaveBuff = Mem_malloc(8);
000598  2008              MOVS     r0,#8
00059a  f7fffffe          BL       Mem_malloc
00059e  4605              MOV      r5,r0
;;;229    								ptrSaveBuff[0] = CAN1_RxMsg -> Data[0] + 4;
0005a0  7ae0              LDRB     r0,[r4,#0xb]
0005a2  1d00              ADDS     r0,r0,#4
0005a4  7028              STRB     r0,[r5,#0]
;;;230    								ptrSaveBuff[1] = 0x50;
0005a6  2050              MOVS     r0,#0x50
0005a8  7068              STRB     r0,[r5,#1]
;;;231    								ptrSaveBuff[2] = cmdNum - 200;
0005aa  f1a600c8          SUB      r0,r6,#0xc8
0005ae  70a8              STRB     r0,[r5,#2]
;;;232    								ptrSaveBuff[3] = CAN1_RxMsg -> Data[0];              //故障码长度
0005b0  7ae0              LDRB     r0,[r4,#0xb]
0005b2  70e8              STRB     r0,[r5,#3]
;;;233     								memcpy(&ptrSaveBuff[4],&CAN1_RxMsg->Data[1],CAN1_RxMsg->Data[0]);
0005b4  7ae2              LDRB     r2,[r4,#0xb]
0005b6  f104010c          ADD      r1,r4,#0xc
0005ba  1d28              ADDS     r0,r5,#4
0005bc  f7fffffe          BL       __aeabi_memcpy
;;;234    								
;;;235    								OSMutexPend(CDMASendMutex,0,&err);
0005c0  aa05              ADD      r2,sp,#0x14
0005c2  2100              MOVS     r1,#0
0005c4  483e              LDR      r0,|L1.1728|
0005c6  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
0005c8  f7fffffe          BL       OSMutexPend
;;;236    										
;;;237    								memcpy(&cdmaDataToSend->data[FRAME_HEAD_LEN + varOperation.datOKLeng],ptrSaveBuff,ptrSaveBuff[0]);
0005cc  493d              LDR      r1,|L1.1732|
0005ce  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0005d0  684b              LDR      r3,[r1,#4]
0005d2  4937              LDR      r1,|L1.1712|
0005d4  f8b11096          LDRH     r1,[r1,#0x96]  ; varOperation
0005d8  311b              ADDS     r1,r1,#0x1b
0005da  1858              ADDS     r0,r3,r1
0005dc  782a              LDRB     r2,[r5,#0]
0005de  4629              MOV      r1,r5
0005e0  f7fffffe          BL       __aeabi_memcpy
;;;238    								cdmaDataToSend->datLength += ptrSaveBuff[0];
0005e4  4837              LDR      r0,|L1.1732|
0005e6  6800              LDR      r0,[r0,#0]  ; cdmaDataToSend
0005e8  8800              LDRH     r0,[r0,#0]
0005ea  7829              LDRB     r1,[r5,#0]
0005ec  4408              ADD      r0,r0,r1
0005ee  4935              LDR      r1,|L1.1732|
0005f0  6809              LDR      r1,[r1,#0]  ; cdmaDataToSend
0005f2  8008              STRH     r0,[r1,#0]
;;;239    								varOperation.datOKLeng += ptrSaveBuff[0];    //记录不可拆卸的包长度
0005f4  482e              LDR      r0,|L1.1712|
0005f6  f8b00096          LDRH     r0,[r0,#0x96]  ; varOperation
0005fa  7829              LDRB     r1,[r5,#0]
0005fc  4408              ADD      r0,r0,r1
0005fe  492c              LDR      r1,|L1.1712|
000600  f8a10096          STRH     r0,[r1,#0x96]
;;;240    								
;;;241    								OSMutexPost(CDMASendMutex);
000604  482e              LDR      r0,|L1.1728|
000606  6800              LDR      r0,[r0,#0]  ; CDMASendMutex
000608  f7fffffe          BL       OSMutexPost
;;;242    								Mem_free(ptrSaveBuff);
00060c  4628              MOV      r0,r5
00060e  f7fffffe          BL       Mem_free
                  |L1.1554|
;;;243    							}
;;;244    							varOperation.pidRun = 1;   //启动 PID 向 OBD 发送指令
000612  2001              MOVS     r0,#1
000614  4926              LDR      r1,|L1.1712|
000616  f8810095          STRB     r0,[r1,#0x95]
                  |L1.1562|
;;;245    						}
;;;246    					}
;;;247    				}
;;;248    				Mem_free(CAN1_RxMsg);
00061a  4620              MOV      r0,r4
00061c  f7fffffe          BL       Mem_free
                  |L1.1568|
000620  e025              B        |L1.1646|
                  |L1.1570|
;;;249    			}
;;;250    		}
;;;251    		else
;;;252    		{
;;;253    			LogReport("\r\n04 - PIDcmd don't report:%d;",cmdNum);//发送 PID 指令，ECU 不回复
000622  4631              MOV      r1,r6
000624  a028              ADR      r0,|L1.1736|
000626  f7fffffe          BL       LogReport
;;;254    			pidErrCount ++;
00062a  f10b0001          ADD      r0,r11,#1
00062e  f0000bff          AND      r11,r0,#0xff
;;;255    			if(pidErrCount>5)//连续5条数据发不出去
000632  f1bb0f05          CMP      r11,#5
000636  dd1a              BLE      |L1.1646|
;;;256    			{
;;;257    				varOperation.flagCAN = 0;//CAN 数据流不通
000638  2000              MOVS     r0,#0
00063a  491d              LDR      r1,|L1.1712|
00063c  f88100a4          STRB     r0,[r1,#0xa4]
;;;258    				freOBDLed = LEDFAST; 
000640  20c8              MOVS     r0,#0xc8
000642  4929              LDR      r1,|L1.1768|
000644  8008              STRH     r0,[r1,#0]
;;;259    				pidErrCount = 6;
000646  f04f0b06          MOV      r11,#6
;;;260    				varOperation.pidRun = 0;
00064a  2000              MOVS     r0,#0
00064c  4918              LDR      r1,|L1.1712|
00064e  f8810095          STRB     r0,[r1,#0x95]
;;;261    				do{
000652  bf00              NOP      
                  |L1.1620|
;;;262    					can1_Txbuff = OSQAccept(canSendQ,&err);//清空消息队列里的消息
000654  a905              ADD      r1,sp,#0x14
000656  4825              LDR      r0,|L1.1772|
000658  6800              LDR      r0,[r0,#0]  ; canSendQ
00065a  f7fffffe          BL       OSQAccept
00065e  4682              MOV      r10,r0
;;;263    					Mem_free(can1_Txbuff);
000660  4650              MOV      r0,r10
000662  f7fffffe          BL       Mem_free
;;;264    				}while(err == OS_ERR_NONE);				
000666  f89d0014          LDRB     r0,[sp,#0x14]
00066a  2800              CMP      r0,#0
00066c  d0f2              BEQ      |L1.1620|
                  |L1.1646|
;;;265    			}
;;;266    		}
;;;267    		Mem_free(can1_Txbuff);      //释放内存块
00066e  4650              MOV      r0,r10
000670  f7fffffe          BL       Mem_free
000674  bf00              NOP                            ;31
                  |L1.1654|
000676  e4d0              B        |L1.26|
;;;268    	}
;;;269    }
;;;270    
                          ENDP

                  |L1.1656|
000678  0d0a3035          DCB      "\r\n05-ECU report:03 7F;PID:%d err:%d,%d,%d,%d,%d,%d;",0
00067c  2d454355
000680  20726570
000684  6f72743a
000688  30332037
00068c  463b5049
000690  443a2564
000694  20657272
000698  3a25642c
00069c  25642c25
0006a0  642c2564
0006a4  2c25642c
0006a8  25643b00
                  |L1.1708|
                          DCD      strengthFuelFlash
                  |L1.1712|
                          DCD      varOperation
                  |L1.1716|
                          DCD      canRecieveQ
                  |L1.1720|
                          DCD      pidManyBag
                  |L1.1724|
                          DCD      dataToSend
                  |L1.1728|
                          DCD      CDMASendMutex
                  |L1.1732|
                          DCD      cdmaDataToSend
                  |L1.1736|
0006c8  0d0a3034          DCB      "\r\n04 - PIDcmd don't report:%d;",0
0006cc  202d2050
0006d0  4944636d
0006d4  6420646f
0006d8  6e277420
0006dc  7265706f
0006e0  72743a25
0006e4  643b00  
0006e7  00                DCB      0
                  |L1.1768|
                          DCD      freOBDLed
                  |L1.1772|
                          DCD      canSendQ

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  dataToSend
                          %        12

                          AREA ||.data||, DATA, ALIGN=0

                  pidManyBag
000000  30000000          DCB      0x30,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\OBD\\OBDTask.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REV16|
#line 465 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.2.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_OBDTask_c_bbcd6d9f____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____REVSH|
#line 480
|__asm___9_OBDTask_c_bbcd6d9f____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bbcd6d9f____RRX|
#line 667
|__asm___9_OBDTask_c_bbcd6d9f____RRX| PROC
#line 668

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
