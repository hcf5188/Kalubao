; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\obdtask.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\obdtask.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\OBD -I..\SYSTEM -I..\USER -I..\LIB\inc -I..\UCOSII\CONFIG -I..\UCOSII\PORT -I..\UCOSII\CORE -I..\HAEDWARE -I..\GPS -I..\CDMA -I..\DEAL -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\obdtask.crf ..\OBD\OBDTask.c]
                          THUMB

                          AREA ||i.CANTestChannel||, CODE, READONLY, ALIGN=2

                  CANTestChannel PROC
;;;7      
;;;8      void CANTestChannel(void )
000000  b510              PUSH     {r4,lr}
;;;9      {
;;;10     	int i;
;;;11     
;;;12     	dataToSend.testIsOK = 0;
000002  2000              MOVS     r0,#0
000004  4925              LDR      r1,|L1.156|
000006  7208              STRB     r0,[r1,#8]
;;;13     	
;;;14     	for(i=0;i<NUMOFCAN;i++)
000008  2400              MOVS     r4,#0
00000a  e043              B        |L1.148|
                  |L1.12|
;;;15     	{
;;;16     		CAN1_BaudSet(CANSearchLib[i].canBaud);
00000c  4924              LDR      r1,|L1.160|
00000e  eb0101c4          ADD      r1,r1,r4,LSL #3
000012  7948              LDRB     r0,[r1,#5]
000014  f7fffffe          BL       CAN1_BaudSet
;;;17     		CAN1_ClearFilter();
000018  f7fffffe          BL       CAN1_ClearFilter
;;;18     		
;;;19     		CAN1_TxMsg.IDE     = CANSearchLib[i].canIde;
00001c  4820              LDR      r0,|L1.160|
00001e  eb0000c4          ADD      r0,r0,r4,LSL #3
000022  7900              LDRB     r0,[r0,#4]
000024  491f              LDR      r1,|L1.164|
000026  7208              STRB     r0,[r1,#8]
;;;20     		CAN1_TxMsg.StdId   = CANSearchLib[i].canId.dword;
000028  481d              LDR      r0,|L1.160|
00002a  f8500034          LDR      r0,[r0,r4,LSL #3]
00002e  6008              STR      r0,[r1,#0]  ; CAN1_TxMsg
;;;21     		CAN1_TxMsg.ExtId   = CANSearchLib[i].canId.dword;
000030  481b              LDR      r0,|L1.160|
000032  f8500034          LDR      r0,[r0,r4,LSL #3]
000036  6048              STR      r0,[r1,#4]  ; CAN1_TxMsg
;;;22     		CAN1_TxMsg.DLC     = 0x08;
000038  2008              MOVS     r0,#8
00003a  7288              STRB     r0,[r1,#0xa]
;;;23     		
;;;24     		CAN1_TxMsg.Data[0] = 0x02;
00003c  2002              MOVS     r0,#2
00003e  72c8              STRB     r0,[r1,#0xb]
;;;25     		CAN1_TxMsg.Data[1] = 0x01;
000040  2101              MOVS     r1,#1
000042  4818              LDR      r0,|L1.164|
000044  7301              STRB     r1,[r0,#0xc]
;;;26     		CAN1_TxMsg.Data[2] = 0x0D;
000046  210d              MOVS     r1,#0xd
000048  7341              STRB     r1,[r0,#0xd]
;;;27     		CAN1_TxMsg.Data[3] = 0x00;
00004a  2100              MOVS     r1,#0
00004c  7381              STRB     r1,[r0,#0xe]
;;;28     		CAN1_TxMsg.Data[4] = 0x00;
00004e  73c1              STRB     r1,[r0,#0xf]
;;;29     		CAN1_TxMsg.Data[5] = 0x00;
000050  7401              STRB     r1,[r0,#0x10]
;;;30     		CAN1_TxMsg.Data[6] = 0x00;
000052  7441              STRB     r1,[r0,#0x11]
;;;31     		CAN1_TxMsg.Data[7] = 0x00;
000054  7481              STRB     r1,[r0,#0x12]
;;;32     		CAN_Transmit(CAN1,&CAN1_TxMsg);
000056  4601              MOV      r1,r0
000058  4813              LDR      r0,|L1.168|
00005a  f7fffffe          BL       CAN_Transmit
;;;33     
;;;34     		dataToSend.canId = CANSearchLib[i].canId.dword;
00005e  4810              LDR      r0,|L1.160|
000060  f8500034          LDR      r0,[r0,r4,LSL #3]
000064  490d              LDR      r1,|L1.156|
000066  6008              STR      r0,[r1,#0]  ; dataToSend
;;;35     		dataToSend.ide   = CANSearchLib[i].canIde;
000068  480d              LDR      r0,|L1.160|
00006a  eb0000c4          ADD      r0,r0,r4,LSL #3
00006e  7900              LDRB     r0,[r0,#4]
000070  6048              STR      r0,[r1,#4]  ; dataToSend
;;;36     		OSTimeDlyHMSM(0,0,0,100);   //仿真板的回复时间比较长，有的达到60ms以上，故需要延时时间长一点。
000072  2364              MOVS     r3,#0x64
000074  2200              MOVS     r2,#0
000076  4611              MOV      r1,r2
000078  4610              MOV      r0,r2
00007a  f7fffffe          BL       OSTimeDlyHMSM
;;;37     		if(dataToSend.testIsOK == 1)//CAN数据测试通过
00007e  4807              LDR      r0,|L1.156|
000080  7a00              LDRB     r0,[r0,#8]  ; dataToSend
000082  2801              CMP      r0,#1
000084  d100              BNE      |L1.136|
;;;38     			break;
000086  e007              B        |L1.152|
                  |L1.136|
;;;39     		else if(i == (NUMOFCAN - 1))
000088  2c03              CMP      r4,#3
00008a  d102              BNE      |L1.146|
;;;40     			dataToSend.testIsOK = 2;
00008c  2002              MOVS     r0,#2
00008e  4903              LDR      r1,|L1.156|
000090  7208              STRB     r0,[r1,#8]
                  |L1.146|
000092  1c64              ADDS     r4,r4,#1              ;14
                  |L1.148|
000094  2c04              CMP      r4,#4                 ;14
000096  dbb9              BLT      |L1.12|
                  |L1.152|
000098  bf00              NOP                            ;38
;;;41     	}
;;;42     }
00009a  bd10              POP      {r4,pc}
;;;43     uint8_t PID01[8]   = {0x02,0x1A,0x94,0x00,0x00,0x00,0x00,0x00};
                          ENDP

                  |L1.156|
                          DCD      dataToSend
                  |L1.160|
                          DCD      CANSearchLib
                  |L1.164|
                          DCD      CAN1_TxMsg
                  |L1.168|
                          DCD      0x40006400

                          AREA ||i.OBDTask||, CODE, READONLY, ALIGN=2

                  OBDTask PROC
;;;55     extern uint16_t freOBDLed;
;;;56     void OBDTask(void *pdata)
000000  b508              PUSH     {r3,lr}
;;;57     {
;;;58     	INT8U     err;
;;;59     	CanRxMsg* CAN1_RxMsg;
;;;60     	static uint8_t index = 0;
;;;61     	CAN1Config();
000002  f7fffffe          BL       CAN1Config
;;;62     	canRecieveQ = OSQCreate(&canRecBuf[0],CANRECBUF_SIZE);
000006  210a              MOVS     r1,#0xa
000008  4840              LDR      r0,|L2.268|
00000a  f7fffffe          BL       OSQCreate
00000e  4940              LDR      r1,|L2.272|
000010  6008              STR      r0,[r1,#0]  ; canRecieveQ
;;;63     	
;;;64     	OSTimeDlyHMSM(0,0,6,0);//CDMA还没启动，此处需要延时
000012  2300              MOVS     r3,#0
000014  2206              MOVS     r2,#6
000016  4619              MOV      r1,r3
000018  4618              MOV      r0,r3
00001a  f7fffffe          BL       OSTimeDlyHMSM
;;;65     	
;;;66     //	CANTestChannel();
;;;67     	
;;;68     	dataToSend.canId = 0x18DA10FB;
00001e  483d              LDR      r0,|L2.276|
000020  493d              LDR      r1,|L2.280|
000022  6008              STR      r0,[r1,#0]  ; dataToSend
;;;69     	dataToSend.ide   = CAN_ID_EXT;
000024  2004              MOVS     r0,#4
000026  6048              STR      r0,[r1,#4]  ; dataToSend
;;;70     	dataToSend.testIsOK = 1; 
000028  2001              MOVS     r0,#1
00002a  7208              STRB     r0,[r1,#8]
;;;71     	dataToSend.pdat = PID01;
00002c  483b              LDR      r0,|L2.284|
00002e  60c8              STR      r0,[r1,#0xc]  ; dataToSend
;;;72     	
;;;73     	while(1)
000030  e06a              B        |L2.264|
                  |L2.50|
;;;74     	{
;;;75     		CAN1_RxMsg = OSQPend(canRecieveQ,200,&err);
000032  466a              MOV      r2,sp
000034  21c8              MOVS     r1,#0xc8
000036  4836              LDR      r0,|L2.272|
000038  6800              LDR      r0,[r0,#0]  ; canRecieveQ
00003a  f7fffffe          BL       OSQPend
00003e  4604              MOV      r4,r0
;;;76     		if(err == OS_ERR_NONE)
000040  f89d0000          LDRB     r0,[sp,#0]
000044  bb38              CBNZ     r0,|L2.150|
;;;77     		{
;;;78     			freOBDLed = 200;
000046  20c8              MOVS     r0,#0xc8
000048  4935              LDR      r1,|L2.288|
00004a  8008              STRH     r0,[r1,#0]
;;;79     			if(dataToSend.testIsOK == 1)
00004c  4832              LDR      r0,|L2.280|
00004e  7a00              LDRB     r0,[r0,#8]  ; dataToSend
000050  2801              CMP      r0,#1
000052  d156              BNE      |L2.258|
;;;80     			{   
;;;81     				if(CAN1_RxMsg->Data[0] == 0x10)
000054  7ae0              LDRB     r0,[r4,#0xb]
000056  2810              CMP      r0,#0x10
000058  d10e              BNE      |L2.120|
;;;82     				{
;;;83     					dataToSend.pdat = PID01_1;
00005a  4832              LDR      r0,|L2.292|
00005c  492e              LDR      r1,|L2.280|
00005e  60c8              STR      r0,[r1,#0xc]  ; dataToSend
;;;84     					OBD_CAN_SendData(dataToSend);
000060  4608              MOV      r0,r1
000062  c80f              LDM      r0,{r0-r3}
000064  f7fffffe          BL       OBD_CAN_SendData
;;;85     					memcpy(startBuffSave,CAN1_RxMsg->Data,8);
000068  482f              LDR      r0,|L2.296|
00006a  f8d4100b          LDR      r1,[r4,#0xb]
00006e  6001              STR      r1,[r0,#0]  ; startBuffSave
000070  f8d4100f          LDR      r1,[r4,#0xf]
000074  6041              STR      r1,[r0,#4]  ; startBuffSave
000076  e044              B        |L2.258|
                  |L2.120|
;;;86     				}else if(CAN1_RxMsg->Data[0] > 0x20)
000078  7ae0              LDRB     r0,[r4,#0xb]
00007a  2820              CMP      r0,#0x20
00007c  dd41              BLE      |L2.258|
;;;87     				{
;;;88     					memcpy(&startBuffSave[(CAN1_RxMsg->Data[0] - 0x20) * 8],CAN1_RxMsg->Data,8);
00007e  7ae0              LDRB     r0,[r4,#0xb]
000080  3820              SUBS     r0,r0,#0x20
000082  4929              LDR      r1,|L2.296|
000084  eb0100c0          ADD      r0,r1,r0,LSL #3
000088  f8d4100b          LDR      r1,[r4,#0xb]
00008c  6001              STR      r1,[r0,#0]
00008e  f8d4100f          LDR      r1,[r4,#0xf]
000092  6041              STR      r1,[r0,#4]
000094  e035              B        |L2.258|
                  |L2.150|
;;;89     				}
;;;90     			}
;;;91     		}
;;;92     		else if(err == OS_ERR_TIMEOUT)
000096  f89d0000          LDRB     r0,[sp,#0]
00009a  280a              CMP      r0,#0xa
00009c  d131              BNE      |L2.258|
;;;93     		{
;;;94     			if(dataToSend.testIsOK == 1)
00009e  481e              LDR      r0,|L2.280|
0000a0  7a00              LDRB     r0,[r0,#8]  ; dataToSend
0000a2  2801              CMP      r0,#1
0000a4  d12d              BNE      |L2.258|
;;;95     			{
;;;96     				switch(index)
0000a6  4821              LDR      r0,|L2.300|
0000a8  7800              LDRB     r0,[r0,#0]  ; index
0000aa  b130              CBZ      r0,|L2.186|
0000ac  2801              CMP      r0,#1
0000ae  d008              BEQ      |L2.194|
0000b0  2802              CMP      r0,#2
0000b2  d00a              BEQ      |L2.202|
0000b4  2803              CMP      r0,#3
0000b6  d110              BNE      |L2.218|
0000b8  e00b              B        |L2.210|
                  |L2.186|
;;;97     				{
;;;98     					case 0:dataToSend.pdat = PID01;break;
0000ba  4818              LDR      r0,|L2.284|
0000bc  4916              LDR      r1,|L2.280|
0000be  60c8              STR      r0,[r1,#0xc]  ; dataToSend
0000c0  e00b              B        |L2.218|
                  |L2.194|
;;;99     					case 1:dataToSend.pdat = PID02;break;
0000c2  481b              LDR      r0,|L2.304|
0000c4  4914              LDR      r1,|L2.280|
0000c6  60c8              STR      r0,[r1,#0xc]  ; dataToSend
0000c8  e007              B        |L2.218|
                  |L2.202|
;;;100    					case 2:dataToSend.pdat = PID03;break;
0000ca  481a              LDR      r0,|L2.308|
0000cc  4912              LDR      r1,|L2.280|
0000ce  60c8              STR      r0,[r1,#0xc]  ; dataToSend
0000d0  e003              B        |L2.218|
                  |L2.210|
;;;101    					case 3:dataToSend.pdat = PID04;break;
0000d2  4819              LDR      r0,|L2.312|
0000d4  4910              LDR      r1,|L2.280|
0000d6  60c8              STR      r0,[r1,#0xc]  ; dataToSend
0000d8  bf00              NOP      
                  |L2.218|
0000da  bf00              NOP                            ;98
;;;102    				}
;;;103    				OBD_CAN_SendData(dataToSend);
0000dc  480e              LDR      r0,|L2.280|
0000de  c80f              LDM      r0,{r0-r3}
0000e0  f7fffffe          BL       OBD_CAN_SendData
;;;104    				memset(startBuffSave,0,45);
0000e4  212d              MOVS     r1,#0x2d
0000e6  4810              LDR      r0,|L2.296|
0000e8  f7fffffe          BL       __aeabi_memclr4
;;;105    				index++;
0000ec  480f              LDR      r0,|L2.300|
0000ee  7800              LDRB     r0,[r0,#0]  ; index
0000f0  1c40              ADDS     r0,r0,#1
0000f2  490e              LDR      r1,|L2.300|
0000f4  7008              STRB     r0,[r1,#0]
;;;106    				if(index >= 4)
0000f6  4608              MOV      r0,r1
0000f8  7800              LDRB     r0,[r0,#0]  ; index
0000fa  2804              CMP      r0,#4
0000fc  db01              BLT      |L2.258|
;;;107    					index = 0;
0000fe  2000              MOVS     r0,#0
000100  7008              STRB     r0,[r1,#0]
                  |L2.258|
;;;108    			}
;;;109    		}
;;;110    		
;;;111    		Mem_free(CAN1_RxMsg);//处理完以后，要释放内存块
000102  4620              MOV      r0,r4
000104  f7fffffe          BL       Mem_free
                  |L2.264|
000108  e793              B        |L2.50|
;;;112    	}
;;;113    }
;;;114    
                          ENDP

00010a  0000              DCW      0x0000
                  |L2.268|
                          DCD      canRecBuf
                  |L2.272|
                          DCD      canRecieveQ
                  |L2.276|
                          DCD      0x18da10fb
                  |L2.280|
                          DCD      dataToSend
                  |L2.284|
                          DCD      PID01
                  |L2.288|
                          DCD      freOBDLed
                  |L2.292|
                          DCD      PID01_1
                  |L2.296|
                          DCD      startBuffSave
                  |L2.300|
                          DCD      index
                  |L2.304|
                          DCD      PID02
                  |L2.308|
                          DCD      PID03
                  |L2.312|
                          DCD      PID04

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  CAN1_TxMsg
                          %        20
                  dataToSend
                          %        16
                  canRecBuf
                          %        40
                  startBuffSave
                          %        50

                          AREA ||.data||, DATA, ALIGN=2

                  PID01
000000  021a9400          DCB      0x02,0x1a,0x94,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  PID01_1
000008  30000000          DCB      0x30,0x00,0x00,0x00
00000c  00000000          DCB      0x00,0x00,0x00,0x00
                  PID02
000010  03210086          DCB      0x03,0x21,0x00,0x86
000014  00000000          DCB      0x00,0x00,0x00,0x00
                  PID03
000018  03210085          DCB      0x03,0x21,0x00,0x85
00001c  00000000          DCB      0x00,0x00,0x00,0x00
                  PID04
000020  03210061          DCB      0x03,0x21,0x00,0x61
000024  00000000          DCB      0x00,0x00,0x00,0x00
                  canRecieveQ
                          DCD      0x00000000
                  index
00002c  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\OBD\\OBDTask.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bb9fee60____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_OBDTask_c_bb9fee60____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_OBDTask_c_bb9fee60____REVSH|
#line 144
|__asm___9_OBDTask_c_bb9fee60____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
